var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.675,1,1.422]],["body/components/AboutPage.html",[0,1.243,1,2.552,2,2.049,3,0.096,4,0.096,5,1.064,6,1.56,7,1.56,8,1.56,9,0.086,10,3.696,11,0.552,12,3.327,13,1.944,14,1.244,15,2.106,16,2.706,17,0.989,18,3.282,19,2.871,20,2.164,21,6.678,22,2.164,23,5.816,24,0.321,25,0.808,26,5.887,27,1.048,28,2.923,29,5.816,30,1.395,31,3.696,32,4.484,33,1.332,34,5.816,35,1.048,36,0.01,37,0.716,38,0.492,39,0.643,40,4.806,41,5.127,42,1.475,43,5.127,44,3.192,45,4.193,46,2.049,47,2.357,48,2.357,49,4.673,50,5.816,51,5.816,52,2.503,53,5.127,54,3.839,55,4.335,56,5.887,57,1.233,58,8.038,59,3.524,60,0.947,61,1.799,62,5.816,63,1.002,64,4.193,65,5.816,66,6.358,67,1.475,68,4.335,69,5.816,70,1.922,71,5.816,72,1.013,73,1.038,74,3.524,75,4.666,76,0.412,77,0.383,78,2.93,79,2.93,80,0.096,81,0.262,82,0.947,83,2.399,84,3.696,85,1.944,86,4.193,87,2.132,88,3.696,89,3.696,90,4.193,91,4.193,92,7.212,93,4.193,94,5.816,95,5.816,96,5.816,97,5.816,98,5.127,99,2.301,100,2.757,101,3.591,102,2.132,103,2.213,104,2.583,105,1.987,106,2.965,107,1.751,108,3.696,109,1.203,110,2.768,111,2.768,112,3.07,113,2.014,114,3.696,115,3.505,116,2.724,117,3.547,118,3.477,119,2.132,120,1.365,121,3.369,122,2.428,123,2.213,124,2.583,125,4.673,126,2.132,127,2.29,128,1.923,129,4.193,130,2.399,131,1.605,132,2.628,133,2.301,134,3.177,135,2.507,136,2.628,137,3.992,138,3.992,139,3.477,140,3.477,141,2.768,142,3.125,143,2.507,144,2.399,145,4.521,146,2.213,147,2.628,148,2.507,149,2.132,150,2.132,151,2.507,152,2.507,153,2.768,154,1.117,155,2.164,156,2.106,157,1.401,158,1.56,159,4.193,160,1.56,161,1.401,162,1.56,163,1.401,164,1.56,165,1.365,166,1.173,167,1.56,168,1.439,169,1.894,170,2.485,171,1.401,172,2.684,173,1.365,174,1.56,175,1.331,176,1.56,177,1.401,178,0.919,179,2.164,180,1.365,181,1.56,182,1.365,183,0.942,184,1.56,185,1.401,186,1.185,187,1.401,188,1.365,189,1.56,190,1.401,191,1.365,192,1.56,193,1.401,194,1.265,195,1.365,196,1.56,197,1.365,198,1.56,199,1.365,200,1.56,201,1.439,202,1.245,203,1.401,204,1.365,205,1.56,206,1.401,207,1.365,208,1.09,209,1.145,210,1.478,211,1.365,212,1.518,213,1.56,214,0.006,215,0.006]],["title/modules/AboutPageModule.html",[216,1.135,217,3.255]],["body/modules/AboutPageModule.html",[1,2.863,3,0.147,4,0.147,9,0.132,36,0.01,76,0.63,77,0.588,80,0.147,81,0.403,154,1.714,214,0.008,215,0.008,216,1.673,217,6.751,218,2.15,219,2.951,220,4.019,221,3.157,222,2.857,223,2.267,224,5.673,225,5.673,226,5.673,227,6.144,228,4.168,229,3.762,230,3.157,231,2.395,232,6.435,233,2.776,234,2.776,235,3.396,236,3.05,237,3.396,238,2.533,239,3.271,240,2.15,241,3.396,242,5.673,243,4.796]],["title/modules/AboutPageRoutingModule.html",[216,1.135,227,3.052]],["body/modules/AboutPageRoutingModule.html",[0,1.055,1,2.585,3,0.156,4,0.156,9,0.14,36,0.01,76,0.595,77,0.624,80,0.156,81,0.427,214,0.008,215,0.008,218,2.281,223,2.406,227,5.548,233,2.472,234,2.875,242,6.018,244,6.827,245,3.603,246,3.614,247,4.037,248,2.406,249,1.571,250,2.008,251,3.747]],["title/injectables/ApiService.html",[252,0.89,253,2.143]],["body/injectables/ApiService.html",[3,0.082,4,0.082,9,0.074,11,0.624,24,0.275,27,0.938,30,1.087,31,3.162,32,3.846,33,1.481,35,1.517,36,0.01,37,0.758,38,0.626,39,0.966,40,4.268,42,1.705,44,2.857,55,6.479,57,1.606,59,4.686,60,1.401,63,1.256,70,2.232,72,1.799,73,2.066,76,0.506,77,0.328,79,2.506,80,0.082,81,0.225,82,1.415,85,2.857,107,3.109,116,2.363,127,2.647,214,0.005,215,0.005,250,2.579,252,1.061,253,3.298,254,1.454,255,3.162,256,1.652,257,3.112,258,2.189,259,5.205,260,5.205,261,4.183,262,5.402,263,4.698,264,4.698,265,3.109,266,3.846,267,3.587,268,1.881,269,1.493,270,3.637,271,2.387,272,2.857,273,3.436,274,5.205,275,5.693,276,2.262,277,3.587,278,2.646,279,7.87,280,8.148,281,3.69,282,2.924,283,3.098,284,5.205,285,3.587,286,5.499,287,5.205,288,3.587,289,4.437,290,5.205,291,7.87,292,6.072,293,3.587,294,5.402,295,6.324,296,4.183,297,3.587,298,5.205,299,7.071,300,3.587,301,2.985,302,5.205,303,3.587,304,5.205,305,3.587,306,1.055,307,2.673,308,3.162,309,3.587,310,2.673,311,1.264,312,1.231,313,1.493,314,3.587,315,3.587,316,3.587,317,3.587,318,3.587,319,3.587,320,2.046,321,3.587,322,5.205,323,7.446,324,7.139,325,3.587,326,3.587,327,3.587,328,3.587]],["title/components/AppComponent.html",[0,0.675,161,1.46]],["body/components/AppComponent.html",[0,0.959,1,1.194,2,1.864,3,0.084,4,0.084,5,0.93,6,1.365,7,1.365,8,1.365,9,0.075,11,0.575,14,0.582,17,0.865,18,3.245,19,2.838,20,1.969,22,1.969,24,0.281,25,0.735,27,0.953,30,1.419,33,1.49,35,1.297,36,0.01,37,0.748,38,0.595,39,0.797,46,2.538,60,1.221,61,1.636,63,1.1,70,1.723,72,0.886,73,0.908,76,0.532,77,0.335,80,0.084,81,0.23,82,1.289,116,2.155,154,0.977,155,1.969,156,1.915,157,1.226,158,1.365,160,1.365,161,2.508,162,1.365,163,1.226,164,1.365,165,1.194,166,1.026,167,1.365,168,1.258,169,1.722,170,2.309,171,1.226,172,2.528,173,1.194,174,1.365,175,1.164,176,1.365,177,1.226,178,0.804,179,1.969,180,1.194,181,1.365,182,1.194,183,0.824,184,1.365,185,1.226,186,1.078,187,1.226,188,1.194,189,1.365,190,1.226,191,1.194,192,1.365,193,1.226,194,1.106,195,1.194,196,1.365,197,1.194,198,1.365,199,1.194,200,1.365,201,1.258,202,1.132,203,1.226,204,1.194,205,1.365,206,1.226,207,1.194,208,0.953,209,1.001,210,1.292,211,1.194,212,1.328,213,1.365,214,0.005,215,0.005,240,1.226,248,1.292,250,1.556,306,1.079,312,1.815,313,1.052,320,1.375,329,3.233,330,5.29,331,5.29,332,4.615,333,4.525,334,5.988,335,5.29,336,5.29,337,6.793,338,3.585,339,7.503,340,4.118,341,7.918,342,6.205,343,5.29,344,1.644,345,3.815,346,5.592,347,5.243,348,3.533,349,4.251,350,5.29,351,4.663,352,5.29,353,3.233,354,4.754,355,3.007,356,4.345,357,5.787,358,5.29,359,8.066,360,6.205,361,6.205,362,6.349,363,6.205,364,5.29,365,8.292,366,3.667,367,7.202,368,4.04,369,6.205,370,5.29,371,5.458,372,4.483,373,5.29,374,6.793,375,6.793,376,7.503,377,5.29,378,3.667,379,4.663,380,4.663,381,5.29,382,2.515,383,3.007,384,3.491,385,5.29,386,5.29,387,5.458,388,6.793,389,5.29,390,5.29,391,3.667,392,7.503,393,3.942,394,5.29,395,4.663,396,5.29,397,5.29,398,3.667,399,4.663,400,5.458,401,5.592,402,6.793,403,5.29,404,7.503,405,4.663,406,4.306,407,2.024,408,5.29,409,5.29,410,3.667,411,3.026,412,3.667,413,3.667,414,2.947,415,2.947,416,2.562,417,3.233,418,2.733,419,5.29,420,3.667,421,3.667,422,3.667,423,3.667,424,3.667,425,3.667,426,3.667,427,3.233,428,3.667,429,3.667,430,3.667,431,3.667,432,5.29,433,1.935,434,3.667,435,3.233,436,1.864,437,2.562,438,3.667]],["title/modules/AppModule.html",[216,1.135,439,3.255]],["body/modules/AppModule.html",[3,0.096,4,0.096,9,0.087,19,1.337,32,4.134,36,0.01,40,3.488,59,4.248,60,1.176,63,0.93,67,2.113,68,3.14,72,1.618,76,0.64,77,0.385,79,2.944,80,0.173,81,0.264,82,1.387,154,1.122,161,2.871,178,1.279,214,0.006,215,0.006,216,1.095,218,1.408,219,1.932,220,3.284,221,3.284,222,2.591,223,1.484,228,3.721,229,2.862,230,2.067,231,1.568,233,2.112,234,2.112,239,2.142,240,1.408,241,2.223,243,3.14,248,1.484,253,4.137,257,5.322,265,2.436,266,4.134,269,2.524,270,2.944,307,3.14,308,3.714,320,2.041,355,3.017,414,3.385,415,3.385,416,2.944,439,6.349,440,3.714,441,3.714,442,3.714,443,3.714,444,5.485,445,3.385,446,2.067,447,5.835,448,3.714,449,5.835,450,5.835,451,6.92,452,4.213,453,5.302,454,5.835,455,3.14,456,5.835,457,3.14,458,4.213,459,4.213,460,4.769,461,4.213,462,4.213,463,3.14,464,5.835,465,3.714,466,3.714,467,5.144,468,3.14,469,3.14,470,3.814,471,4.213,472,3.14,473,4.689,474,4.349,475,2.781,476,4.213,477,3.36,478,4.213,479,2.641,480,5.835,481,2.641,482,2.944,483,4.213,484,3.714,485,3.14,486,5.807,487,3.762,488,4.32,489,3.674,490,4.418,491,4.418,492,3.091,493,3.418,494,4.689,495,4.002,496,4.536,497,4.213,498,4.213,499,4.196,500,6.694,501,4.418,502,4.689,503,4.213,504,4.689,505,4.213,506,4.689,507,4.213,508,4.213,509,4.213,510,4.213,511,3.14,512,6.004,513,6.689,514,6.689,515,3.14,516,7.85,517,4.213,518,3.829,519,4.213,520,4.077,521,4.213]],["title/modules/AppRoutingModule.html",[216,1.135,444,3.052]],["body/modules/AppRoutingModule.html",[3,0.124,4,0.124,9,0.112,36,0.01,76,0.567,77,0.498,80,0.124,81,0.341,178,1.194,194,1.642,208,1.799,209,1.889,214,0.007,215,0.007,218,1.82,223,1.919,233,1.971,234,2.505,245,2.873,246,3.273,247,3.867,248,1.919,249,1.253,250,2.614,332,3.518,333,4.414,334,4.8,338,3.652,362,7.444,368,3.28,384,3.594,406,3.255,444,4.835,518,3.958,520,5.315,522,5.445,523,6.919,524,6.66,525,5.445,526,5.668,527,5.445,528,8.833,529,5.445,530,5.445,531,6.785,532,8.262,533,5.573,534,5.445,535,5.445,536,5.445,537,5.445,538,4.8,539,5.445,540,5.445,541,5.445,542,5.445,543,2.087,544,5.445,545,5.445,546,2.312,547,5.445,548,5.445,549,5.445,550,5.445,551,5.445,552,5.445,553,3.798,554,5.445,555,5.445,556,5.445,557,3.805,558,5.445,559,5.445,560,3.805,561,5.445,562,5.445,563,5.445,564,5.445,565,5.445,566,5.445,567,5.445,568,4.8,569,5.445,570,5.445,571,5.445,572,5.445,573,3.594,574,5.445,575,5.445,576,5.445]],["title/components/AppToolbarComponent.html",[0,0.675,163,1.46]],["body/components/AppToolbarComponent.html",[0,0.871,1,1.013,2,1.651,3,0.071,4,0.071,5,0.789,6,1.158,7,1.158,8,1.158,9,0.064,11,0.359,14,1.198,15,1.697,16,2.285,17,0.734,18,3.193,19,2.824,20,1.744,22,1.744,24,0.238,25,0.872,27,0.844,28,2.543,30,1.31,33,1.589,35,0.844,36,0.01,37,0.669,38,0.541,39,0.518,46,1.651,47,1.899,48,1.899,52,2.017,57,0.865,60,1.258,61,2.391,63,1.02,67,1.862,72,1.774,73,1.817,76,0.477,77,0.285,80,0.071,81,0.195,82,1.021,87,2.383,109,0.893,111,2.054,112,2.285,113,1.413,115,3.132,116,2.499,117,3.322,119,1.582,128,2.149,134,2.867,136,2.938,137,3.37,138,2.802,143,2.802,144,1.78,145,3.933,146,1.642,147,1.95,148,1.86,149,1.582,150,1.582,151,1.86,152,1.86,154,0.829,155,1.744,156,1.697,157,1.04,158,1.158,160,1.158,161,1.04,162,1.158,163,2.364,164,1.158,165,1.013,166,0.871,167,1.158,168,1.068,169,1.526,170,2.098,171,1.04,172,2.335,173,1.013,174,1.158,175,0.987,176,1.158,177,1.04,178,1.376,179,1.744,180,1.013,181,1.158,182,1.013,183,0.699,184,1.158,185,1.04,186,0.955,187,1.04,188,1.013,189,1.158,190,1.04,191,1.013,192,1.158,193,1.04,194,1.413,195,1.013,196,1.158,197,1.013,198,1.158,199,1.013,200,1.158,201,1.068,202,1.003,203,1.04,204,1.013,205,1.158,206,1.04,207,1.013,208,1.465,209,1.713,210,1.096,211,1.013,212,1.126,213,1.158,214,0.005,215,0.005,231,1.744,248,1.096,249,0.716,272,2.572,282,2.303,306,0.915,313,2.029,344,1.701,345,3.19,346,5.47,351,4.97,354,4.668,355,2.953,356,4.242,383,2.354,387,2.5,406,2.802,407,1.191,411,3.589,416,2.174,433,1.642,437,2.174,518,3.225,543,1.413,546,1.566,553,2.572,560,3.275,577,7.621,578,6.947,579,2.743,580,5.408,581,5.637,582,4.686,583,5.637,584,4.219,585,3.094,586,2.518,587,3.159,588,6.274,589,5.531,590,5.531,591,6.274,592,5.531,593,6.274,594,5.531,595,4.131,596,2.572,597,5.408,598,4.97,599,2.938,600,5.637,601,5.637,602,2.743,603,4.686,604,3.275,605,1.957,606,1.845,607,4.131,608,3.112,609,2.299,610,4.686,611,3.112,612,2.221,613,3.493,614,6.328,615,4.199,616,3.112,617,3.601,618,4.668,619,3.493,620,6.235,621,7.073,622,3.112,623,4.131,624,3.112,625,3.493,626,3.112,627,6.169,628,2.695,629,3.112,630,3.112,631,3.112,632,3.112,633,3.112,634,3.112,635,1.957,636,2.081,637,3.112,638,3.275,639,1.487,640,4.131,641,3.112,642,3.093,643,3.275,644,4.686,645,4.686,646,3.112,647,2.585,648,4.131,649,3.493,650,2.938,651,5.637,652,4.686,653,3.112,654,2.802,655,2.802,656,4.686,657,4.131,658,3.112,659,4.686,660,3.275,661,4.686,662,3.112,663,2.866,664,3.589,665,4.686,666,2.174,667,2.174,668,1.339,669,3.112,670,2.319,671,5.637,672,3.112,673,4.686,674,3.112,675,3.112,676,2.174,677,3.112,678,4.131,679,2.743,680,3.112,681,2.743,682,2.743,683,3.112,684,2.743,685,3.112,686,3.112,687,4.53,688,2.473,689,3.112,690,3.112,691,2.174,692,3.112,693,2.319,694,3.112,695,2.743,696,2.743,697,3.112,698,3.112,699,3.112,700,3.112,701,0.938,702,4.686,703,3.112]],["title/guards/AuthGuard.html",[524,3.255,704,3.052]],["body/guards/AuthGuard.html",[3,0.121,4,0.121,9,0.109,11,0.576,14,1.258,15,1.925,24,0.407,27,1.227,30,1.423,33,1.258,35,1.227,36,0.01,37,0.644,38,0.502,39,0.754,42,2.012,60,1.109,76,0.581,77,0.486,80,0.121,81,0.333,82,1.291,146,4.186,166,1.907,178,1.166,209,1.86,214,0.007,215,0.007,246,3.414,248,1.873,252,1.389,268,1.907,269,1.955,282,2.67,306,1.563,311,1.873,312,1.824,313,1.955,320,2.062,345,3.824,347,5.962,355,3.312,356,4.829,382,2.762,407,2.034,489,4.353,520,3.714,524,5.912,531,6.59,605,3.503,628,2.449,660,3.714,668,2.288,704,4.761,705,4.271,706,4.686,707,6.007,708,7.932,709,3.714,710,5.316,711,2.762,712,6.943,713,6.007,714,6.993,715,4.686,716,6.993,717,6.993,718,5.316,719,5.475,720,4.271,721,5.543,722,4.761,723,7.521,724,5.475,725,3.178,726,4.686,727,6.007,728,5.316,729,5.316,730,5.316,731,5.316,732,5.316,733,5.316,734,3.332,735,5.316,736,3.74,737,4.271,738,5.316,739,6.814,740,3.041,741,5.316,742,5.316]],["title/injectables/AuthService.html",[252,0.89,355,1.824]],["body/injectables/AuthService.html",[3,0.162,4,0.093,9,0.083,11,0.573,13,2.592,14,1.447,24,0.31,25,0.79,27,1.023,33,1.599,35,1.28,36,0.01,37,0.672,38,0.617,39,0.786,42,1.441,57,1.382,60,1.377,67,2.123,72,1.964,73,2.012,74,4.093,76,0.564,77,0.371,80,0.093,81,0.254,82,1.157,178,1.782,194,1.978,209,1.94,214,0.006,215,0.006,231,2.114,252,1.158,253,1.989,254,1.643,256,1.803,266,2.319,276,2.066,282,2.969,289,4.691,301,2.523,306,1.192,310,3.021,311,1.429,312,1.391,332,2.888,333,3.613,340,3.9,344,1.832,355,2.372,368,2.693,372,3.75,393,5.297,533,3.75,585,3.599,605,2.967,606,2.237,638,4.966,639,2.655,647,3.431,655,4.249,736,3.599,737,4.111,743,3.574,744,6.171,745,2.968,746,3.97,747,3.97,748,1.898,749,3.97,750,6.361,751,4.329,752,4.329,753,5.27,754,4.329,755,6.232,756,1.713,757,3.97,758,4.565,759,4.054,760,4.371,761,4.234,762,4.054,763,3.25,764,4.054,765,2.693,766,4.565,767,4.054,768,4.234,769,2.237,770,5.008,771,4.565,772,3.75,773,4.054,774,4.234,775,4.054,776,5.681,777,6.265,778,5.008,779,5.681,780,5.008,781,4.691,782,4.054,783,5.364,784,3.987,785,4.054,786,5.711,787,4.054,788,5.094,789,4.054,790,3.75,791,4.054,792,4.565,793,4.054,794,3.75,795,4.054,796,4.565,797,4.054,798,2.319,799,3.751,800,2.319,801,2.676]],["title/injectables/AuthStrapiService.html",[252,0.89,482,3.052]],["body/injectables/AuthStrapiService.html",[3,0.148,4,0.076,9,0.069,11,0.497,13,2.577,14,1.398,24,0.255,25,0.686,27,0.889,30,1.031,33,1.56,35,1.249,36,0.01,37,0.729,38,0.599,39,0.767,42,1.956,44,2.709,54,3.258,57,1.28,59,3.101,60,1.304,67,1.998,72,1.863,73,1.909,74,4.069,76,0.568,77,0.305,80,0.076,81,0.209,82,1.057,131,1.889,166,1.817,178,1.591,194,1.772,208,0.867,209,1.348,214,0.005,215,0.005,231,1.837,248,1.175,249,1.595,252,1.006,253,3.186,254,1.352,256,1.566,265,2.061,266,3.715,268,1.381,269,1.416,273,3.258,282,2.885,306,0.981,310,2.486,311,1.175,312,1.144,313,1.416,320,1.952,332,2.509,333,3.524,338,3.427,340,2.709,344,1.709,355,3.574,356,1.83,368,3.559,372,4.286,384,3.258,393,2.486,411,1.908,418,2.486,436,3.524,446,1.636,481,2.091,482,4.537,492,1.943,499,2.091,501,2.201,533,3.878,543,2.09,546,2.316,573,3.258,585,2.709,587,2.124,605,2.061,612,2.339,638,4.537,639,2.447,647,2.694,655,2.951,668,2.124,688,2.605,711,2,734,3.094,736,2.709,737,3.094,745,1.889,750,5.746,751,3.258,752,3.258,753,3.966,754,3.258,755,5.831,756,1.489,757,3.449,758,3.966,760,4.121,761,3.678,765,2.339,766,3.966,768,3.678,769,1.943,770,4.351,771,3.966,772,3.258,774,3.678,777,4.351,781,3.258,783,4.286,784,3.186,786,3.966,788,4.07,790,2.201,792,2.68,794,2.201,796,2.68,798,3.715,799,3.361,800,3.715,801,2.201,802,3.966,803,2.94,804,3.094,805,3.678,806,2,807,3.678,808,2.709,809,3.335,810,5.218,811,3.335,812,5.875,813,5.012,814,3.335,815,3.882,816,3.335,817,3.258,818,3.335,819,3.335,820,3.335,821,3.335,822,2.94,823,2.94,824,2.94,825,2.94,826,2.94,827,2.94,828,2.94,829,2.94,830,2.94,831,2.509,832,1.393,833,1.943,834,2.124,835,2.061,836,1.481,837,2.124,838,2.192,839,1.313,840,2.061,841,2.331,842,2.486,843,3.335,844,1.994,845,3.335,846,1.529,847,3.335,848,5.18,849,5.875,850,4.351,851,2.94,852,3.258,853,3.335,854,1.115,855,3.335,856,1.837,857,3.335,858,3.335,859,3.335,860,2.509,861,4.936,862,3.258,863,4.936,864,4.936,865,3.449,866,3.258,867,3.258,868,3.094,869,4.936,870,3.335,871,2.94,872,1.837,873,2.94,874,2.94,875,3.335,876,3.335,877,3.335,878,4.936,879,2.94,880,2.453,881,3.335,882,1.581,883,3.335,884,2.339,885,3.078,886,3.335,887,3.335,888,2.94,889,3.335,890,3.335,891,2.94,892,3.335,893,3.335,894,3.335,895,3.335,896,3.335,897,3.335,898,3.335,899,3.335,900,3.335,901,2.94,902,3.335,903,4.936,904,3.335,905,3.335,906,3.335,907,3.335,908,3.335,909,3.335,910,4.936,911,3.335,912,3.335,913,1.032,914,3.335,915,3.335,916,3.335,917,2.331,918,3.335,919,3.335,920,3.335,921,3.335,922,3.335,923,3.335,924,4.936,925,3.335,926,3.335,927,3.335,928,4.351,929,5.875,930,4.936,931,0.911,932,3.335,933,3.335,934,3.335,935,3.335,936,2.68,937,2.331,938,2.94,939,3.335]],["title/injectables/CsvService.html",[252,0.89,940,2.883]],["body/injectables/CsvService.html",[3,0.124,4,0.124,9,0.17,11,0.582,24,0.417,27,1.246,33,1.278,35,1.246,36,0.01,37,0.756,38,0.561,39,0.766,42,1.755,57,1.65,60,1.238,61,2.14,63,1.264,66,4.8,67,1.381,70,1.755,73,1.883,76,0.386,77,0.498,80,0.124,81,0.341,82,1.303,85,1.82,214,0.007,215,0.007,249,1.902,252,1.41,254,2.207,256,2.196,276,1.45,289,4.567,311,1.919,312,1.868,320,2.08,344,1.721,584,3.413,913,2.475,940,4.567,941,4.8,942,6.1,943,6.715,944,2.978,945,6.919,946,4.337,947,6.919,948,6.919,949,6.919,950,6.785,951,5.445,952,6.1,953,3.793,954,5.56,955,5.157,956,6.919,957,8.579,958,5.445,959,5.157,960,5.157,961,6.919,962,5.445,963,5.445,964,5.445,965,5.445,966,5.445,967,4.8,968,6.919,969,5.445,970,5.445,971,5.445,972,2.581,973,5.445,974,5.445,975,3.805,976,5.445,977,5.445,978,5.445,979,5.445,980,5.445,981,5.445,982,5.445,983,5.445]],["title/injectables/CustomTranslateService.html",[252,0.89,354,2.883]],["body/injectables/CustomTranslateService.html",[3,0.109,4,0.109,9,0.098,11,0.548,24,0.367,25,0.885,27,1.147,30,1,33,1.537,35,1.288,36,0.01,37,0.676,38,0.527,39,0.791,40,2.864,42,2.069,46,1.688,60,1.355,61,1.969,63,1.219,67,1.814,72,1.971,73,1.576,76,0.562,77,0.438,80,0.145,81,0.3,82,1.24,83,2.74,214,0.007,215,0.007,249,1.103,250,1.409,252,1.298,254,1.942,268,1.782,269,2.051,282,2.71,286,4.449,289,4.202,301,2.827,306,1.409,311,1.688,312,1.644,313,2.34,320,1.859,344,1.662,346,4.745,348,3.891,353,4.223,354,5.03,406,4.275,411,3.642,453,4.997,455,3.57,468,5.679,469,3.57,486,3.849,487,2.919,488,2.864,495,3.806,511,3.57,597,6.123,614,7.184,639,2.742,647,3.637,666,5.906,676,4.449,748,1.601,765,3.018,784,3.123,804,3.991,946,3.003,984,3.849,985,7.151,986,7.151,987,7.62,988,7.62,989,6.367,990,6.718,991,6.367,992,5.325,993,7.543,994,4.745,995,6.367,996,4.79,997,6.553,998,6.367,999,4.79,1000,7.19,1001,4.79,1002,5.613,1003,6.367,1004,6.367,1005,4.79,1006,4.745,1007,6.367,1008,6.367,1009,6.367,1010,4.79,1011,6.304,1012,4.223,1013,4.223,1014,4.79,1015,4.79,1016,4.79,1017,4.79,1018,4.79,1019,4.79,1020,6.367,1021,4.79,1022,4.79,1023,4.79,1024,4.79,1025,4.79]],["title/injectables/DataService.html",[252,0.89,460,2.883]],["body/injectables/DataService.html",[3,0.107,4,0.107,9,0.096,11,0.621,24,0.359,27,1.131,33,1.455,35,1.593,36,0.01,37,0.783,38,0.635,39,0.916,42,1.593,57,1.675,60,1.402,63,1.248,67,1.593,76,0.536,77,0.429,80,0.107,81,0.294,82,1.387,214,0.007,215,0.007,252,1.28,253,2.303,254,1.903,256,1.993,258,2.461,263,4.389,264,4.389,268,1.758,275,5.282,278,3.193,281,4.45,282,2.946,289,5.352,301,2.789,306,1.381,311,1.654,312,1.611,344,1.811,446,2.303,460,4.146,488,4.519,606,2.473,744,6.274,745,2.404,746,4.389,747,4.389,748,2.812,749,4.389,756,2.445,765,2.977,801,3.098,1026,4.138,1027,6.281,1028,5.537,1029,4.694,1030,3.193,1031,4.248,1032,3.193,1033,5.537,1034,4.694,1035,4.146,1036,5.537,1037,4.694,1038,3.593,1039,5.537,1040,7.559,1041,4.694,1042,4.138,1043,3.937,1044,3.447,1045,5.537,1046,4.694,1047,5.537,1048,3.315,1049,3.593,1050,2.477,1051,3.28]],["title/components/ErrorModalComponent.html",[0,0.675,165,1.422]],["body/components/ErrorModalComponent.html",[0,1.207,1,1.489,2,2.175,3,0.104,4,0.104,5,1.16,6,1.702,7,1.702,8,1.702,9,0.094,11,0.473,12,3.531,14,0.726,17,1.079,18,3.304,19,2.891,20,2.297,22,2.297,24,0.35,27,1.112,30,0.955,33,1.381,35,0.824,36,0.01,37,0.707,38,0.515,39,0.506,60,0.745,61,1.415,63,1.04,72,1.492,73,1.528,76,0.438,77,0.418,80,0.104,81,0.286,82,0.745,83,2.617,100,2.926,101,2.926,104,3.321,105,2.926,106,3.574,111,5.312,112,2.502,113,1.862,115,3.262,116,2.554,117,3.262,119,2.326,120,2.435,122,1.91,126,3.138,127,2.945,131,2.674,134,2.502,142,3.409,154,1.219,155,2.297,156,2.235,157,1.529,158,1.702,160,1.702,161,1.529,162,1.702,163,1.529,164,1.702,165,2.62,166,2.506,167,1.702,168,1.57,169,2.01,170,2.6,171,1.529,172,2.783,173,1.489,174,1.702,175,1.452,176,1.702,177,1.529,178,1.003,179,2.297,180,1.489,181,1.702,182,1.489,183,1.028,184,1.702,185,1.529,186,1.258,187,1.529,188,1.489,189,1.702,190,1.529,191,1.489,192,1.702,193,1.529,194,1.38,195,1.489,196,1.702,197,1.489,198,1.702,199,1.489,200,1.702,201,1.57,202,1.321,203,1.529,204,1.489,205,1.702,206,1.529,207,1.489,208,1.189,209,1.249,210,1.612,211,1.489,212,1.656,213,1.702,214,0.006,215,0.006,240,1.529,268,1.727,269,1.771,272,3.388,295,3.676,332,3.138,395,5.442,580,3.676,596,3.388,606,2.43,663,3.552,696,5.442,740,4.604,1052,6.276,1053,5.821,1054,4.033,1055,5.442,1056,5.268,1057,6.987,1058,6.173,1059,7.48,1060,4.575,1061,4.515,1062,6.173,1063,3.87,1064,6.173,1065,6.173,1066,6.173,1067,6.173,1068,4.575,1069,4.575,1070,5.442,1071,4.575,1072,4.575,1073,4.575,1074,2.868,1075,4.575,1076,3.409,1077,4.882,1078,4.575,1079,4.313,1080,4.96,1081,2.735,1082,4.033,1083,2.735,1084,4.575,1085,4.575]],["title/injectables/FirebaseAuthService.html",[252,0.89,479,2.738]],["body/injectables/FirebaseAuthService.html",[3,0.171,4,0.076,9,0.068,11,0.59,13,2.859,14,1.435,24,0.254,25,0.684,27,0.886,30,1.028,33,1.58,35,1.351,36,0.01,37,0.744,38,0.612,39,0.83,42,1.644,56,2.928,57,1.082,60,1.364,61,1.027,67,2.106,72,1.861,73,1.907,74,4.421,76,0.546,77,0.304,80,0.076,81,0.208,82,1.18,85,1.644,116,1.054,166,1.64,178,1.725,183,1.317,194,2.185,209,1.343,214,0.005,215,0.005,231,1.831,252,1.003,254,1.346,268,1.813,269,1.411,276,1.311,282,2.92,301,3.072,306,0.977,311,1.17,312,1.139,313,2.151,320,1.949,344,1.789,355,3.571,383,2.705,407,1.883,418,2.475,477,2.705,479,4.062,481,2.082,489,2.7,493,2.626,499,3.674,585,3.797,586,2.011,605,2.054,623,4.337,638,4.528,639,2.299,647,2.256,655,2.941,668,1.429,711,1.994,736,3.797,737,3.674,745,1.883,750,5.739,751,3.247,752,3.247,753,4.709,754,3.868,755,5.822,756,2.185,757,3.438,758,3.953,760,4.455,761,2.475,765,2.332,766,3.953,768,3.667,769,2.551,771,2.668,772,3.247,774,3.667,781,3.247,783,4.277,784,3.179,786,3.953,788,4.827,790,2.192,792,2.668,794,2.192,796,2.668,798,3.707,799,3.352,800,3.707,808,2.7,813,5.008,815,3.874,817,5.282,822,2.928,823,2.928,824,2.928,825,2.928,826,2.928,827,2.928,828,2.928,829,2.928,831,2.501,844,1.985,848,5.166,850,2.928,851,2.928,860,1.688,868,2.082,871,2.928,872,1.831,873,2.928,874,2.928,879,2.928,1043,3.084,1044,3.797,1086,4.829,1087,2.928,1088,4.92,1089,4.92,1090,2.475,1091,3.321,1092,3.868,1093,2.814,1094,3.321,1095,3.321,1096,3.321,1097,4.92,1098,3.321,1099,4.829,1100,4.337,1101,3.321,1102,4.337,1103,3.321,1104,2.185,1105,4.92,1106,3.321,1107,4.92,1108,4.92,1109,4.92,1110,3.321,1111,3.868,1112,1.9,1113,3.321,1114,3.321,1115,3.321,1116,2.475,1117,3.321,1118,3.321,1119,3.321,1120,4.92,1121,4.92,1122,2.192,1123,4.368,1124,4.368,1125,3.321,1126,3.321,1127,4.92,1128,3.321,1129,3.321,1130,4.92,1131,4.92,1132,4.92,1133,4.92,1134,3.321,1135,3.321,1136,4.92,1137,3.321,1138,3.321,1139,3.321,1140,4.92,1141,3.321,1142,3.321,1143,3.321,1144,4.92,1145,3.321,1146,2.192,1147,3.321,1148,4.92,1149,3.321,1150,3.321,1151,3.321,1152,3.321,1153,3.321,1154,3.321,1155,1.386,1156,2.475,1157,3.321,1158,3.321,1159,3.321,1160,2.475,1161,3.321,1162,2.928,1163,3.321,1164,2.32,1165,2.928,1166,3.321,1167,3.321,1168,3.321,1169,3.321]],["title/interfaces/FirebaseDocument.html",[1170,0.641,1171,2.498]],["body/interfaces/FirebaseDocument.html",[3,0.039,4,0.039,9,0.147,11,0.131,14,1.348,17,0.891,19,0.921,24,0.131,25,0.403,30,0.358,36,0.01,37,0.651,38,0.367,42,0.435,57,1.556,60,1.315,63,1.146,67,2.081,70,0.958,72,0.414,73,1.338,74,1.532,76,0.383,77,0.157,80,0.101,81,0.107,82,1.416,85,2.585,107,1.577,116,0.544,166,2.273,183,0.385,202,0.367,208,1.404,209,0.468,214,0.003,215,0.004,231,1.405,249,1.957,250,1.693,252,0.592,256,0.544,258,0.558,268,1.244,269,1.427,273,1.131,276,1.68,278,1.476,281,0.94,282,2.054,283,2.127,292,1.277,301,1.974,306,0.504,311,0.604,312,0.588,313,2.056,320,2.221,344,1.706,345,1.92,368,3.397,382,1.531,383,1.212,401,1.277,407,1.445,433,1.532,436,3.758,446,0.841,477,1.212,487,3.157,488,1.735,489,0.94,490,1.916,491,1.916,493,3.035,495,1.024,496,2.658,515,2.814,543,1.826,546,2.181,553,2.965,585,1.593,586,0.588,605,2.403,606,0.675,612,2.561,625,1.277,639,0.544,647,3.795,654,1.024,655,1.024,660,3.476,668,2.606,688,3.038,720,1.074,721,4.022,722,5.233,736,1.593,737,1.074,748,2.181,751,1.131,752,1.131,754,1.131,756,2.121,760,1.593,763,0.98,765,1.79,781,2.492,783,3.8,784,0.841,788,1.819,790,1.131,794,1.131,815,1.024,831,0.871,854,0.97,856,2.5,862,4.163,866,4.163,872,2.562,913,1.168,931,2.045,937,2.028,944,2.325,955,2.163,972,2.561,992,1.197,1006,1.277,1032,1.476,1035,1.916,1038,2.16,1043,5.434,1044,1.593,1048,0.904,1099,4.512,1111,1.131,1116,1.277,1123,2.163,1124,1.277,1146,3.283,1155,1.212,1160,5.509,1170,0.985,1171,2.16,1172,0.544,1173,1.277,1174,1.447,1175,6.085,1176,2.934,1177,2.934,1178,3.572,1179,4.341,1180,5.245,1181,2.332,1182,2.332,1183,2.028,1184,1.916,1185,1.023,1186,1.131,1187,1.377,1188,1.377,1189,1.377,1190,2.332,1191,1.377,1192,1.377,1193,1.377,1194,6.021,1195,1.377,1196,2.639,1197,4.341,1198,1.377,1199,1.377,1200,1.377,1201,3.996,1202,1.377,1203,1.131,1204,1.377,1205,1.377,1206,1.377,1207,1.377,1208,2.332,1209,1.377,1210,1.377,1211,2.163,1212,1.377,1213,1.377,1214,1.377,1215,2.332,1216,2.332,1217,4.561,1218,1.197,1219,1.277,1220,3.034,1221,1.377,1222,1.277,1223,3.572,1224,2.028,1225,0.761,1226,0.62,1227,1.377,1228,2.163,1229,1.377,1230,1.377,1231,1.377,1232,1.377,1233,1.377,1234,1.377,1235,1.377,1236,1.377,1237,1.377,1238,1.197,1239,1.197,1240,1.277,1241,1.277,1242,1.277,1243,1.277,1244,1.377,1245,1.377,1246,1.277,1247,1.277,1248,1.377,1249,1.377,1250,1.377,1251,1.377,1252,1.377,1253,1.377,1254,5.854,1255,1.377,1256,2.332,1257,1.377,1258,5.069,1259,1.377,1260,1.377,1261,1.377,1262,3.034,1263,1.377,1264,1.377,1265,1.377,1266,1.377,1267,1.377,1268,1.377,1269,1.377,1270,1.377,1271,1.377,1272,1.377,1273,1.377,1274,1.377,1275,1.377,1276,1.377,1277,2.367,1278,1.277,1279,2.332,1280,1.377,1281,1.377,1282,3.572,1283,1.377,1284,1.377,1285,3.034,1286,3.572,1287,1.377,1288,1.377,1289,1.532,1290,1.143,1291,3.034,1292,0.761,1293,3.572,1294,1.974,1295,6.83,1296,1.916,1297,1.377,1298,1.377,1299,5.652,1300,6.321,1301,6.528,1302,5.245,1303,1.377,1304,3.997,1305,1.377,1306,1.377,1307,4.626,1308,1.377,1309,1.377,1310,1.377,1311,1.377,1312,1.377,1313,1.377,1314,2.332,1315,3.034,1316,2.332,1317,1.377,1318,1.377,1319,1.377,1320,1.377,1321,1.377,1322,1.377,1323,6.089,1324,1.377,1325,3.034,1326,2.332,1327,4.626,1328,1.377,1329,2.332,1330,1.377,1331,3.034,1332,4.341,1333,1.377,1334,1.377,1335,2.332,1336,1.377,1337,1.377,1338,1.377,1339,0.98,1340,1.377,1341,1.377,1342,1.377,1343,3.997,1344,1.377,1345,2.332,1346,1.377,1347,2.332,1348,3.795,1349,1.377,1350,1.377,1351,1.377,1352,1.377,1353,1.377,1354,1.377,1355,1.377,1356,1.377,1357,1.377,1358,1.197,1359,4.23,1360,2.332,1361,1.377,1362,1.377,1363,1.377,1364,1.377,1365,1.377,1366,1.377,1367,1.377,1368,1.377,1369,4.026,1370,5.532,1371,4.341,1372,4.341,1373,1.377,1374,1.377,1375,1.377,1376,1.377,1377,1.377,1378,2.332,1379,3.997,1380,1.377,1381,1.377,1382,1.377,1383,1.377,1384,1.377,1385,2.163,1386,1.377,1387,2.332,1388,2.332,1389,1.377,1390,1.377,1391,2.332,1392,1.377,1393,1.377,1394,2.332,1395,1.377,1396,3.034,1397,1.377,1398,2.332,1399,1.377,1400,1.377,1401,1.377,1402,2.332,1403,2.332,1404,3.118,1405,1.377,1406,1.377,1407,1.377,1408,1.377,1409,1.377,1410,1.277,1411,1.377,1412,1.377,1413,1.377,1414,1.377,1415,0.94,1416,1.197,1417,2.163,1418,1.377,1419,1.277,1420,1.377,1421,1.377,1422,1.377,1423,1.377,1424,3.034,1425,3.034,1426,1.377,1427,1.377,1428,2.332,1429,1.377,1430,1.024,1431,1.024,1432,1.377,1433,1.377,1434,1.377,1435,1.377,1436,1.377,1437,1.377,1438,1.377,1439,1.377,1440,1.377,1441,1.377,1442,2.332,1443,1.377,1444,3.997,1445,2.332,1446,3.997,1447,1.377,1448,1.377,1449,3.734,1450,1.377,1451,1.377,1452,2.332,1453,1.377,1454,1.377,1455,1.377,1456,2.332,1457,1.377,1458,1.377,1459,2.332,1460,1.377,1461,2.163,1462,1.377,1463,1.377,1464,1.377,1465,1.197,1466,1.377,1467,1.377,1468,1.377,1469,2.163,1470,1.377,1471,1.377,1472,2.332,1473,1.277,1474,1.277,1475,1.197,1476,1.377,1477,1.377,1478,2.332,1479,1.377,1480,1.377,1481,2.332,1482,1.377,1483,2.028,1484,1.277,1485,1.377,1486,1.377,1487,2.163,1488,2.332,1489,2.028,1490,2.163,1491,1.377,1492,1.377,1493,1.377,1494,2.332,1495,1.377,1496,2.332,1497,1.377,1498,1.377]],["title/injectables/FirebaseMappingService.html",[252,0.89,1499,3.51]],["body/injectables/FirebaseMappingService.html",[3,0.083,4,0.083,9,0.075,11,0.617,14,1.403,24,0.279,27,0.949,30,1.292,33,1.53,35,1.424,36,0.01,37,0.773,38,0.583,39,0.875,42,1.337,57,1.633,60,1.479,63,1.256,67,1.337,70,2.292,76,0.547,77,0.333,80,0.083,81,0.228,82,1.287,85,1.761,183,1.184,186,1.722,208,1.761,214,0.005,215,0.005,249,0.84,252,1.074,254,1.478,257,4.477,258,2.206,268,1.475,269,1.512,281,3.719,311,1.285,312,1.251,320,2.153,344,1.842,446,1.789,475,5.317,477,1.523,493,2.136,499,3.303,501,3.478,543,1.866,586,1.808,609,2.585,643,3.682,711,2.136,745,2.593,748,2.798,756,2.043,799,2.086,808,2.892,813,4.477,833,2.075,839,1.436,841,2.549,842,3.927,844,2.18,880,2.2,931,2.491,936,2.931,1049,4.284,1050,4.251,1051,2.549,1086,5.582,1112,2.086,1156,2.718,1164,2.549,1170,0.994,1430,4.051,1431,4.051,1499,5.445,1500,2.931,1501,4.234,1502,3.927,1503,4.645,1504,5.269,1505,4.234,1506,5.269,1507,4.234,1508,4.234,1509,4.234,1510,6.776,1511,5.445,1512,5.269,1513,4.234,1514,3.647,1515,5.269,1516,2.379,1517,3.647,1518,4.234,1519,3.647,1520,5.269,1521,3.647,1522,4.234,1523,3.647,1524,4.971,1525,3.647,1526,2.268,1527,4.234,1528,3.647,1529,3.647,1530,3.647,1531,5.269,1532,3.647,1533,4.234,1534,3.647,1535,2.286,1536,3.215,1537,3.215,1538,3.215,1539,4.645,1540,3.647,1541,3.647,1542,5.269,1543,3.647,1544,3.215,1545,3.647,1546,2.931,1547,3.215,1548,3.215,1549,3.647,1550,4.234,1551,3.215,1552,4.234,1553,3.215,1554,4.234,1555,3.215,1556,4.234,1557,3.215,1558,1.436,1559,3.215,1560,3.215,1561,3.215,1562,3.215,1563,3.215,1564,3.647,1565,3.215,1566,3.215,1567,3.215,1568,3.215]],["title/classes/FirebaseMediaService.html",[81,0.273,485,3.255]],["body/classes/FirebaseMediaService.html",[3,0.163,4,0.131,9,0.173,11,0.597,24,0.441,27,1.29,30,1.496,33,1.323,35,1.29,36,0.01,37,0.677,38,0.528,39,0.793,42,2.071,60,1.166,67,1.46,76,0.595,80,0.131,81,0.36,82,1.166,116,2.273,131,2.202,166,1.61,214,0.007,215,0.007,268,2.005,269,2.055,282,2.734,306,1.692,313,1.65,320,1.496,344,1.59,470,4.308,473,4.623,477,3.408,485,6.084,493,3.587,606,2.82,711,2.903,804,4.49,808,3.932,813,3.44,844,3.44,852,3.797,867,3.797,931,1.571,972,4.116,1086,5.339,1093,4.098,1112,3.291,1289,3.78,1290,2.82,1296,4.728,1550,4.623,1552,4.623,1554,4.623,1556,4.623,1569,3.291,1570,4.623,1571,2.771,1572,5.753,1573,5.753,1574,5.756,1575,5.753,1576,5.753,1577,5.753,1578,5.753,1579,5.753,1580,8.164,1581,5.753,1582,5.753,1583,5.753]],["title/interfaces/FirebaseStorageFile.html",[1170,0.641,1218,3.052]],["body/interfaces/FirebaseStorageFile.html",[3,0.039,4,0.039,9,0.16,11,0.131,14,1.348,17,0.891,19,0.921,24,0.131,25,0.403,30,0.358,36,0.01,37,0.651,38,0.328,42,0.435,57,1.535,60,1.315,63,1.155,67,2.081,70,1.128,72,0.414,73,1.338,74,1.532,76,0.383,77,0.157,80,0.101,81,0.107,82,1.416,85,2.585,107,1.577,116,0.544,166,2.273,183,0.385,202,0.367,208,1.404,209,0.468,214,0.003,215,0.004,231,1.405,249,1.957,250,1.976,252,0.592,256,0.544,258,0.558,268,1.244,269,1.427,273,1.131,276,1.68,278,1.476,281,0.94,282,2.054,283,2.127,292,1.277,301,1.974,306,0.504,311,0.604,312,0.588,313,2.056,320,2.221,344,1.706,345,1.92,368,3.397,382,1.531,383,1.212,401,2.163,407,1.445,433,1.532,436,3.758,446,0.841,477,1.212,487,3.157,488,1.735,489,0.94,490,1.916,491,1.916,493,3.162,495,1.024,496,2.658,515,2.814,543,1.826,546,2.181,553,2.965,585,1.593,586,0.588,605,2.403,606,0.675,612,2.561,625,1.277,639,0.544,647,3.795,654,1.024,655,1.024,660,3.476,668,2.606,688,3.038,720,1.074,721,4.022,722,5.233,736,1.593,737,1.074,748,2.181,751,1.131,752,1.131,754,1.131,756,2.121,760,1.593,763,0.98,765,1.79,781,2.492,783,3.8,784,0.841,788,1.819,790,1.131,794,1.131,815,1.024,831,0.871,854,0.573,856,2.5,862,4.163,866,4.163,872,2.562,913,1.168,931,1.956,937,2.028,944,2.325,955,2.163,972,2.561,992,1.197,1006,1.277,1032,1.476,1035,1.916,1038,2.16,1043,5.38,1044,1.593,1048,0.904,1099,4.512,1111,1.131,1116,1.277,1123,2.163,1124,1.277,1146,3.283,1155,1.212,1160,5.509,1170,0.985,1171,1.66,1172,0.544,1173,1.277,1174,1.447,1175,5.985,1176,2.934,1177,2.934,1178,3.572,1179,4.341,1180,4.865,1181,1.377,1182,1.377,1183,1.197,1184,1.131,1185,0.604,1186,1.131,1187,1.377,1188,1.377,1189,1.377,1190,2.332,1191,1.377,1192,1.377,1193,1.377,1194,6.021,1195,1.377,1196,2.639,1197,4.341,1198,1.377,1199,1.377,1200,1.377,1201,3.996,1202,1.377,1203,1.131,1204,1.377,1205,1.377,1206,1.377,1207,1.377,1208,2.332,1209,1.377,1210,1.377,1211,2.163,1212,1.377,1213,1.377,1214,1.377,1215,2.332,1216,2.332,1217,5.007,1218,2.028,1219,2.163,1220,3.034,1221,1.377,1222,1.277,1223,3.572,1224,2.028,1225,0.761,1226,0.62,1227,1.377,1228,2.163,1229,1.377,1230,1.377,1231,1.377,1232,1.377,1233,1.377,1234,1.377,1235,1.377,1236,1.377,1237,1.377,1238,1.197,1239,1.197,1240,1.277,1241,1.277,1242,1.277,1243,1.277,1244,1.377,1245,1.377,1246,1.277,1247,1.277,1248,1.377,1249,1.377,1250,1.377,1251,1.377,1252,1.377,1253,1.377,1254,5.854,1255,1.377,1256,2.332,1257,1.377,1258,5.069,1259,1.377,1260,1.377,1261,1.377,1262,3.034,1263,1.377,1264,1.377,1265,1.377,1266,1.377,1267,1.377,1268,1.377,1269,1.377,1270,1.377,1271,1.377,1272,1.377,1273,1.377,1274,1.377,1275,1.377,1276,1.377,1277,2.367,1278,1.277,1279,2.332,1280,1.377,1281,1.377,1282,3.572,1283,1.377,1284,1.377,1285,3.034,1286,3.572,1287,1.377,1288,1.377,1289,1.532,1290,1.143,1291,3.034,1292,0.761,1293,3.572,1294,1.974,1295,6.83,1296,1.916,1297,1.377,1298,1.377,1299,5.652,1300,6.321,1301,6.528,1302,5.245,1303,1.377,1304,3.997,1305,1.377,1306,1.377,1307,4.626,1308,1.377,1309,1.377,1310,1.377,1311,1.377,1312,1.377,1313,1.377,1314,2.332,1315,3.034,1316,2.332,1317,1.377,1318,1.377,1319,1.377,1320,1.377,1321,1.377,1322,1.377,1323,6.089,1324,1.377,1325,3.034,1326,2.332,1327,4.626,1328,1.377,1329,2.332,1330,1.377,1331,3.034,1332,4.341,1333,1.377,1334,1.377,1335,2.332,1336,1.377,1337,1.377,1338,1.377,1339,0.98,1340,1.377,1341,1.377,1342,1.377,1343,3.997,1344,1.377,1345,2.332,1346,1.377,1347,2.332,1348,3.795,1349,1.377,1350,1.377,1351,1.377,1352,1.377,1353,1.377,1354,1.377,1355,1.377,1356,1.377,1357,1.377,1358,1.197,1359,4.23,1360,2.332,1361,1.377,1362,1.377,1363,1.377,1364,1.377,1365,1.377,1366,1.377,1367,1.377,1368,1.377,1369,4.026,1370,5.532,1371,4.341,1372,4.341,1373,1.377,1374,1.377,1375,1.377,1376,1.377,1377,1.377,1378,2.332,1379,3.997,1380,1.377,1381,1.377,1382,1.377,1383,1.377,1384,1.377,1385,2.163,1386,1.377,1387,2.332,1388,2.332,1389,1.377,1390,1.377,1391,2.332,1392,1.377,1393,1.377,1394,2.332,1395,1.377,1396,3.034,1397,1.377,1398,2.332,1399,1.377,1400,1.377,1401,1.377,1402,2.332,1403,2.332,1404,3.118,1405,1.377,1406,1.377,1407,1.377,1408,1.377,1409,1.377,1410,1.277,1411,1.377,1412,1.377,1413,1.377,1414,1.377,1415,0.94,1416,1.197,1417,2.163,1418,1.377,1419,1.277,1420,1.377,1421,1.377,1422,1.377,1423,1.377,1424,3.034,1425,3.034,1426,1.377,1427,1.377,1428,2.332,1429,1.377,1430,1.024,1431,1.024,1432,1.377,1433,1.377,1434,1.377,1435,1.377,1436,1.377,1437,1.377,1438,1.377,1439,1.377,1440,1.377,1441,1.377,1442,2.332,1443,1.377,1444,3.997,1445,2.332,1446,3.997,1447,1.377,1448,1.377,1449,3.734,1450,1.377,1451,1.377,1452,2.332,1453,1.377,1454,1.377,1455,1.377,1456,2.332,1457,1.377,1458,1.377,1459,2.332,1460,1.377,1461,2.163,1462,1.377,1463,1.377,1464,1.377,1465,1.197,1466,1.377,1467,1.377,1468,1.377,1469,2.163,1470,1.377,1471,1.377,1472,2.332,1473,1.277,1474,1.277,1475,1.197,1476,1.377,1477,1.377,1478,2.332,1479,1.377,1480,1.377,1481,2.332,1482,1.377,1483,2.028,1484,1.277,1485,1.377,1486,1.377,1487,2.163,1488,2.332,1489,2.028,1490,2.163,1491,1.377,1492,1.377,1493,1.377,1494,2.332,1495,1.377,1496,2.332,1497,1.377,1498,1.377]],["title/interfaces/FirebaseUserCredential.html",[1111,2.883,1170,0.641]],["body/interfaces/FirebaseUserCredential.html",[3,0.039,4,0.039,9,0.147,11,0.131,14,1.37,17,0.89,19,0.92,24,0.131,25,0.403,30,0.357,36,0.01,37,0.651,38,0.278,42,0.434,57,1.534,60,1.315,63,1.135,67,2.081,70,0.957,72,0.414,73,1.337,74,1.531,76,0.383,77,0.157,80,0.101,81,0.107,82,1.416,85,2.584,107,1.576,116,0.543,166,2.273,183,0.385,202,0.366,208,1.404,209,0.467,214,0.003,215,0.004,231,1.404,249,1.956,250,1.692,252,0.591,256,0.543,258,0.557,268,1.243,269,1.426,273,1.914,276,1.738,278,1.475,281,0.939,282,2.053,283,2.126,292,1.276,301,1.973,306,0.503,311,0.603,312,0.587,313,2.055,320,2.221,344,1.706,345,1.919,368,3.396,382,1.529,383,1.211,401,1.276,407,1.444,433,1.531,436,3.757,446,0.84,477,1.211,487,3.156,488,1.734,489,0.939,490,1.914,491,1.914,493,3.134,495,1.023,496,2.656,515,2.812,543,1.825,546,2.18,553,2.964,585,1.592,586,0.587,605,2.874,606,0.674,612,2.559,625,1.276,639,0.543,647,3.795,654,1.023,655,1.023,660,3.773,668,2.605,688,3.037,720,1.073,721,4.021,722,5.232,736,1.592,737,1.073,748,2.18,751,1.13,752,1.13,754,1.13,756,2.121,760,1.592,763,1.659,765,1.789,781,2.491,783,3.798,784,0.84,788,1.818,790,1.13,794,1.13,815,1.734,831,0.87,854,0.572,856,2.499,862,4.162,866,4.162,872,2.561,913,1.167,931,1.956,937,2.027,944,2.324,955,2.162,972,2.559,992,1.196,1006,2.162,1032,1.475,1035,1.914,1038,2.159,1043,5.38,1044,1.592,1048,0.903,1099,4.51,1111,1.914,1116,1.276,1123,2.162,1124,1.276,1146,3.281,1155,1.211,1160,5.508,1170,0.985,1171,1.659,1172,0.543,1173,1.276,1174,1.447,1175,5.984,1176,2.932,1177,2.932,1178,3.57,1179,3.57,1180,4.863,1181,1.375,1182,1.375,1183,1.196,1184,1.13,1185,0.603,1186,1.13,1187,1.375,1188,1.375,1189,1.375,1190,2.33,1191,1.375,1192,1.375,1193,1.375,1194,6.02,1195,1.375,1196,2.637,1197,4.339,1198,1.375,1199,1.375,1200,1.375,1201,3.994,1202,1.375,1203,1.13,1204,1.375,1205,1.375,1206,1.375,1207,1.375,1208,2.33,1209,1.375,1210,1.375,1211,2.162,1212,1.375,1213,1.375,1214,1.375,1215,2.33,1216,3.57,1217,4.559,1218,1.196,1219,1.276,1220,4.339,1221,2.33,1222,2.162,1223,4.339,1224,2.637,1225,1.288,1226,1.05,1227,1.375,1228,2.162,1229,1.375,1230,1.375,1231,1.375,1232,1.375,1233,1.375,1234,1.375,1235,1.375,1236,1.375,1237,1.375,1238,1.196,1239,1.196,1240,1.276,1241,1.276,1242,1.276,1243,1.276,1244,1.375,1245,1.375,1246,1.276,1247,1.276,1248,1.375,1249,1.375,1250,1.375,1251,1.375,1252,1.375,1253,1.375,1254,5.852,1255,1.375,1256,2.33,1257,1.375,1258,5.067,1259,1.375,1260,1.375,1261,1.375,1262,3.032,1263,1.375,1264,1.375,1265,1.375,1266,1.375,1267,1.375,1268,1.375,1269,1.375,1270,1.375,1271,1.375,1272,1.375,1273,1.375,1274,1.375,1275,1.375,1276,1.375,1277,2.365,1278,1.276,1279,2.33,1280,1.375,1281,1.375,1282,3.57,1283,1.375,1284,1.375,1285,3.032,1286,3.57,1287,1.375,1288,1.375,1289,1.531,1290,1.142,1291,3.032,1292,0.76,1293,3.57,1294,1.973,1295,6.829,1296,1.914,1297,1.375,1298,1.375,1299,5.65,1300,6.32,1301,6.526,1302,5.243,1303,1.375,1304,3.995,1305,1.375,1306,1.375,1307,4.624,1308,1.375,1309,1.375,1310,1.375,1311,1.375,1312,1.375,1313,1.375,1314,2.33,1315,3.032,1316,2.33,1317,1.375,1318,1.375,1319,1.375,1320,1.375,1321,1.375,1322,1.375,1323,6.088,1324,1.375,1325,3.032,1326,2.33,1327,4.624,1328,1.375,1329,2.33,1330,1.375,1331,3.032,1332,4.339,1333,1.375,1334,1.375,1335,2.33,1336,1.375,1337,1.375,1338,1.375,1339,0.979,1340,1.375,1341,1.375,1342,1.375,1343,3.995,1344,1.375,1345,2.33,1346,1.375,1347,2.33,1348,3.794,1349,1.375,1350,1.375,1351,1.375,1352,1.375,1353,1.375,1354,1.375,1355,1.375,1356,1.375,1357,1.375,1358,1.196,1359,4.229,1360,2.33,1361,1.375,1362,1.375,1363,1.375,1364,1.375,1365,1.375,1366,1.375,1367,1.375,1368,1.375,1369,4.024,1370,5.531,1371,4.339,1372,4.339,1373,1.375,1374,1.375,1375,1.375,1376,1.375,1377,1.375,1378,2.33,1379,3.995,1380,1.375,1381,1.375,1382,1.375,1383,1.375,1384,1.375,1385,2.162,1386,1.375,1387,2.33,1388,2.33,1389,1.375,1390,1.375,1391,2.33,1392,1.375,1393,1.375,1394,2.33,1395,1.375,1396,3.032,1397,1.375,1398,2.33,1399,1.375,1400,1.375,1401,1.375,1402,2.33,1403,2.33,1404,3.116,1405,1.375,1406,1.375,1407,1.375,1408,1.375,1409,1.375,1410,1.276,1411,1.375,1412,1.375,1413,1.375,1414,1.375,1415,0.939,1416,1.196,1417,2.162,1418,1.375,1419,1.276,1420,1.375,1421,1.375,1422,1.375,1423,1.375,1424,3.032,1425,3.032,1426,1.375,1427,1.375,1428,2.33,1429,1.375,1430,1.023,1431,1.023,1432,1.375,1433,1.375,1434,1.375,1435,1.375,1436,1.375,1437,1.375,1438,1.375,1439,1.375,1440,1.375,1441,1.375,1442,2.33,1443,1.375,1444,3.995,1445,2.33,1446,3.995,1447,1.375,1448,1.375,1449,3.732,1450,1.375,1451,1.375,1452,2.33,1453,1.375,1454,1.375,1455,1.375,1456,2.33,1457,1.375,1458,1.375,1459,2.33,1460,1.375,1461,2.162,1462,1.375,1463,1.375,1464,1.375,1465,1.196,1466,1.375,1467,1.375,1468,1.375,1469,2.162,1470,1.375,1471,1.375,1472,2.33,1473,1.276,1474,1.276,1475,1.196,1476,1.375,1477,1.375,1478,2.33,1479,1.375,1480,1.375,1481,2.33,1482,1.375,1483,2.027,1484,1.276,1485,1.375,1486,1.375,1487,2.162,1488,2.33,1489,2.027,1490,2.162,1491,1.375,1492,1.375,1493,1.375,1494,2.33,1495,1.375,1496,2.33,1497,1.375,1498,1.375]],["title/interfaces/Formats.html",[1170,0.641,1584,2.003]],["body/interfaces/Formats.html",[3,0.08,4,0.08,5,1.535,9,0.105,11,0.269,13,1.172,14,1.413,17,1.427,24,0.269,25,0.712,36,0.01,37,0.739,38,0.632,39,0.817,57,1.584,63,1.243,70,1.795,80,0.196,109,1.908,113,2.006,120,1.142,178,1.123,183,1.151,186,0.715,202,0.751,214,0.005,215,0.005,250,1.506,265,2.138,271,3.244,276,2.213,283,2.909,344,0.715,492,3.271,543,1.058,546,1.172,586,1.757,587,3.045,628,1.142,639,1.113,701,2.006,745,2.546,748,1.172,756,1.058,769,2.016,806,2.452,832,1.464,833,2.016,834,1.509,835,2.138,836,1.557,837,1.509,838,1.557,839,1.381,840,2.526,846,1.608,854,2.55,856,2.475,872,2.633,880,2.777,882,1.662,884,1.662,885,1.557,913,2.188,931,2.017,944,3.433,953,2.427,1030,2.696,1031,1.608,1104,2.274,1170,1.306,1172,1.113,1174,2.731,1185,2.344,1225,2.274,1226,2.408,1290,1.381,1292,2.954,1294,2.274,1516,2.377,1526,1.509,1558,2.016,1571,2.826,1584,3.498,1585,1.608,1586,2.867,1587,3.502,1588,3.281,1589,3.18,1590,3.281,1591,3.846,1592,2.274,1593,1.72,1594,2.968,1595,2.968,1596,1.509,1597,1.662,1598,2.774,1599,3.05,1600,2.512,1601,2.512,1602,1.608,1603,1.608,1604,1.608,1605,2.774,1606,1.608,1607,2.274,1608,1.72,1609,1.72,1610,2.512,1611,3.263,1612,2.512,1613,1.72,1614,1.72,1615,2.512,1616,2.774,1617,1.464,1618,2.348,1619,1.72,1620,1.72,1621,1.72,1622,1.72,1623,1.72]],["title/interfaces/Game.html",[169,1.422,1170,0.641]],["body/interfaces/Game.html",[3,0.136,4,0.136,9,0.123,11,0.607,24,0.457,25,1.018,36,0.01,38,0.645,39,0.81,49,6.643,63,1.201,76,0.423,80,0.136,169,2.917,202,1.958,214,0.008,215,0.008,854,2.448,1155,3.452,1170,1.163,1172,1.892,1174,2.385,1185,2.581,1516,2.446,1618,3.891,1624,5.258,1625,6.643,1626,7.1,1627,6.643,1628,5.415,1629,6.643,1630,6.643,1631,8.267,1632,8.267]],["title/components/GameInfoComponent.html",[0,0.675,171,1.46]],["body/components/GameInfoComponent.html",[0,1.15,1,1.298,2,1.979,3,0.17,4,0.091,5,1.012,6,1.484,7,1.484,8,1.484,9,0.082,11,0.43,12,3.212,13,1.877,14,0.633,17,0.941,18,3.268,19,2.859,20,2.09,22,2.09,24,0.305,27,1.012,30,1.358,33,1.425,35,0.718,36,0.01,37,0.703,38,0.52,39,0.441,49,3.204,57,1.037,60,0.914,61,1.737,67,1.425,76,0.398,77,0.365,80,0.091,81,0.25,82,0.649,99,2.189,100,3.344,101,3.081,102,2.027,103,2.105,104,3.133,105,2.662,106,3.302,107,1.665,109,1.144,110,2.632,111,3.706,112,2.86,113,1.96,115,3.38,116,2.611,117,3.38,118,4.218,120,2.116,122,3.105,123,2.964,126,2.027,127,2.211,128,3.41,131,2.846,134,1.616,139,2.384,140,2.384,142,2.972,144,3.212,149,2.027,150,2.027,154,1.062,155,2.09,156,2.033,157,1.333,158,1.484,160,1.484,161,1.333,162,1.484,163,1.333,164,1.484,165,1.298,166,1.116,167,1.484,168,1.368,169,2.915,170,2.419,171,2.578,172,2.626,173,1.298,174,1.484,175,1.265,176,1.484,177,1.333,178,0.874,179,2.09,180,1.298,181,1.484,182,1.298,183,0.896,184,1.484,185,1.333,186,1.145,187,1.333,188,1.298,189,1.484,190,1.333,191,2.116,192,1.484,193,1.333,194,1.203,195,1.298,196,1.484,197,1.298,198,1.484,199,1.298,200,1.484,201,1.368,202,1.696,203,1.333,204,1.298,205,1.484,206,1.333,207,1.298,208,1.037,209,1.089,210,1.405,211,1.298,212,1.444,213,1.484,214,0.006,215,0.006,256,2.239,258,2.421,268,1.571,269,1.611,276,1.062,348,2.755,553,2.189,596,3.082,599,3.52,615,4.534,617,4.175,618,4.657,663,2.855,664,3.718,701,1.203,1083,2.384,1618,2.98,1633,6.37,1634,6.37,1635,2.787,1636,4.844,1637,4.185,1638,5.67,1639,4.512,1640,4.29,1641,4.29,1642,5.616,1643,3.357,1644,3.988,1645,3.988,1646,4.401,1647,4.657,1648,3.516,1649,5.092,1650,4.512,1651,3.988,1652,3.516,1653,3.204,1654,3.204,1655,2.972,1656,7.056,1657,7.437,1658,7.056,1659,5.616,1660,5.616,1661,5.616,1662,5.616,1663,2.855,1664,5.73,1665,5.543,1666,2.5,1667,4.951,1668,2.972,1669,2.632,1670,1.956,1671,1.956,1672,2.384,1673,3.516,1674,2.281,1675,2.632,1676,3.988,1677,3.988,1678,4.185,1679,4.185,1680,3.988,1681,3.516,1682,3.988,1683,2.384]],["title/injectables/GameService.html",[252,0.89,1684,3.255]],["body/injectables/GameService.html",[3,0.092,4,0.092,9,0.083,11,0.593,24,0.309,25,0.788,27,1.021,30,1.183,33,1.499,35,1.346,36,0.01,37,0.706,38,0.586,39,0.827,42,1.965,60,1.361,63,0.91,67,1.896,72,1.369,73,1.403,76,0.53,77,0.369,80,0.092,81,0.253,82,1.261,166,1.832,169,3.001,214,0.006,215,0.006,249,1.783,252,1.155,254,1.637,256,1.798,258,2.31,268,1.586,269,1.625,278,2.881,282,2.937,301,2.516,306,1.188,311,1.423,312,1.386,313,2.143,320,2.263,344,1.799,477,2.962,493,2.296,546,1.893,553,4.778,606,2.231,609,3.8,647,3.648,668,2.439,724,3.245,756,2.14,763,3.241,765,3.363,784,2.779,831,2.053,852,2.666,860,2.053,865,2.822,867,2.666,1032,3.327,1090,3.01,1092,4.32,1093,3.241,1112,2.31,1155,3.491,1171,3.744,1175,3.01,1194,3.01,1226,2.051,1242,4.878,1243,4.223,1339,3.241,1348,2.532,1410,3.01,1415,3.11,1483,3.959,1484,3.01,1625,3.245,1626,3.245,1627,3.245,1628,2.532,1629,3.245,1630,3.245,1684,5.288,1685,3.56,1686,3.387,1687,5.666,1688,5.666,1689,5.288,1690,5.666,1691,5.666,1692,7.095,1693,4.448,1694,5.666,1695,5.666,1696,4.039,1697,3.74,1698,4.223,1699,5.666,1700,4.039,1701,4.039,1702,5.666,1703,4.039,1704,5.666,1705,4.039,1706,4.039,1707,4.039,1708,4.039,1709,4.039,1710,4.039,1711,4.039,1712,4.039,1713,3.56,1714,3.56,1715,4.039,1716,4.039,1717,4.039,1718,4.039,1719,4.039,1720,4.039,1721,4.039,1722,4.039,1723,4.039,1724,4.039,1725,4.039,1726,3.56,1727,4.039,1728,4.039,1729,4.039,1730,4.039,1731,4.039,1732,4.039,1733,4.039,1734,4.039,1735,4.039,1736,4.039,1737,4.039,1738,4.039,1739,4.039,1740,6.255,1741,3.56,1742,4.039,1743,5.666,1744,3.56,1745,4.039,1746,4.039,1747,4.039,1748,4.039,1749,4.039,1750,4.039,1751,3.56,1752,3.56,1753,4.039,1754,3.01,1755,4.039,1756,4.039,1757,4.039,1758,3.56,1759,4.039,1760,3.56]],["title/components/GamesPage.html",[0,0.675,173,1.422]],["body/components/GamesPage.html",[0,0.988,1,0.79,2,1.362,3,0.11,4,0.055,5,0.616,6,0.903,7,0.903,8,0.903,9,0.123,11,0.459,14,0.385,15,1.4,16,1.953,17,0.573,18,3.101,19,2.708,20,1.439,22,1.439,24,0.186,25,0.764,27,0.696,28,2.227,30,0.807,33,1.358,35,0.99,36,0.01,37,0.709,38,0.442,39,0.608,42,1.865,46,1.362,47,1.567,48,1.567,52,1.664,57,1.509,60,1.091,61,2.074,67,1.522,72,1.328,73,0.957,76,0.55,77,0.222,80,0.055,81,0.152,82,1.222,85,1.61,87,1.966,107,1.614,109,0.696,112,1.567,115,3.358,116,2.493,117,3.43,122,1.014,124,1.078,127,0.956,131,1.479,134,2.59,135,1.451,136,1.522,137,2.88,138,2.88,139,2.311,140,2.311,141,1.602,143,1.451,144,1.389,145,3.76,146,1.281,147,1.522,148,1.451,149,1.966,150,1.966,151,1.451,152,1.451,153,1.602,154,0.647,155,1.439,156,1.4,157,0.811,158,0.903,160,0.903,161,0.811,162,0.903,163,0.811,164,0.903,165,0.79,166,2.224,167,0.903,168,1.653,169,2.894,170,1.793,171,0.811,172,2.044,173,2.081,174,0.903,175,0.77,176,0.903,177,0.811,178,0.532,179,1.439,180,0.79,181,0.903,182,0.79,183,0.545,184,0.903,185,0.811,186,0.788,187,0.811,188,0.79,189,0.903,190,0.811,191,2.393,192,0.903,193,0.811,194,0.732,195,0.79,196,0.903,197,0.79,198,0.903,199,0.79,200,0.903,201,0.833,202,1.489,203,0.811,204,0.79,205,0.903,206,0.811,207,0.79,208,0.631,209,0.663,210,0.855,211,0.79,212,0.879,213,0.903,214,0.004,215,0.004,240,0.811,249,1.957,256,2.028,258,1.569,268,1.082,269,1.109,282,1.259,306,0.714,313,1.923,320,1.252,344,1.557,348,2.695,382,1.567,383,2.011,433,1.281,436,3.815,470,2.899,487,1.113,495,2.311,496,2.88,546,0.811,553,4.192,609,1.897,612,1.833,617,1.897,628,1.789,635,1.614,636,1.717,668,1.045,688,3.538,701,0.732,711,2.227,724,3.107,725,1.451,734,1.522,740,4.102,817,4.218,860,1.234,868,1.522,940,4.593,943,4.763,946,2.424,950,3.871,959,4.095,960,2.881,972,1.833,1002,3.408,1032,2.793,1038,1.389,1056,4.486,1061,3.015,1063,3.444,1074,1.522,1122,1.602,1146,2.552,1155,2.668,1186,1.602,1226,1.4,1289,2.04,1404,3.02,1449,3.143,1483,2.702,1487,1.809,1490,1.809,1516,0.663,1571,1.977,1617,1.614,1625,3.871,1626,5.135,1627,3.107,1628,3.444,1629,5.135,1630,3.107,1633,1.951,1640,2.552,1641,2.552,1646,3.879,1647,2.552,1649,2.552,1652,2.14,1663,3.646,1670,1.191,1671,1.191,1684,4.996,1693,4.362,1740,2.14,1751,2.14,1761,2.14,1762,2.122,1763,4.818,1764,3.866,1765,4.218,1766,5.494,1767,5.494,1768,5.494,1769,3.107,1770,2.428,1771,5.186,1772,5.431,1773,3.444,1774,3.866,1775,4.362,1776,4.247,1777,2.702,1778,2.552,1779,2.881,1780,3.107,1781,2.428,1782,2.428,1783,2.428,1784,3.866,1785,2.428,1786,3.866,1787,2.428,1788,3.107,1789,2.428,1790,3.107,1791,5.592,1792,2.428,1793,3.107,1794,2.793,1795,3.444,1796,2.881,1797,3.107,1798,3.107,1799,2.702,1800,3.107,1801,4.818,1802,2.428,1803,2.552,1804,1.696,1805,1.602,1806,5.136,1807,1.809,1808,2.428,1809,2.428,1810,1.951,1811,1.951,1812,1.696,1813,1.602,1814,1.809,1815,1.951,1816,1.696,1817,3.408,1818,2.881,1819,2.428,1820,5.011,1821,4.733,1822,4.733,1823,3.871,1824,5.478,1825,4.415,1826,5.011,1827,4.095,1828,5.135,1829,5.289,1830,3.408,1831,3.408,1832,3.408,1833,1.951,1834,2.428,1835,1.809,1836,3.408,1837,2.428,1838,4.247,1839,2.428,1840,2.428,1841,2.428,1842,1.951,1843,1.951,1844,1.951,1845,1.951,1846,1.809,1847,1.951,1848,1.951,1849,4.821,1850,1.951,1851,4.415,1852,1.951,1853,1.951,1854,1.951,1855,1.951,1856,3.107,1857,2.428,1858,2.428,1859,2.428,1860,4.818,1861,2.428,1862,2.14,1863,2.14,1864,2.14,1865,2.428,1866,2.14,1867,2.428,1868,1.951,1869,3.408,1870,2.428,1871,3.408,1872,2.428,1873,2.428,1874,3.408,1875,2.428,1876,2.428,1877,3.107,1878,2.428,1879,2.428,1880,2.428,1881,2.428,1882,2.428,1883,2.428,1884,2.428,1885,3.866,1886,5.494,1887,2.428,1888,2.428,1889,3.015,1890,2.428,1891,2.428,1892,3.866,1893,5.494,1894,2.428,1895,2.428,1896,2.428,1897,2.428,1898,2.428,1899,2.428,1900,3.107,1901,2.428,1902,2.428,1903,3.866,1904,3.866,1905,1.809,1906,1.696,1907,1.696,1908,1.602,1909,1.451,1910,1.522,1911,1.389]],["title/modules/GamesPageModule.html",[216,1.135,1912,3.255]],["body/modules/GamesPageModule.html",[3,0.147,4,0.147,9,0.132,36,0.01,76,0.63,77,0.588,80,0.147,81,0.402,154,1.712,173,2.862,214,0.008,215,0.008,216,1.671,218,2.148,219,2.947,220,4.017,221,3.153,222,2.854,223,2.265,228,4.167,229,3.759,230,3.153,231,2.392,233,2.774,234,2.774,235,3.392,236,3.046,237,3.392,238,2.53,239,3.268,240,2.148,241,3.392,553,3.527,1912,6.75,1913,5.666,1914,5.666,1915,5.666,1916,6.143,1917,6.427,1918,5.666,1919,4.242]],["title/modules/GamesPageRoutingModule.html",[216,1.135,1916,3.052]],["body/modules/GamesPageRoutingModule.html",[0,1.055,3,0.156,4,0.156,9,0.14,36,0.01,76,0.595,77,0.624,80,0.156,81,0.427,173,2.585,214,0.008,215,0.008,218,2.281,223,2.406,233,2.472,234,2.875,245,3.603,246,3.614,247,4.037,248,2.406,249,1.571,250,2.008,251,3.747,1916,5.548,1918,6.018,1920,6.827]],["title/components/HomePage.html",[0,0.675,175,1.386]],["body/components/HomePage.html",[0,1.081,1,1.109,2,1.766,3,0.078,4,0.078,5,0.864,6,1.267,7,1.267,8,1.267,9,0.07,11,0.384,14,1.16,15,1.814,16,2.41,17,0.803,18,3.222,19,2.817,20,1.865,22,1.865,24,0.261,25,0.912,26,5.243,27,0.903,28,2.658,30,1.047,32,3.752,33,1.462,35,0.613,36,0.01,37,0.62,38,0.438,39,0.377,40,4.371,42,2.135,44,2.75,46,1.766,47,2.031,48,2.031,52,2.157,57,1.432,60,1.19,61,2.262,63,0.473,70,1.271,72,1.211,73,1.472,74,2.645,75,3.502,76,0.605,77,0.311,78,2.379,79,2.379,80,0.078,81,0.213,82,1.231,84,3.002,85,1.138,88,3.002,89,3.002,99,1.869,100,2.819,101,3.313,102,2.548,103,2.645,104,2.641,105,2.375,106,2.912,109,1.882,110,3.308,112,1.38,113,1.027,115,2.833,116,2.399,117,2.833,118,2.036,120,1.109,121,2.736,122,2.919,124,2.912,126,2.548,127,2.582,128,3.353,131,1.918,132,2.134,134,2.031,135,2.036,146,1.797,154,0.907,155,1.865,156,1.814,157,1.138,158,1.267,160,1.267,161,1.138,162,1.267,163,1.138,164,1.267,165,1.109,166,1.664,167,1.267,168,1.168,169,1.632,170,2.213,171,1.138,172,2.441,173,1.109,174,1.267,175,2.32,176,1.267,177,1.138,178,1.304,179,1.865,180,1.109,181,1.267,182,1.109,183,0.765,184,1.267,185,1.675,186,1.425,187,1.138,188,1.109,189,1.267,190,1.138,191,1.109,192,1.267,193,1.138,194,1.027,195,1.109,196,1.267,197,1.109,198,1.267,199,1.109,200,1.267,201,1.168,202,1.496,203,1.138,204,1.109,205,1.267,206,1.138,207,1.109,208,1.817,209,0.93,210,1.2,211,1.109,212,1.233,213,1.267,214,0.005,215,0.005,231,1.865,240,1.138,248,1.2,249,0.784,268,1.402,269,1.438,276,0.907,306,1.001,313,2.168,332,1.731,333,1.731,338,1.797,344,1.614,345,3.023,355,2.738,356,4.257,382,2.031,383,2.092,407,1.303,436,1.731,437,2.379,477,2.738,482,2.379,484,3.002,493,2.963,518,4.182,543,2.205,546,2.443,553,2.75,584,2.134,589,5.782,590,5.782,592,5.782,594,5.782,604,3.502,605,2.092,606,1.973,612,2.375,627,5.781,628,2.689,635,2.092,636,2.225,638,3.502,639,1.59,667,2.379,679,3.002,681,3.002,682,3.002,684,3.002,688,3.138,693,2.538,701,2.205,709,2.379,711,2.658,802,2.736,862,2.247,866,2.247,1061,1.869,1449,1.948,1502,3.735,1535,2.134,1571,1.053,1663,1.731,1666,3.141,1667,4.418,1668,2.538,1669,2.247,1670,2.458,1671,2.458,1672,2.036,1683,2.036,1693,4.111,1762,2.75,1765,4.614,1773,2.134,1775,5.046,1803,3.308,1804,2.379,1805,2.247,1806,2.379,1810,2.736,1812,2.379,1816,2.379,1820,4.583,1821,3.308,1909,3.555,1921,3.002,1922,5.947,1923,5.012,1924,5.782,1925,4.329,1926,4.111,1927,5.012,1928,3.405,1929,4.418,1930,6.163,1931,3.405,1932,3.405,1933,3.405,1934,3.405,1935,3.405,1936,3.405,1937,3.002,1938,2.379,1939,2.379,1940,2.736,1941,1.869,1942,2.736,1943,2.736,1944,3.405,1945,3.405,1946,3.405,1947,3.405,1948,4.418,1949,5.012,1950,3.405,1951,3.405,1952,3.002,1953,2.736,1954,3.002,1955,3.405,1956,3.405,1957,3.405,1958,3.461,1959,3.002,1960,6.559,1961,3.002,1962,3.405,1963,2.036,1964,3.405,1965,3.405,1966,4.418,1967,3.405,1968,2.736,1969,3.405,1970,3.405,1971,3.405,1972,3.405,1973,3.405,1974,3.405,1975,4.418,1976,3.405,1977,3.405,1978,3.002,1979,2.379,1980,3.405,1981,3.405,1982,3.405,1983,3.405]],["title/modules/HomePageModule.html",[216,1.135,1984,3.255]],["body/modules/HomePageModule.html",[3,0.145,4,0.145,9,0.131,36,0.01,76,0.628,77,0.581,80,0.145,81,0.398,154,1.692,175,2.882,214,0.008,215,0.008,216,1.651,218,2.122,219,2.912,220,3.997,221,3.116,222,2.82,223,2.681,228,4.155,229,3.733,230,3.116,231,2.363,233,2.755,234,2.755,235,3.352,236,3.01,237,3.352,238,2.501,239,3.229,240,2.122,241,3.352,243,4.733,518,3.633,1984,6.768,1985,5.599,1986,5.599,1987,5.599,1988,5.599,1989,6.126,1990,6.351,1991,5.599,1992,6.351]],["title/modules/HomePageRoutingModule.html",[216,1.135,1989,3.052]],["body/modules/HomePageRoutingModule.html",[0,1.055,3,0.156,4,0.156,9,0.14,36,0.01,76,0.595,77,0.624,80,0.156,81,0.427,175,2.52,214,0.008,215,0.008,218,2.281,223,2.406,233,2.472,234,2.875,245,3.603,246,3.614,247,4.037,248,2.406,249,1.571,250,2.008,251,3.747,1989,5.548,1991,6.018,1993,6.827]],["title/injectables/HttpClientProvider.html",[32,2.498,252,0.89]],["body/injectables/HttpClientProvider.html",[3,0.084,4,0.084,9,0.076,11,0.608,24,0.283,27,1.229,32,3.045,33,1.432,35,1.557,36,0.01,37,0.733,38,0.662,39,0.858,40,5.513,44,2.922,54,5.415,55,6.849,60,1.379,61,1.647,63,1.213,70,2.295,72,1.507,76,0.377,77,0.338,78,5.546,80,0.084,81,0.452,82,1.433,87,2.707,107,2.223,127,2.963,214,0.006,215,0.006,222,2.364,252,1.085,254,1.5,258,2.221,261,4.278,262,5.481,263,4.766,264,4.766,270,3.72,272,2.922,275,5.546,282,2.908,283,3.305,294,7.247,296,4.278,299,7.015,306,1.088,311,1.304,312,1.269,344,1.8,382,3.276,744,6.381,747,3.72,815,3.183,972,2.524,1030,3.483,1042,5.498,1048,2.81,1569,3.045,1994,3.262,1995,4.278,1996,5.324,1997,5.324,1998,4.693,1999,4.693,2000,3.7,2001,6.361,2002,4.693,2003,3.7,2004,3.7,2005,4.693,2006,7.4,2007,3.7,2008,6.635,2009,4.693,2010,3.7,2011,4.693,2012,3.7,2013,4.693,2014,5.498,2015,5.498,2016,5.498,2017,3.7,2018,6.013,2019,5.609,2020,6.013]],["title/injectables/HttpClientWebProvider.html",[252,0.89,457,3.255]],["body/injectables/HttpClientWebProvider.html",[3,0.07,4,0.07,9,0.063,11,0.61,24,0.234,27,0.832,30,0.637,32,4.482,33,1.447,35,1.553,36,0.01,37,0.741,38,0.66,39,0.867,40,5.513,43,4.071,44,2.534,46,2.189,55,6.824,60,1.374,61,1.428,63,1.18,67,1.576,70,2.267,72,1.857,73,1.738,76,0.44,77,0.279,78,4.341,79,2.132,80,0.07,81,0.191,82,1.424,83,1.746,107,1.928,127,3.085,214,0.005,215,0.005,252,1.266,254,1.237,258,2.023,261,3.711,262,4.992,263,4.341,264,4.341,268,1.965,269,1.325,270,4.906,271,2.117,275,5.639,282,2.849,283,3.177,294,7.283,296,3.711,299,7.124,306,0.897,311,1.075,312,1.047,313,2.014,320,1.998,344,1.757,382,3.372,383,3.135,453,5.371,455,2.274,457,4.63,642,3.048,670,2.274,804,2.895,808,2.534,813,4.359,844,1.824,972,3.163,1030,3.372,1794,1.551,1998,4.071,1999,4.071,2002,4.071,2005,4.071,2006,7.798,2008,6.908,2009,4.071,2011,4.071,2013,4.071,2014,4.911,2015,4.911,2016,4.911,2018,5.477,2019,5.232,2020,5.477,2021,2.69,2022,4.618,2023,4.618,2024,4.618,2025,3.052,2026,3.052,2027,4.618,2028,3.052,2029,7.02,2030,4.618,2031,3.052,2032,5.571,2033,3.052,2034,7.836,2035,3.052,2036,3.052,2037,4.071,2038,3.052,2039,3.052,2040,3.052,2041,3.052,2042,3.052,2043,4.618,2044,3.052,2045,5.571,2046,6.673,2047,3.052,2048,5.571,2049,3.052,2050,2.69,2051,4.618,2052,3.052,2053,5.571,2054,3.052,2055,3.052,2056,3.052,2057,3.052]],["title/injectables/JwtService.html",[252,0.89,266,2.498]],["body/injectables/JwtService.html",[3,0.115,4,0.115,9,0.104,11,0.505,24,0.387,25,0.917,27,1.402,30,1.534,33,1.529,35,0.911,36,0.01,37,0.478,38,0.541,39,0.559,42,1.674,60,1.392,63,1.021,67,1.674,72,1.222,73,1.633,76,0.52,77,0.462,80,0.151,81,0.316,82,0.823,85,1.69,214,0.007,215,0.007,252,1.345,254,2.049,265,3.81,266,3.774,273,5.137,282,2.894,306,1.487,311,1.782,312,1.735,320,2.023,639,2.47,765,3.127,846,4.198,997,5.301,1035,4.354,1100,5.816,1217,5.785,1762,3.621,1995,5.301,2058,4.063,2059,6.597,2060,7.783,2061,6.597,2062,7.783,2063,7.783,2064,7.783,2065,6.597,2066,6.597,2067,5.056,2068,6.597,2069,6.597,2070,8.279,2071,5.816,2072,5.056,2073,7.539,2074,5.056,2075,6.597,2076,6.597,2077,6.597,2078,5.056,2079,5.816,2080,5.056,2081,4.457,2082,5.301,2083,5.056,2084,5.056,2085,5.056,2086,8.279,2087,5.056,2088,5.301,2089,6.597,2090,5.9,2091,6.597,2092,5.056,2093,5.056,2094,5.056,2095,5.056,2096,5.056,2097,5.056,2098,5.056]],["title/components/LoginFormComponent.html",[0,0.675,177,1.46]],["body/components/LoginFormComponent.html",[0,1.162,1,1.337,2,2.02,3,0.094,4,0.094,5,1.042,6,1.528,7,1.528,8,1.528,9,0.084,11,0.314,14,0.652,15,2.075,16,2.677,17,0.969,18,3.276,19,2.866,20,2.133,22,2.133,24,0.314,25,0.797,27,1.033,28,2.897,30,1.379,33,1.506,35,1.033,36,0.01,37,0.711,38,0.554,39,0.634,46,2.02,47,2.323,48,2.323,60,1.075,61,2.043,63,0.993,67,1.042,72,1.385,73,1.928,76,0.468,77,0.375,80,0.094,81,0.257,82,0.669,83,2.349,85,2.388,87,3.634,104,2.932,106,3.174,109,1.178,112,2.323,113,1.729,115,2.323,116,2.268,120,2.15,122,2.393,123,3.025,124,1.823,128,1.883,131,2.527,134,2.323,144,2.349,148,2.455,149,2.914,150,2.914,151,2.455,152,2.455,154,1.094,155,2.133,156,2.075,157,1.372,158,1.528,160,1.528,161,1.372,162,1.528,163,1.372,164,1.528,165,1.337,166,1.604,167,1.528,168,1.409,169,1.866,170,2.457,171,1.372,172,2.66,173,1.337,174,1.528,175,1.303,176,1.528,177,2.603,178,1.84,179,2.133,180,1.337,181,1.528,182,1.337,183,0.923,184,1.528,185,1.372,186,1.168,187,1.372,188,1.337,189,1.528,190,1.372,191,1.337,192,1.528,193,1.372,194,1.239,195,1.337,196,1.528,197,1.337,198,1.528,199,1.337,200,1.528,201,1.409,202,1.227,203,1.372,204,1.337,205,1.528,206,1.372,207,1.337,208,1.068,209,1.121,210,1.447,211,1.337,212,1.487,213,1.528,214,0.006,215,0.006,238,1.617,256,1.819,348,4.196,383,2.393,407,1.571,587,3.509,596,3.146,599,3.593,615,3.778,617,2.812,635,2.393,649,4.272,663,3.634,664,4.088,701,1.239,740,2.349,760,2.254,798,2.349,856,1.528,1076,3.061,1184,3.783,1475,4.614,1672,2.455,1681,3.62,1794,4.553,1795,3.593,1908,2.71,1911,2.349,1941,2.254,2099,7.302,2100,6.655,2101,3.3,2102,5.822,2103,5.053,2104,6.628,2105,6.422,2106,4.272,2107,3.62,2108,6.173,2109,5.732,2110,5.053,2111,5.053,2112,5.732,2113,4.107,2114,5.732,2115,5.732,2116,6.301,2117,4.107,2118,5.053,2119,4.107,2120,4.359,2121,4.107,2122,4.272,2123,5.053,2124,4.107,2125,2.87,2126,4.107,2127,4.107,2128,4.107,2129,3.3,2130,3.3,2131,4.272,2132,3.62,2133,3.62,2134,4.107,2135,4.107,2136,3.62,2137,5.732,2138,5.732,2139,5.732,2140,5.732,2141,5.732,2142,5.732,2143,4.107,2144,3.061,2145,4.107,2146,3.62,2147,4.107,2148,4.107,2149,2.455,2150,4.107,2151,4.107,2152,3.62]],["title/components/LoginPage.html",[0,0.675,180,1.422]],["body/components/LoginPage.html",[0,1.168,1,1.107,2,1.764,3,0.078,4,0.078,5,0.863,6,1.265,7,1.265,8,1.265,9,0.07,11,0.502,12,2.864,14,1.108,15,1.813,16,2.408,17,0.802,18,3.222,19,2.817,20,1.863,22,1.863,24,0.26,25,0.911,27,0.902,28,2.657,30,1.369,33,1.395,35,1.361,36,0.01,37,0.691,38,0.483,39,0.657,46,1.764,47,2.029,48,2.029,52,2.155,57,1.097,59,2.642,60,1.137,61,2.028,63,0.971,72,0.822,73,0.842,74,2.642,76,0.518,77,0.311,80,0.078,81,0.213,82,1.19,85,2.335,87,2.546,98,2.998,99,1.866,100,3.464,101,3.107,102,2.546,103,2.642,104,2.639,105,2.373,106,3.245,109,2.096,112,2.029,113,1.792,115,2.657,116,2.319,117,3.063,119,1.729,120,2.134,122,2.481,123,1.795,124,1.51,126,2.546,127,2.581,128,1.559,130,1.945,131,2.274,134,2.408,146,1.795,149,1.729,150,1.729,154,0.906,155,1.863,156,1.813,157,1.136,158,1.265,160,1.265,161,1.136,162,1.265,163,1.136,164,1.265,165,1.107,166,2.215,167,1.265,168,1.167,169,1.63,170,2.211,171,1.136,172,2.439,173,1.107,174,1.265,175,1.079,176,1.265,177,1.136,178,1.829,179,1.863,180,2.379,181,1.265,182,1.107,183,0.764,184,1.265,185,1.136,186,1.02,187,1.136,188,1.107,189,1.265,190,1.136,191,1.935,192,1.265,193,1.136,194,1.026,195,1.107,196,1.265,197,1.107,198,1.265,199,1.107,200,1.265,201,1.167,202,1.071,203,1.136,204,1.107,205,1.265,206,1.136,207,1.107,208,0.884,209,0.928,210,1.198,211,1.107,212,1.231,213,1.265,214,0.005,215,0.005,240,1.136,246,2.155,248,1.198,249,1.153,256,1.589,272,3.598,281,2.748,313,1.88,332,3.333,333,3.021,338,3.136,340,1.866,345,3.021,347,5.107,348,3.216,355,3.237,356,4.417,357,5.872,368,3.312,379,2.998,406,3.919,411,3.399,436,2.546,533,2.244,573,3.305,605,2.09,615,1.945,627,3.732,628,2.134,635,2.09,636,2.223,664,1.945,667,2.376,688,3.857,693,2.534,701,1.792,709,2.376,740,4.723,760,4.147,769,1.971,798,3.75,804,3.139,815,2.993,860,1.729,862,3.305,866,2.244,868,2.132,888,2.998,1048,2.642,1076,2.534,1079,2.376,1081,3.919,1122,2.244,1369,3.732,1449,1.945,1502,3.732,1588,1.51,1590,1.51,1646,1.795,1663,2.546,1665,2.534,1669,2.244,1670,2.456,1671,1.668,1672,2.033,1674,1.945,1772,4.987,1773,5.045,1778,3.305,1804,4.152,1805,2.244,1820,4.58,1821,3.305,1826,2.376,1827,2.534,1909,3.553,1911,1.945,1924,5.779,1929,4.414,1930,5.239,1941,1.866,1948,2.998,1952,2.998,1953,2.733,1954,2.998,1958,3.459,1963,2.033,1968,4.023,2001,3.732,2149,2.033,2153,2.998,2154,5.942,2155,5.007,2156,6.987,2157,6.555,2158,5.007,2159,4.414,2160,5.007,2161,5.007,2162,4.414,2163,3.401,2164,5.007,2165,3.401,2166,3.401,2167,5.007,2168,3.401,2169,5.007,2170,4.414,2171,3.401,2172,4.414,2173,5.779,2174,3.401,2175,3.401,2176,3.401,2177,3.401,2178,2.998,2179,2.998,2180,2.998,2181,3.401,2182,3.401,2183,3.401,2184,3.401,2185,3.401,2186,3.401,2187,3.401,2188,3.401,2189,5.007,2190,5.007,2191,5.007,2192,3.401,2193,3.401,2194,2.998,2195,2.998,2196,3.401,2197,3.401,2198,2.998,2199,2.998,2200,3.401,2201,4.882,2202,4.023,2203,3.732,2204,2.998,2205,2.733,2206,2.998,2207,2.998,2208,2.998,2209,2.998,2210,5.239,2211,2.998,2212,4.023,2213,3.401,2214,3.401,2215,3.401,2216,2.376,2217,3.401,2218,2.998,2219,3.401,2220,3.401,2221,3.401,2222,3.401,2223,3.401,2224,3.401,2225,3.401,2226,3.401,2227,2.534,2228,2.998,2229,3.401,2230,3.401,2231,2.998,2232,4.775]],["title/modules/LoginPageModule.html",[216,1.135,2233,3.255]],["body/modules/LoginPageModule.html",[3,0.147,4,0.147,9,0.132,36,0.01,76,0.63,77,0.588,80,0.147,81,0.402,154,1.712,178,1.409,180,2.862,214,0.008,215,0.008,216,1.671,218,2.148,219,2.947,220,4.017,221,3.153,222,2.854,223,2.265,228,4.167,229,3.759,230,3.153,231,2.392,233,2.774,234,2.774,235,3.392,236,3.046,237,3.392,238,2.53,239,3.268,240,2.148,241,3.392,1919,4.242,2233,6.75,2234,5.666,2235,5.666,2236,5.666,2237,6.143,2238,6.427,2239,5.666]],["title/modules/LoginPageRoutingModule.html",[216,1.135,2237,3.052]],["body/modules/LoginPageRoutingModule.html",[0,1.055,3,0.156,4,0.156,9,0.14,36,0.01,76,0.595,77,0.624,80,0.156,81,0.427,180,2.585,214,0.008,215,0.008,218,2.281,223,2.406,233,2.472,234,2.875,245,3.603,246,3.614,247,4.037,248,2.406,249,1.571,250,2.008,251,3.747,2237,5.548,2239,6.018,2240,6.827]],["title/injectables/MappingService.html",[252,0.89,475,2.883]],["body/injectables/MappingService.html",[3,0.109,4,0.109,9,0.098,11,0.624,14,1.444,24,0.366,27,1.145,33,1.505,35,1.428,36,0.01,37,0.749,38,0.584,39,0.877,42,1.613,57,1.662,60,1.472,63,1.242,70,2.282,76,0.506,77,0.437,80,0.109,81,0.299,82,1.291,208,1.98,214,0.007,215,0.007,252,1.296,254,1.938,256,2.018,257,4.873,258,2.07,281,3.49,311,1.685,312,1.641,344,1.834,475,4.197,606,2.504,609,3.12,744,6.333,745,2.433,746,4.443,747,4.443,748,2.824,749,4.443,756,1.918,799,2.735,931,2.456,1049,4.663,1050,4.302,1051,3.341,1170,1.117,1430,4.552,1431,4.552,1501,6.119,1505,5.11,1507,5.11,1508,5.11,1509,5.11,1511,6.119,1513,5.11,1516,2.335,1518,5.11,1522,5.11,1524,5.11,1526,2.737,1527,5.11,1533,5.11,1686,3.802,2241,4.216,2242,6.359,2243,4.782,2244,4.782,2245,4.782,2246,4.782,2247,4.782,2248,4.782]],["title/interfaces/Media.html",[1170,0.641,1571,1.351]],["body/interfaces/Media.html",[3,0.142,4,0.142,9,0.128,11,0.476,24,0.476,25,1.044,36,0.01,38,0.633,63,1.263,70,2.258,80,0.142,214,0.008,215,0.008,854,2.509,931,2.289,1170,1.101,1172,1.971,1174,2.023,1185,2.646,1226,2.249,1516,2.203,1550,6.736,1552,6.736,1554,6.736,1556,6.736,1571,2.821,1587,3.559,1588,3.334,1589,3.232,1590,3.334,2249,5.476,2250,8.722,2251,7.847]],["title/interfaces/MediaFormat.html",[1170,0.641,1591,2.003]],["body/interfaces/MediaFormat.html",[3,0.077,4,0.077,5,1.505,9,0.122,11,0.26,13,1.134,14,1.408,17,1.544,24,0.26,25,0.695,36,0.01,37,0.78,38,0.649,39,0.835,57,1.575,63,1.259,70,2.006,80,0.195,109,2.223,113,2.337,120,1.104,178,1.096,183,1.123,186,0.691,202,0.726,214,0.005,215,0.005,250,2.147,265,2.087,271,3.348,276,2.198,283,2.875,344,0.691,492,3.249,543,1.023,546,1.134,586,1.715,587,3.004,628,1.104,639,1.076,701,2.337,745,2.505,748,1.67,756,1.023,769,1.968,806,2.405,832,1.416,833,1.968,834,1.46,835,2.087,836,1.506,837,1.46,838,1.506,839,1.335,840,2.477,846,1.555,854,2.523,856,2.436,872,2.597,880,2.733,882,1.608,884,1.608,885,1.506,913,2.159,931,1.993,944,3.143,953,2.369,1030,2.653,1031,1.555,1104,2.219,1170,1.302,1172,1.076,1174,2.714,1185,2.307,1225,2.219,1226,2.37,1290,1.335,1292,3.44,1294,2.635,1516,2.417,1526,1.46,1558,1.968,1571,2.833,1584,3.2,1585,1.555,1586,2.369,1587,2.369,1588,2.219,1589,2.151,1590,2.219,1591,3.348,1592,2.219,1593,1.664,1594,2.911,1595,2.911,1596,1.46,1597,1.608,1598,2.721,1599,3.002,1600,2.452,1601,2.452,1602,1.555,1603,1.555,1604,1.555,1605,2.721,1606,1.555,1607,2.219,1608,1.664,1609,1.664,1610,2.452,1611,3.801,1612,3.424,1613,1.664,1614,1.664,1615,3.424,1616,3.2,1617,1.416,1618,2.292,1619,1.664,1620,1.664,1621,1.664,1622,1.664,1623,1.664]],["title/injectables/MediaService.html",[252,0.89,470,2.305]],["body/injectables/MediaService.html",[3,0.144,4,0.144,9,0.177,11,0.579,24,0.482,27,1.363,33,1.162,35,1.133,36,0.01,37,0.595,38,0.464,39,0.696,42,1.919,60,1.232,76,0.536,77,0.575,80,0.144,81,0.394,82,1.024,214,0.008,215,0.008,252,1.542,254,2.55,256,2.401,272,4.153,282,2.804,306,1.85,311,2.217,312,2.159,344,1.654,470,3.993,606,2.979,744,6.113,745,2.895,746,5.287,747,5.287,748,2.529,749,5.287,972,4.193,1289,3.993,1290,2.979,1296,4.994,1571,2.793,1574,6.08,1686,4.523,2252,5.547,2253,6.292]],["title/pipes/NamePipe.html",[734,2.738,2254,3.052]],["body/pipes/NamePipe.html",[3,0.122,4,0.122,9,0.11,11,0.523,15,1.934,17,1.26,27,0.962,33,0.987,35,0.962,36,0.01,37,0.818,38,0.394,39,0.591,60,1.113,63,1.142,76,0.379,77,0.488,80,0.122,81,0.334,82,1.113,214,0.007,215,0.007,320,1.96,332,3.475,333,4.176,338,4.508,340,2.932,368,4.351,372,5.245,384,4.512,399,6.026,400,7.075,411,4.546,538,4.709,573,4.512,734,4.981,938,6.026,1079,3.733,1516,2.058,1643,4.751,2216,5.553,2227,3.981,2254,4.777,2255,4.709,2256,4.709,2257,7.947,2258,7.272,2259,7.947,2260,8.214,2261,8.214,2262,7.947,2263,8.402,2264,8.649,2265,7.947,2266,6.836,2267,8.402,2268,5.342,2269,6.836,2270,6.836,2271,6.836,2272,6.836,2273,7.538,2274,6.836,2275,6.836,2276,6.836,2277,5.342,2278,5.342,2279,6.836,2280,5.342,2281,5.342,2282,5.342,2283,5.342,2284,5.342,2285,5.342,2286,5.342,2287,5.342,2288,5.342,2289,5.342,2290,5.342,2291,5.342]],["title/classes/NumericValidator.html",[81,0.273,2292,3.51]],["body/classes/NumericValidator.html",[3,0.125,4,0.125,9,0.112,11,0.532,24,0.419,27,1.25,33,1.011,35,0.986,36,0.01,37,0.721,38,0.403,39,0.843,46,2.446,60,1.305,63,1.06,72,1.322,73,2.202,76,0.388,80,0.125,81,0.477,82,0.891,85,2.765,131,2.094,214,0.007,215,0.007,238,2.155,249,1.598,268,1.943,320,2.084,344,1.115,407,2.094,650,5.187,670,4.079,711,2.218,749,4.85,817,3.612,1104,3.082,1224,5.327,1277,4.351,1359,4.85,1419,5.682,1474,4.079,1516,1.895,1569,3.131,1794,3.529,2120,5.032,2292,5.578,2293,4.824,2294,7.624,2295,6.901,2296,5.578,2297,6.721,2298,6.942,2299,6.942,2300,5.473,2301,7.571,2302,7.068,2303,7.453,2304,6.119,2305,6.942,2306,6.721,2307,6.942,2308,6.942,2309,6.721,2310,7.624,2311,7.624,2312,6.942,2313,6.126,2314,6.942,2315,6.443,2316,6.119,2317,6.126,2318,6.119,2319,4.824,2320,4.824,2321,5.473,2322,4.824,2323,5.473,2324,5.473,2325,5.473,2326,6.119,2327,5.473,2328,5.473,2329,5.473,2330,5.473,2331,5.473,2332,4.397,2333,5.473,2334,5.473,2335,5.473]],["title/guards/OwnerGuard.html",[526,3.255,704,3.052]],["body/guards/OwnerGuard.html",[0,0.849,3,0.125,4,0.125,9,0.113,11,0.585,14,1.274,15,1.989,24,0.421,27,1.254,30,1.454,33,1.285,35,1.254,36,0.01,37,0.658,38,0.513,39,0.77,42,1.766,60,1.133,76,0.609,77,0.502,80,0.125,81,0.344,82,1.307,146,4.238,165,2.266,214,0.007,215,0.007,240,1.836,246,2.995,248,1.936,249,1.265,252,1.418,268,1.948,269,1.996,282,2.697,306,1.616,311,1.936,312,1.885,313,1.996,320,1.986,345,3.883,347,6.007,355,3.352,356,3.82,382,2.821,383,2.294,407,2.103,436,3.538,489,4.407,526,5.984,531,6.657,585,3.82,605,2.906,668,2.365,704,4.863,705,4.415,707,6.135,709,3.84,711,3.254,712,6.99,715,4.844,716,7.079,717,7.079,719,5.592,720,4.363,721,5.611,722,4.863,725,3.285,726,4.844,831,2.794,1052,4.415,1053,4.095,1056,4.161,1061,4.774,1063,4.363,1589,2.365,1824,4.095,1846,4.095,2336,4.844,2337,8.03,2338,5.495,2339,5.592,2340,5.495,2341,4.844,2342,5.495,2343,5.495,2344,5.495]],["title/interfaces/PaginatedData.html",[1050,2.305,1170,0.641]],["body/interfaces/PaginatedData.html",[3,0.145,4,0.145,5,1.607,9,0.13,11,0.485,24,0.485,25,1.056,36,0.01,38,0.6,57,1.661,80,0.173,105,4,214,0.008,215,0.008,628,2.65,639,2.011,806,2.568,913,2.35,1030,3.42,1049,4.656,1050,4.01,1170,1.238,1172,2.011,1174,2.474,1226,2.751,1516,2.439,1558,3.559,1602,2.905,1603,2.905,1604,3.732,2345,5.091,2346,5.586,2347,5.586]],["title/interfaces/Pagination.html",[1170,0.641,1558,1.72]],["body/interfaces/Pagination.html",[3,0.141,4,0.141,5,1.567,9,0.127,11,0.473,24,0.473,25,1.04,36,0.01,38,0.632,57,1.545,80,0.171,105,4.062,214,0.008,215,0.008,628,2.895,639,2.374,806,2.503,913,1.91,1030,3.033,1049,4.28,1050,3.259,1170,1.227,1172,1.96,1174,2.436,1226,2.709,1516,2.523,1558,3.429,1602,3.836,1603,3.836,1604,4.077,2345,4.963,2346,6.596,2347,6.596]],["title/classes/PasswordValidation.html",[81,0.273,2348,3.51]],["body/classes/PasswordValidation.html",[3,0.108,4,0.108,9,0.098,11,0.545,24,0.364,27,1.368,33,1.169,35,1.14,36,0.01,37,0.797,38,0.466,39,0.84,60,1.373,63,1.187,72,1.147,73,2.014,76,0.337,80,0.108,81,0.446,82,1.159,85,2.775,131,1.817,214,0.007,215,0.008,238,1.869,249,1.457,258,1.546,268,2.125,276,1.686,320,2.115,344,1.29,407,2.724,488,3.784,650,5.408,654,2.839,670,3.539,856,3.384,967,5.58,975,4.423,1048,3.34,1080,5.086,1183,4.423,1184,4.177,1277,4.76,1358,5.527,1417,4.717,1569,2.716,1794,3.218,1995,5.086,2120,3.134,2125,4.423,2295,6.537,2297,7.437,2301,7.768,2302,7.172,2303,5.58,2306,4.186,2313,5.721,2315,7.039,2316,6.276,2317,5.721,2318,6.276,2319,4.186,2320,4.186,2322,5.58,2332,3.815,2348,5.086,2349,4.186,2350,6.329,2351,6.329,2352,7.119,2353,7.593,2354,7.119,2355,6.329,2356,7.593,2357,4.748,2358,7.593,2359,6.329,2360,6.329,2361,4.748,2362,6.329,2363,6.329,2364,6.329,2365,6.329,2366,7.172,2367,6.329,2368,6.329,2369,7.593,2370,6.329,2371,6.329,2372,4.748,2373,4.748,2374,4.748,2375,4.748,2376,6.694,2377,4.748,2378,6.329,2379,4.748,2380,4.748,2381,4.748,2382,5.58,2383,4.748,2384,4.748,2385,6.329,2386,4.748]],["title/components/PictureSelectableComponent.html",[0,0.675,182,1.422]],["body/components/PictureSelectableComponent.html",[0,1.291,1,0.972,2,1.6,3,0.068,4,0.068,5,0.757,6,1.111,7,1.111,8,1.111,9,0.126,11,0.585,12,2.598,14,0.474,15,1.644,16,2.228,17,0.704,18,3.179,19,2.778,20,1.69,22,1.69,24,0.229,25,0.631,27,0.818,28,2.49,30,1.148,33,1.553,35,1.343,36,0.01,37,0.749,38,0.584,39,0.862,47,2.49,48,2.49,60,1.268,61,2.563,63,0.968,67,1.938,70,1.977,72,1.682,73,1.988,76,0.435,77,0.273,80,0.104,81,0.187,82,1.244,83,1.708,87,3.123,100,2.153,101,2.606,102,1.518,103,1.576,104,2.017,105,1.415,106,1.326,109,1.896,116,1.949,117,2.49,122,1.246,127,1.788,128,2.083,130,3.514,131,2.529,154,0.795,155,1.69,156,2.224,157,0.998,158,1.111,160,1.111,161,0.998,162,1.111,163,0.998,164,1.111,165,0.972,166,1.271,167,1.111,168,1.024,169,1.479,170,2.046,171,0.998,172,2.286,173,0.972,174,1.111,175,0.947,176,1.111,177,0.998,178,0.655,179,1.69,180,0.972,181,1.111,182,2.428,183,1.992,184,1.111,185,0.998,186,0.926,187,0.998,188,0.972,189,1.111,190,0.998,191,1.479,192,1.111,193,0.998,194,2.304,195,0.972,196,1.111,197,0.972,198,1.111,199,0.972,200,1.111,201,1.024,202,0.972,203,0.998,204,0.972,205,1.111,206,0.998,207,0.972,208,0.776,209,0.815,210,1.052,211,0.972,212,1.081,213,1.111,214,0.005,215,0.005,222,2.017,238,1.175,240,0.998,249,1.265,258,2,272,2.493,276,0.795,282,1.479,306,0.878,313,1.577,333,1.518,344,1.12,349,5.594,382,2.933,383,2.565,407,1.738,487,3.573,512,2.086,617,4.152,619,5.807,628,0.972,635,1.896,647,3.318,648,4.004,649,4.578,650,1.871,663,2.795,676,3.174,695,2.632,701,1.37,711,2.49,712,4.936,1056,2.715,1061,3.821,1081,3.951,1170,1.094,1176,1.97,1177,1.97,1655,3.385,1663,1.518,1666,1.871,1668,2.225,1674,1.708,1678,2.225,1679,2.225,1758,4.004,1794,3.36,1963,1.785,1966,2.632,1979,2.086,2001,6.224,2071,4.004,2118,4.004,2123,5.416,2149,1.785,2201,2.086,2228,2.632,2339,3.65,2387,6.802,2388,6.308,2389,2.399,2390,4.542,2391,4.542,2392,7.164,2393,4.542,2394,5.497,2395,4.417,2396,4.542,2397,5.497,2398,4.542,2399,5.497,2400,5.497,2401,6.961,2402,5.497,2403,6.609,2404,4.542,2405,6.143,2406,4.542,2407,4.542,2408,4.004,2409,4.004,2410,4.542,2411,4.004,2412,2.985,2413,4.542,2414,5.497,2415,4.542,2416,2.985,2417,2.985,2418,2.985,2419,4.542,2420,2.985,2421,4.542,2422,6.143,2423,5.497,2424,2.985,2425,4.542,2426,2.985,2427,4.004,2428,2.985,2429,7.458,2430,5.827,2431,4.004,2432,2.985,2433,5.416,2434,2.985,2435,2.985,2436,6.961,2437,4.542,2438,2.985,2439,5.416,2440,6.143,2441,2.985,2442,2.985,2443,2.985,2444,4.542,2445,2.985,2446,2.985,2447,4.542,2448,4.542,2449,4.542,2450,4.542,2451,4.542,2452,4.542,2453,3.65,2454,4.417,2455,2.632,2456,2.632,2457,2.632,2458,2.399,2459,2.399,2460,2.985,2461,4.542,2462,2.985,2463,2.985,2464,2.985,2465,2.985,2466,2.985,2467,2.985,2468,2.985,2469,2.985,2470,2.985,2471,2.985,2472,2.985,2473,2.985,2474,2.985,2475,2.985,2476,2.985,2477,2.985,2478,2.985,2479,2.985,2480,2.985,2481,2.985,2482,2.985,2483,2.985,2484,4.542,2485,2.985,2486,2.985,2487,2.399,2488,4.004,2489,2.985,2490,2.985,2491,2.985,2492,2.632,2493,2.985,2494,2.985]],["title/interfaces/Player.html",[186,0.89,1170,0.641]],["body/interfaces/Player.html",[3,0.134,4,0.134,9,0.121,11,0.449,24,0.449,25,1.008,36,0.01,37,0.833,38,0.606,39,0.975,63,1.196,76,0.514,80,0.165,107,3.027,186,1.821,191,2.801,214,0.008,215,0.008,236,2.781,276,1.931,854,2.63,913,2.243,931,1.602,1155,3.432,1170,1.239,1172,1.862,1174,2.75,1185,2.773,1465,5.066,1516,2.244,1571,2.697,1598,3.324,1643,4.704,1889,4.511,2495,4.714,2496,4.921,2497,6.392,2498,5.826,2499,5.172,2500,4.714,2501,4.714,2502,4.714,2503,4.099,2504,4.099,2505,4.372,2506,4.714,2507,4.714,2508,4.714,2509,5.172]],["title/components/PlayerDetailComponent.html",[0,0.675,185,1.46]],["body/components/PlayerDetailComponent.html",[0,0.846,1,0.662,2,1.18,3,0.046,4,0.046,5,1.083,6,0.757,7,0.757,8,0.757,9,0.088,11,0.498,13,1.119,14,0.323,15,1.212,16,1.731,17,0.48,18,3.038,19,2.639,20,1.246,22,1.246,24,0.256,25,0.688,27,0.603,28,2.006,30,1.034,33,1.502,35,1.172,36,0.01,37,0.82,38,0.562,39,0.72,42,0.516,46,1.18,47,1.357,48,1.357,52,1.441,57,0.618,60,1.257,61,2.085,63,1.029,67,1.805,70,0.516,72,1.505,73,1.542,76,0.388,77,0.186,80,0.046,81,0.127,82,1.158,85,1.968,87,4.228,99,3.417,100,3.291,101,3.736,102,2.994,103,2.889,104,3.227,105,2.792,106,3.227,107,2.716,109,2.123,111,3.267,112,2.733,113,1.878,115,3.354,116,2.45,117,3.481,118,2.002,119,2.171,120,1.918,122,3.183,123,3.434,124,2.431,125,2.691,126,2.517,127,1.949,130,4.234,131,1.894,132,2.677,133,3.906,134,3.048,135,2.002,136,2.099,137,3.273,138,2.96,139,2.002,140,2.002,141,1.342,142,3.182,143,1.216,144,1.163,145,3.692,146,1.073,147,1.275,148,2.553,149,2.517,150,2.517,151,2.553,152,2.553,153,1.342,154,0.542,155,1.246,156,1.212,157,0.679,158,0.757,160,0.757,161,0.679,162,0.757,163,0.679,164,0.757,165,0.662,166,2.034,167,0.757,168,0.698,169,1.09,170,1.589,171,0.679,172,1.842,173,0.662,174,0.757,175,0.645,176,0.757,177,0.679,178,0.446,179,1.246,180,0.662,181,0.757,182,0.662,183,0.752,184,0.757,185,1.968,186,1.746,187,0.679,188,0.662,189,0.757,190,0.679,191,2.541,192,0.757,193,0.679,194,0.613,195,0.662,196,0.757,197,0.662,198,0.757,199,0.662,200,0.757,201,0.698,202,0.914,203,0.679,204,0.662,205,0.757,206,0.679,207,0.662,208,0.529,209,0.555,210,0.716,211,0.662,212,0.736,213,0.757,214,0.003,215,0.003,231,0.757,238,0.8,240,0.679,249,1.14,258,1.39,272,2.717,278,1.703,295,1.634,313,1.225,320,1.531,338,1.073,348,2.429,382,2.524,383,2.815,407,2.49,446,0.997,477,2.899,493,0.824,543,0.613,580,2.691,584,2.677,596,1.838,609,2.429,613,5.174,617,2.889,619,3.69,620,5.192,635,1.398,636,1.487,642,3.887,650,4.079,654,4.345,663,3.428,676,3.459,701,2.232,711,2.637,748,1.119,756,1.288,784,1.643,913,1.036,931,2.234,975,2.34,1048,1.767,1056,3.521,1061,3.232,1070,5.192,1074,1.275,1077,2.34,1081,3.521,1083,1.216,1155,2.459,1177,2.21,1226,1.982,1228,2.496,1289,1.767,1339,1.916,1473,2.496,1475,2.34,1516,1.608,1535,1.275,1628,3.103,1646,1.073,1663,3.166,1666,1.275,1670,2.429,1671,1.643,1673,1.792,1674,1.163,1675,1.342,1683,2.002,1762,1.838,1765,1.342,1794,4.008,1795,3.103,1796,2.496,1818,1.515,1889,3.004,1905,1.515,1906,1.421,1907,1.421,1908,1.342,1909,1.216,1910,2.099,1911,2.442,1938,5.719,1939,5.719,1942,1.634,1958,3.434,1963,2.96,1979,4.351,2019,4.08,2079,2.952,2105,3.978,2106,2.496,2108,5.174,2110,2.952,2111,2.952,2120,2.818,2122,2.496,2125,1.421,2129,1.634,2130,1.634,2131,1.515,2144,2.496,2149,4.425,2178,2.952,2201,2.984,2202,2.691,2203,3.182,2205,1.634,2212,1.634,2309,2.952,2315,3.431,2317,1.634,2339,2.691,2366,2.952,2487,2.691,2488,2.952,2496,4.071,2500,2.691,2501,2.691,2502,2.691,2503,2.34,2504,2.34,2505,2.496,2506,2.691,2507,2.691,2508,2.691,2510,1.792,2511,3.349,2512,4.951,2513,4.27,2514,3.349,2515,3.764,2516,4.27,2517,4.27,2518,3.349,2519,3.349,2520,3.349,2521,4.951,2522,4.951,2523,3.349,2524,3.349,2525,3.349,2526,3.764,2527,2.033,2528,2.033,2529,4.27,2530,3.349,2531,3.349,2532,4.951,2533,2.033,2534,4.951,2535,4.27,2536,2.952,2537,4.364,2538,2.952,2539,5.004,2540,3.349,2541,2.033,2542,3.349,2543,2.033,2544,4.826,2545,2.033,2546,2.033,2547,4.27,2548,3.349,2549,3.349,2550,2.033,2551,3.349,2552,2.033,2553,2.033,2554,2.952,2555,3.349,2556,2.033,2557,4.951,2558,3.349,2559,3.349,2560,2.033,2561,2.691,2562,2.691,2563,3.182,2564,2.691,2565,2.496,2566,2.691,2567,2.033,2568,3.349,2569,2.033,2570,2.033,2571,2.033,2572,4.27,2573,2.033,2574,2.952,2575,2.033,2576,2.033,2577,3.349,2578,2.033,2579,2.033,2580,2.952,2581,1.792,2582,2.033,2583,4.364,2584,3.349,2585,2.033,2586,2.033,2587,2.033,2588,2.033,2589,2.033,2590,4.27,2591,2.033,2592,3.349,2593,3.349,2594,2.033,2595,2.033,2596,2.033,2597,3.349,2598,2.033,2599,2.033,2600,3.349,2601,2.033,2602,1.792,2603,2.033,2604,3.349,2605,3.349,2606,3.349,2607,2.033,2608,2.033,2609,2.033,2610,2.033,2611,2.033,2612,2.033,2613,2.033,2614,2.033,2615,2.033,2616,2.033,2617,2.033,2618,2.033,2619,2.033,2620,2.033,2621,2.033,2622,2.033,2623,2.033,2624,2.033,2625,2.033,2626,2.033,2627,3.764,2628,2.033,2629,2.033,2630,2.033,2631,2.033,2632,2.033,2633,3.349,2634,3.349,2635,2.952,2636,1.792,2637,2.033,2638,1.634,2639,3.349,2640,1.792,2641,1.792,2642,2.033,2643,2.033,2644,2.033,2645,1.792,2646,2.033,2647,2.033,2648,1.634,2649,1.634,2650,2.952,2651,3.349,2652,3.764,2653,3.349,2654,3.349,2655,1.792,2656,1.792]],["title/components/PlayerInfoComponent.html",[0,0.675,187,1.46]],["body/components/PlayerInfoComponent.html",[0,0.992,1,1.269,2,1.947,3,0.147,4,0.089,5,0.989,6,1.451,7,1.451,8,1.451,9,0.08,11,0.423,13,1.847,14,0.618,15,2.001,16,2.602,17,0.919,18,3.262,19,2.854,20,2.056,22,2.056,24,0.298,25,0.768,27,0.995,28,2.831,30,0.814,33,1.512,35,1.156,36,0.01,37,0.744,38,0.58,39,0.71,46,1.947,47,2.24,48,2.24,52,2.378,53,3.437,57,1.021,60,1.2,61,1.986,63,0.768,67,1.402,70,1.871,72,1.335,73,1.368,75,2.724,76,0.455,77,0.356,80,0.089,81,0.244,82,0.9,83,2.23,85,2.334,99,2.14,100,3.043,101,1.848,104,2.454,106,2.851,107,3.359,109,1.842,112,2.602,113,1.176,115,2.831,116,2.43,117,1.58,119,1.982,120,1.799,122,2.68,123,3.388,126,1.982,127,1.535,128,3.611,130,2.23,131,1.492,132,4.024,134,1.58,154,1.038,155,2.056,156,2.001,157,1.303,158,1.451,160,1.451,161,1.303,162,1.451,163,1.303,164,1.451,165,1.269,166,1.091,167,1.451,168,1.338,169,1.799,170,2.389,171,1.303,172,2.599,173,1.269,174,1.451,175,1.237,176,1.451,177,1.303,178,0.855,179,2.056,180,1.269,181,1.451,182,1.269,183,0.876,184,1.451,185,1.303,186,1.829,187,2.334,188,1.269,189,1.451,190,1.303,191,2.82,192,1.451,193,1.303,194,1.176,195,1.269,196,1.451,197,1.269,198,1.451,199,1.269,200,1.451,201,1.338,202,1.183,203,1.303,204,1.269,205,1.451,206,1.303,207,1.269,208,1.013,209,1.064,210,1.374,211,1.269,212,1.411,213,1.451,214,0.006,215,0.006,253,3.426,256,2.216,258,2.564,276,1.861,286,3.862,320,1.437,382,2.24,407,2.115,489,3.523,491,2.573,596,3.033,599,3.464,615,4.505,617,4.158,618,4.61,635,2.307,636,2.454,663,3.264,664,3.672,691,2.724,701,2.107,719,4.441,720,3.464,810,4.441,931,2.013,1077,2.724,1081,2.331,1083,2.331,1516,1.753,1535,2.444,1597,1.848,1635,2.724,1636,4.785,1637,4.119,1638,5.613,1639,4.441,1640,4.237,1641,4.237,1646,3.891,1647,4.61,1648,3.437,1649,4.61,1650,4.441,1653,3.133,1654,3.133,1655,2.905,1666,3.464,1670,2.711,1671,2.711,1674,2.23,1675,2.573,1683,2.331,1777,3.862,1938,5.799,1958,3.686,2149,4.408,2216,2.724,2496,2.23,2544,4.872,2638,3.133,2641,4.872,2657,6.668,2658,5.526,2659,6.42,2660,3.437,2661,5.526,2662,3.898,2663,3.898,2664,3.898,2665,5.526,2666,3.898,2667,3.898,2668,3.898,2669,3.437,2670,3.898,2671,3.898,2672,5.526,2673,3.437,2674,3.133,2675,2.905,2676,2.905,2677,2.905]],["title/components/PlayersPage.html",[0,0.675,188,1.422]],["body/components/PlayersPage.html",[0,1.031,1,0.875,2,1.475,3,0.117,4,0.061,5,0.681,6,0.999,7,0.999,8,0.999,9,0.106,11,0.482,14,0.426,15,1.516,16,2.085,17,0.633,18,3.141,19,2.744,20,1.558,22,1.558,24,0.206,25,0.808,27,0.754,28,2.355,30,0.874,33,1.368,35,1.047,36,0.01,37,0.7,38,0.492,39,0.643,42,1.921,46,1.475,47,1.697,48,1.697,52,1.802,57,1.467,60,1.086,61,2.155,67,1.062,70,1.305,72,1.243,73,0.665,76,0.547,77,0.246,80,0.061,81,0.168,82,1.232,85,1.719,107,2.63,108,2.368,109,1.201,112,1.697,115,3.414,116,2.55,117,3.479,122,1.121,124,1.193,127,1.057,131,1.602,134,2.704,135,1.606,136,1.684,137,3.076,138,3.076,139,2.503,140,2.503,141,1.773,143,1.606,144,1.536,145,3.948,146,1.417,147,1.684,148,1.606,149,2.129,150,2.129,151,1.606,152,1.606,153,1.773,154,0.716,155,1.558,156,1.516,157,0.898,158,0.999,160,0.999,161,0.898,162,0.999,163,0.898,164,0.999,165,0.875,166,2.272,167,0.999,168,0.922,169,1.363,170,1.915,171,0.898,172,2.162,173,0.875,174,0.999,175,0.852,176,0.999,177,0.898,178,0.589,179,1.558,180,0.875,181,0.999,182,0.875,183,0.603,184,0.999,185,1.719,186,1.826,187,0.898,188,2.172,189,0.999,190,0.898,191,2.465,192,0.999,193,0.898,194,0.81,195,0.875,196,0.999,197,0.875,198,0.999,199,0.875,200,0.999,201,0.922,202,0.896,203,0.898,204,0.875,205,0.999,206,0.898,207,0.875,208,0.698,209,0.733,210,0.946,211,0.875,212,0.972,213,0.999,214,0.004,215,0.004,240,0.898,248,0.946,249,1.915,256,2.117,258,0.875,268,1.172,269,1.201,313,1.807,320,0.698,344,1.597,348,2.054,356,3.824,382,1.697,383,2.148,407,1.028,436,3.921,446,1.318,470,3.066,487,1.232,496,3.076,543,2.363,602,2.368,604,2.925,612,1.984,617,2.054,628,1.892,635,1.748,636,1.859,639,1.329,688,3.677,701,1.263,711,2.704,725,1.606,740,4.236,817,4.404,860,1.366,868,1.684,940,4.757,942,2.368,943,4.694,946,2.624,954,2.158,959,3.12,960,2.002,972,2.439,1032,2.954,1038,1.536,1056,4.611,1061,3.189,1063,3.642,1074,1.684,1122,1.773,1155,1.748,1186,1.773,1289,2.209,1404,3.225,1449,3.323,1516,0.733,1535,1.684,1571,2.064,1586,1.273,1617,1.748,1640,2.763,1641,2.763,1646,3.996,1647,2.763,1649,2.763,1663,3.765,1670,2.054,1671,2.054,1762,2.298,1765,4.404,1769,3.364,1772,5.526,1773,3.642,1775,3.948,1777,2.925,1778,2.763,1779,3.12,1780,3.364,1788,3.364,1790,3.364,1791,5.791,1793,3.364,1794,2.954,1795,3.642,1796,3.12,1797,3.364,1798,3.364,1799,2.925,1800,3.364,1803,2.763,1804,1.877,1805,1.773,1806,5.29,1807,2.002,1812,1.877,1813,1.773,1814,2.002,1815,2.158,1816,2.925,1818,3.12,1820,5.174,1821,4.887,1822,4.887,1823,4.134,1824,5.643,1825,4.669,1826,5.174,1827,4.33,1828,5.361,1829,5.552,1830,3.691,1831,3.691,1832,3.691,1833,2.158,1835,2.002,1836,3.691,1838,4.536,1842,2.158,1843,2.158,1844,2.158,1845,2.158,1846,2.002,1847,2.158,1848,2.158,1849,5.061,1850,2.158,1851,4.669,1852,2.158,1853,2.158,1854,2.158,1855,2.158,1856,3.364,1877,2.158,1889,2.298,1900,3.364,1905,2.002,1906,2.925,1907,2.925,1908,2.763,1909,1.606,1910,1.684,1911,1.536,1926,3.948,1937,2.368,1938,1.877,1939,1.877,2496,2.395,2537,2.368,2580,2.368,2678,2.368,2679,5.145,2680,4.187,2681,5.81,2682,5.81,2683,4.187,2684,2.686,2685,2.686,2686,4.187,2687,2.686,2688,4.187,2689,2.686,2690,2.686,2691,2.686,2692,2.686,2693,2.686,2694,4.187,2695,2.686,2696,4.536,2697,2.686,2698,2.686,2699,2.686,2700,2.686,2701,2.686,2702,2.686,2703,2.686,2704,2.686,2705,2.686,2706,2.686,2707,1.877,2708,2.158,2709,2.368,2710,2.368,2711,2.686,2712,2.686,2713,4.187,2714,2.368]],["title/modules/PlayersPageModule.html",[216,1.135,2715,3.255]],["body/modules/PlayersPageModule.html",[3,0.147,4,0.147,9,0.132,36,0.01,76,0.63,77,0.588,80,0.147,81,0.402,154,1.712,188,2.862,214,0.008,215,0.008,216,1.671,218,2.148,219,2.947,220,4.017,221,3.153,222,2.854,223,2.265,228,4.167,229,3.759,230,3.153,231,2.392,233,2.774,234,2.774,235,3.392,236,3.046,237,3.392,238,2.53,239,3.268,240,2.148,241,3.392,543,1.938,1919,4.242,2715,6.75,2716,5.666,2717,5.666,2718,5.666,2719,6.143,2720,6.427,2721,5.666]],["title/modules/PlayersPageRoutingModule.html",[216,1.135,2719,3.052]],["body/modules/PlayersPageRoutingModule.html",[0,1.055,3,0.156,4,0.156,9,0.14,36,0.01,76,0.595,77,0.624,80,0.156,81,0.427,188,2.585,214,0.008,215,0.008,218,2.281,223,2.406,233,2.472,234,2.875,245,3.603,246,3.614,247,4.037,248,2.406,249,1.571,250,2.008,251,3.747,2719,5.548,2721,6.018,2722,6.827]],["title/injectables/PlayersService.html",[252,0.89,1926,2.738]],["body/injectables/PlayersService.html",[3,0.083,4,0.083,9,0.108,11,0.591,14,0.577,24,0.278,25,0.858,27,1.112,30,1.098,33,1.545,35,1.39,36,0.01,37,0.773,38,0.602,39,0.853,42,1.898,60,1.395,61,1.124,63,0.858,67,2.042,72,1.492,73,1.529,76,0.547,77,0.332,80,0.12,81,0.329,82,1.256,85,2.261,166,1.728,186,1.877,214,0.005,215,0.005,249,0.837,252,1.071,254,1.473,256,1.668,258,2.203,268,1.471,269,1.508,276,1.802,278,3.439,282,2.927,301,2.334,306,1.069,311,1.281,312,1.247,313,2.266,320,2.195,344,1.796,433,1.918,477,2.824,479,4.241,481,2.279,487,2.41,493,3.312,499,2.279,501,2.399,543,2.614,605,2.195,606,2.069,609,3.67,647,3.537,668,2.262,711,2.13,756,1.585,763,3.007,765,3.207,784,2.579,799,2.079,808,1.995,831,2.672,842,2.709,852,3.469,860,1.848,865,2.54,867,2.399,931,0.992,1032,2.672,1038,2.079,1043,4.499,1044,2.885,1090,2.709,1092,4.075,1093,3.007,1112,2.079,1155,3.456,1171,4.279,1196,3.673,1201,5.213,1203,2.399,1238,4.314,1239,3.673,1339,3.007,1348,3.87,1415,2.885,1416,2.54,1430,3.142,1431,3.142,1592,1.614,1617,1.518,1686,3.142,1689,5.042,1697,3.469,1698,3.917,1754,3.917,1822,2.399,1889,3.389,1926,4.241,2082,2.921,2088,2.921,2090,2.921,2496,3.532,2707,4.314,2723,2.921,2724,5.256,2725,5.964,2726,5.256,2727,5.256,2728,5.256,2729,5.256,2730,5.256,2731,5.436,2732,5.256,2733,4.634,2734,3.635,2735,3.635,2736,4.634,2737,3.635,2738,3.635,2739,4.634,2740,3.635,2741,4.634,2742,3.635,2743,4.634,2744,3.635,2745,4.634,2746,3.635,2747,3.635,2748,3.635,2749,4.224,2750,2.921,2751,2.921,2752,3.204,2753,3.204,2754,3.204,2755,2.709,2756,3.204,2757,3.204,2758,3.204,2759,3.204,2760,3.204,2761,3.204,2762,3.204,2763,3.204,2764,4.961,2765,5.443,2766,4.961,2767,3.204,2768,3.204,2769,3.204,2770,3.204,2771,3.204,2772,3.204,2773,3.204,2774,3.204,2775,3.204,2776,3.204,2777,3.204,2778,3.204,2779,4.634,2780,4.634,2781,3.204,2782,3.204,2783,3.204,2784,2.921,2785,3.204]],["title/interfaces/Position.html",[191,1.422,1170,0.641]],["body/interfaces/Position.html",[3,0.134,4,0.134,9,0.121,11,0.449,24,0.449,25,1.008,36,0.01,37,0.833,38,0.534,39,0.802,63,1.008,76,0.514,80,0.165,107,2.449,186,1.721,191,2.891,214,0.008,215,0.008,236,2.781,276,1.563,854,2.63,913,1.815,931,2.244,1155,2.449,1170,1.239,1172,1.862,1174,2.676,1185,2.773,1465,4.099,1516,2.244,1571,2.543,1598,2.69,1643,3.507,1889,3.22,2495,4.714,2496,4.147,2497,5.172,2498,4.714,2499,5.172,2500,6.323,2501,6.323,2502,6.323,2503,5.499,2504,5.499,2505,5.865,2506,6.323,2507,6.323,2508,6.323,2509,6.937]],["title/directives/PositionImageDirective.html",[157,1.46,211,1.422]],["body/directives/PositionImageDirective.html",[3,0.1,4,0.1,9,0.09,11,0.564,15,2.176,16,2.775,17,1.037,18,2.176,24,0.337,25,1.023,27,1.083,28,2.983,30,1.537,33,1.469,35,1.233,36,0.01,37,0.647,38,0.542,39,0.758,46,2.118,47,2.436,48,2.436,52,2.587,57,1.11,59,3.884,60,1.115,61,2.276,63,0.952,70,1.867,72,1.452,73,1.969,76,0.426,77,0.402,80,0.1,81,0.275,82,1.254,87,3.917,107,3.51,109,1.262,110,2.903,113,1.327,124,1.953,133,3.758,134,3.408,156,2.88,157,2.77,186,0.897,191,2.818,210,1.55,211,2.396,212,2.176,214,0.006,215,0.006,253,3.902,257,3.593,313,2.412,368,3.246,489,4.039,495,2.63,496,5.084,518,3.438,596,3.299,635,2.51,636,2.669,642,5.086,663,3.917,701,1.327,975,3.074,1048,3.172,1093,3.438,1176,3.967,1219,4.48,1404,5.382,1516,2.009,1669,2.903,1670,2.158,1671,2.158,2106,4.48,2232,4.83,2503,3.074,2504,3.074,2561,3.535,2562,3.535,2563,3.278,2564,3.535,2565,3.278,2566,3.535,2669,3.878,2786,7.178,2787,3.878,2788,6.011,2789,8.143,2790,4.399,2791,7.36,2792,7.36,2793,7.955,2794,4.399,2795,6.011,2796,6.011,2797,6.011,2798,6.011,2799,6.011,2800,6.848,2801,6.011,2802,4.399,2803,6.011,2804,6.011,2805,4.399,2806,4.399,2807,4.399,2808,6.848,2809,4.399,2810,6.011,2811,8.654,2812,8.586,2813,7.955,2814,6.011,2815,4.399,2816,4.399,2817,4.399,2818,4.399,2819,4.399,2820,4.399,2821,4.399,2822,4.399,2823,4.399,2824,4.399,2825,4.399,2826,4.399,2827,4.399,2828,4.399,2829,4.399,2830,4.399,2831,4.83,2832,4.399,2833,4.399,2834,4.399,2835,4.399,2836,4.399,2837,4.399,2838,4.399,2839,4.399,2840,4.399,2841,4.399,2842,4.399,2843,4.399,2844,4.399,2845,4.399,2846,4.399,2847,4.399,2848,4.399,2849,4.399,2850,4.399,2851,4.399,2852,4.399,2853,4.399,2854,4.399,2855,4.399,2856,4.399,2857,4.399,2858,4.399,2859,4.399,2860,4.399,2861,4.399,2862,3.878,2863,6.011,2864,6.011,2865,6.011,2866,6.011,2867,6.011,2868,4.399,2869,7.955,2870,4.399,2871,6.011]],["title/components/PositionSelectorComponent.html",[0,0.675,190,1.46]],["body/components/PositionSelectorComponent.html",[0,1.075,1,1.095,2,1.75,3,0.077,4,0.077,5,0.854,6,1.252,7,1.252,8,1.252,9,0.069,11,0.499,14,0.534,15,1.798,17,0.793,18,3.239,19,2.814,20,1.849,22,1.849,24,0.452,25,0.69,27,0.895,30,1.233,33,1.522,35,1.175,36,0.01,37,0.836,38,0.6,39,0.855,60,1.062,61,2.483,67,1.498,72,1.576,73,1.914,76,0.419,77,0.308,80,0.077,81,0.211,82,1.062,87,4.081,99,1.847,100,1.595,101,2.799,102,1.711,106,2.622,109,0.965,112,2.013,113,1.015,115,3.254,116,2.547,117,3.373,118,2.97,119,1.711,124,2.206,125,3.992,126,1.711,127,1.325,128,1.543,131,2.495,133,3.579,134,2.643,137,3.898,138,2.97,139,2.011,140,2.011,143,3.53,149,2.526,150,2.526,154,0.896,155,1.849,156,1.798,157,1.124,158,1.252,160,1.252,161,1.124,162,1.252,163,1.124,164,1.252,165,1.095,166,0.942,167,1.252,168,1.154,169,1.617,170,2.198,171,1.124,172,2.427,173,1.095,174,1.252,175,1.068,176,1.252,177,1.124,178,0.738,179,1.849,180,1.095,181,1.252,182,1.095,183,0.756,184,1.252,185,1.124,186,1.012,187,1.124,188,1.095,189,1.252,190,2.433,191,2.806,192,1.252,193,1.124,194,1.015,195,1.095,196,1.252,197,1.095,198,1.252,199,1.095,200,1.252,201,1.154,202,1.063,203,1.124,204,1.095,205,1.252,206,1.124,207,1.095,208,0.875,209,0.919,210,1.186,211,1.095,212,1.218,213,1.252,214,0.005,215,0.005,222,2.206,238,1.325,249,0.774,407,1.901,487,3.85,512,3.471,596,2.726,599,3.114,613,5.983,615,3.378,617,2.437,618,3.279,619,3.702,650,4.088,663,3.315,664,2.842,676,4.557,768,4.86,913,2.017,931,2.353,975,3.471,994,3.702,1082,4.379,1083,2.97,1359,5.087,1415,2.726,1516,1.899,1535,2.109,1683,3.53,1697,3.279,1744,4.379,1799,5.757,1911,2.842,1958,1.776,2392,5.206,2408,4.379,2409,4.379,2411,4.379,2427,4.379,2430,6.418,2431,4.379,2433,5.749,2439,4.379,2453,4.745,2454,4.745,2458,3.992,2459,3.992,2496,4.953,2503,3.471,2504,3.471,2505,3.702,2515,5.206,2536,4.379,2538,4.379,2561,3.992,2562,3.992,2563,3.702,2564,3.992,2565,3.702,2566,3.992,2638,2.704,2831,5.85,2872,7.337,2873,6.688,2874,2.966,2875,5.905,2876,4.968,2877,5.905,2878,5.905,2879,5.905,2880,5.905,2881,4.968,2882,5.905,2883,5.905,2884,3.364,2885,3.364,2886,3.364,2887,4.968,2888,3.364,2889,4.968,2890,3.364,2891,3.364,2892,4.968,2893,3.364,2894,4.968,2895,4.968,2896,3.364,2897,3.364,2898,3.364,2899,4.968,2900,3.364,2901,4.968,2902,3.364,2903,4.968,2904,3.364,2905,3.364,2906,3.364,2907,3.364,2908,3.364,2909,3.364,2910,4.968,2911,3.364,2912,3.364,2913,3.364,2914,4.968,2915,3.364,2916,3.364,2917,3.364]],["title/interfaces/ProviderMetadata.html",[1170,0.641,1616,2.003]],["body/interfaces/ProviderMetadata.html",[3,0.081,4,0.081,5,1.546,9,0.106,11,0.272,13,1.187,14,1.414,17,1.579,24,0.272,25,0.719,36,0.01,37,0.742,38,0.629,39,0.821,57,1.587,63,1.253,70,1.804,80,0.196,109,1.92,113,2.019,120,1.157,178,1.134,183,1.162,186,0.724,202,0.76,214,0.005,215,0.005,250,1.521,265,2.159,271,3.403,276,2.219,283,2.922,344,1.054,492,3.279,543,1.072,546,1.187,586,1.774,587,3.061,628,1.157,639,1.128,701,2.019,745,2.561,748,1.187,756,1.072,769,2.036,806,2.47,832,1.484,833,2.036,834,1.529,835,2.159,836,1.578,837,1.529,838,1.578,839,1.399,840,2.545,846,1.629,854,2.56,856,2.491,872,2.647,880,2.795,882,1.684,884,1.684,885,1.578,913,2.2,931,2.092,944,3.061,953,2.451,1030,2.713,1031,2.371,1104,2.296,1170,1.308,1172,1.128,1174,2.738,1185,2.359,1225,2.296,1226,2.423,1290,1.399,1292,2.972,1294,2.296,1516,2.381,1526,1.529,1558,2.036,1571,2.823,1584,3.261,1585,1.629,1586,2.451,1587,2.451,1588,2.296,1589,2.225,1590,2.296,1591,3.261,1592,2.296,1593,1.743,1594,2.99,1595,2.99,1596,1.529,1597,1.684,1598,2.795,1599,3.069,1600,2.536,1601,2.536,1602,1.629,1603,1.629,1604,1.629,1605,2.795,1606,1.629,1607,2.296,1608,1.743,1609,1.743,1610,2.536,1611,3.284,1612,2.536,1613,1.743,1614,1.743,1615,2.536,1616,3.069,1617,1.484,1618,2.371,1619,1.743,1620,1.743,1621,1.743,1622,3.284,1623,3.284]],["title/components/RegisterFormComponent.html",[0,0.675,193,1.46]],["body/components/RegisterFormComponent.html",[0,1.148,1,1.295,2,1.975,3,0.128,4,0.091,5,1.009,6,1.48,7,1.48,8,1.48,9,0.082,11,0.497,12,3.206,14,0.631,15,2.029,16,2.63,17,0.938,18,3.268,19,2.858,20,2.085,22,2.085,24,0.304,25,0.979,27,1.009,28,2.856,30,1.472,33,1.423,35,1.009,36,0.01,37,0.729,38,0.519,39,0.62,42,1.422,46,1.975,47,2.271,48,2.271,52,2.412,57,1.035,60,1.147,61,1.733,67,1.009,72,0.961,73,1.607,76,0.46,77,0.364,80,0.091,81,0.249,82,0.912,85,2.647,104,2.488,106,3.129,112,1.612,113,1.199,115,2.271,116,2.236,117,1.612,120,2.113,122,2.34,123,2.098,124,2.488,128,2.976,154,1.059,155,2.085,156,2.029,157,1.329,158,1.48,160,1.48,161,1.329,162,1.48,163,1.329,164,1.48,165,1.295,166,1.568,167,1.48,168,1.364,169,1.825,170,2.415,171,1.329,172,2.622,173,1.295,174,1.48,175,1.262,176,1.48,177,1.329,178,0.872,179,2.085,180,1.295,181,1.48,182,1.295,183,0.893,184,1.48,185,1.329,186,1.142,187,1.329,188,1.295,189,1.48,190,1.329,191,1.295,192,1.48,193,2.576,194,2.586,195,1.295,196,1.48,197,1.295,198,1.48,199,1.295,200,1.48,201,1.364,202,1.199,203,1.329,204,1.295,205,1.48,206,1.329,207,1.295,208,1.034,209,1.086,210,1.401,211,1.295,212,1.44,213,1.48,214,0.006,215,0.006,238,1.565,249,1.29,256,1.778,272,3.076,276,1.493,313,1.141,320,1.034,348,4.379,382,1.612,407,1.522,586,1.364,599,3.513,615,3.712,617,2.749,618,3.699,635,2.34,636,2.488,654,3.35,664,3.206,740,2.274,800,2.274,856,2.947,872,1.48,1076,2.963,1079,2.778,1183,4.924,1358,3.916,1794,4.496,1795,3.513,1909,3.35,2101,3.195,2102,5.721,2103,4.94,2104,4.94,2105,6.364,2107,3.505,2108,6.128,2116,4.94,2120,5.338,2122,5.252,2125,2.778,2129,3.195,2130,3.195,2131,5.537,2132,4.94,2133,4.94,2136,3.505,2146,3.505,2152,3.505,2203,2.963,2295,4.503,2296,4.503,2304,5.721,2313,4.503,2382,6.549,2539,4.503,2918,6.982,2919,6.364,2920,5.604,2921,5.604,2922,3.976,2923,3.976,2924,3.976,2925,5.604,2926,5.604,2927,5.604,2928,3.976,2929,5.604,2930,5.604,2931,3.505,2932,3.976,2933,3.976,2934,3.976,2935,3.976,2936,3.976,2937,3.976,2938,5.604,2939,5.604,2940,5.604,2941,5.604,2942,5.604,2943,5.604,2944,5.604,2945,5.604,2946,5.604,2947,5.604,2948,5.604,2949,3.976]],["title/components/RegisterPage.html",[0,0.675,195,1.422]],["body/components/RegisterPage.html",[0,1.17,1,1.363,2,2.047,3,0.133,4,0.096,5,1.062,6,1.558,7,1.558,8,1.558,9,0.086,11,0.511,13,1.942,14,1.275,15,2.103,16,2.704,17,0.987,18,3.281,19,2.871,20,2.162,22,2.162,24,0.321,25,0.807,27,1.047,28,2.921,30,1.213,33,1.331,35,1.047,36,0.01,37,0.716,38,0.428,39,0.643,42,1.828,46,2.047,47,2.355,48,2.355,52,2.5,57,1.232,60,1.086,61,2.064,76,0.537,77,0.383,80,0.096,81,0.262,82,1.086,99,2.298,100,2.754,101,3.416,102,2.954,103,3.066,104,2.963,105,2.754,106,3.479,109,2.248,112,2.355,113,2.012,115,2.704,116,2.486,117,3.257,119,2.128,120,2.347,122,2.426,124,1.859,126,2.954,127,2.837,128,1.92,130,2.395,131,2.223,134,2.704,149,2.128,150,2.128,154,1.115,155,2.162,156,2.103,157,1.399,158,1.558,160,1.558,161,1.399,162,1.558,163,1.399,164,1.558,165,1.363,166,1.626,167,1.558,168,1.436,169,1.892,170,2.483,171,1.399,172,2.682,173,1.363,174,1.558,175,1.328,176,1.558,177,1.399,178,1.463,179,2.162,180,1.363,181,1.558,182,1.363,183,0.941,184,1.558,185,1.399,186,1.184,187,1.399,188,1.363,189,1.558,190,1.399,191,1.892,192,1.558,193,1.399,194,2.174,195,2.551,196,1.558,197,1.363,198,1.558,199,1.363,200,1.558,201,1.436,202,1.243,203,1.399,204,1.363,205,1.558,206,1.399,207,1.363,208,1.088,209,1.143,210,1.475,211,1.363,212,1.516,213,1.558,214,0.006,215,0.006,240,1.399,248,1.475,256,1.844,268,1.626,269,1.667,313,1.667,333,2.128,338,3.521,340,2.298,345,3.392,355,3.009,356,4.496,368,1.984,414,3.364,437,2.925,604,4.06,605,2.426,627,4.33,628,2.347,635,2.426,636,2.58,701,2.012,709,2.925,711,2.355,769,3.163,800,4.123,815,3.473,860,2.128,868,2.624,901,3.691,917,2.925,1061,2.298,1079,2.925,1081,4.308,1122,2.763,1222,3.12,1588,1.859,1590,1.859,1646,2.209,1663,2.128,1665,3.12,1669,2.763,1670,2.85,1671,2.054,1672,2.503,1674,2.395,1762,3.189,1775,3.642,1911,2.395,1958,2.209,1963,2.503,1968,3.364,2194,3.691,2195,3.691,2199,3.691,2201,5.29,2202,4.668,2203,4.33,2204,3.691,2205,3.364,2206,3.691,2207,3.691,2208,3.691,2209,3.691,2210,5.882,2211,3.691,2212,4.668,2227,3.12,2231,3.691,2232,5.361,2931,3.691,2950,3.691,2951,6.672,2952,5.81,2953,7.207,2954,5.81,2955,4.187,2956,4.187,2957,4.187,2958,5.81,2959,4.187,2960,5.81,2961,4.187,2962,4.187,2963,4.187,2964,4.187,2965,4.187,2966,4.187,2967,4.187,2968,4.187,2969,4.187,2970,4.187,2971,4.187]],["title/modules/RegisterPageModule.html",[216,1.135,2972,3.255]],["body/modules/RegisterPageModule.html",[3,0.147,4,0.147,9,0.132,36,0.01,76,0.63,77,0.588,80,0.147,81,0.402,154,1.712,194,1.938,195,2.862,214,0.008,215,0.008,216,1.671,218,2.148,219,2.947,220,4.017,221,3.153,222,2.854,223,2.265,228,4.167,229,3.759,230,3.153,231,2.392,233,2.774,234,2.774,235,3.392,236,3.046,237,3.392,238,2.53,239,3.268,240,2.148,241,3.392,243,4.79,2972,6.75,2973,5.666,2974,5.666,2975,5.666,2976,6.143,2977,6.427,2978,5.666]],["title/modules/RegisterPageRoutingModule.html",[216,1.135,2976,3.052]],["body/modules/RegisterPageRoutingModule.html",[0,1.055,3,0.156,4,0.156,9,0.14,36,0.01,76,0.595,77,0.624,80,0.156,81,0.427,195,2.585,214,0.008,215,0.008,218,2.281,223,2.406,233,2.472,234,2.875,245,3.603,246,3.614,247,4.037,248,2.406,249,1.571,250,2.008,251,3.747,2976,5.548,2978,6.018,2979,6.827]],["title/components/SettingsPage.html",[0,0.675,197,1.422]],["body/components/SettingsPage.html",[0,1.01,1,0.948,2,1.57,3,0.066,4,0.066,5,0.739,6,1.083,7,1.083,8,1.083,9,0.06,11,0.414,12,2.549,13,1.489,14,1.353,15,1.613,16,2.194,17,0.687,18,3.17,19,2.77,20,1.658,22,1.658,24,0.223,25,0.843,27,0.803,28,2.458,30,1.266,33,1.429,35,0.975,36,0.01,37,0.652,38,0.529,39,0.599,42,1.877,46,1.57,47,1.806,48,1.806,52,1.918,57,0.823,60,1.122,61,1.674,63,0.997,67,1.13,72,1.308,73,1.34,76,0.538,77,0.266,80,0.066,81,0.182,82,1.204,85,2.026,87,2.265,99,3.587,100,3.595,101,3.785,102,3.323,103,3.449,104,3.368,105,3.4,106,3.546,107,1.86,109,1.553,111,2.941,112,2.649,113,1.632,115,3.455,116,2.617,117,3.502,118,3.236,119,2.265,120,1.451,121,2.339,122,2.26,123,1.536,124,1.293,126,2.752,127,2.387,128,1.335,131,1.705,133,2.445,134,3.19,135,1.74,137,3.625,138,3.236,139,2.664,140,2.664,141,1.921,143,1.74,144,1.665,145,4.321,146,1.536,147,1.825,148,2.664,149,2.752,150,2.752,151,2.664,152,2.664,153,1.921,154,0.776,155,1.658,156,1.613,157,0.973,158,1.083,160,1.083,161,0.973,162,1.083,163,0.973,164,1.083,165,0.948,166,1.515,167,1.083,168,0.999,169,1.451,170,2.014,171,0.973,172,2.256,173,0.948,174,1.083,175,0.924,176,1.083,177,0.973,178,0.638,179,1.658,180,0.948,181,1.083,182,0.948,183,1.662,184,1.083,185,0.973,186,0.908,187,0.973,188,0.948,189,1.083,190,0.973,191,1.451,192,1.083,193,0.973,194,0.878,195,0.948,196,1.083,197,2.244,198,1.083,199,0.948,200,1.083,201,0.999,202,0.953,203,0.973,204,0.948,205,1.083,206,0.973,207,0.948,208,0.757,209,0.795,210,1.026,211,0.948,212,1.054,213,1.083,214,0.005,215,0.005,238,1.146,240,0.973,249,1.026,272,4.061,301,2.692,313,1.977,320,0.757,346,4.034,348,3.63,354,4.002,355,3.089,382,1.806,383,1.215,406,2.664,407,1.114,411,3.469,416,2.034,436,1.48,470,3.905,477,3.089,493,1.806,560,4.237,586,1.529,595,3.928,597,5.252,598,4.771,605,1.86,606,1.754,607,3.928,612,2.112,613,3.321,614,6.219,628,0.948,635,1.86,636,1.978,639,1.924,640,3.928,642,2.941,643,3.113,663,3.083,666,2.034,667,2.034,678,3.928,688,2.856,701,2.079,740,4.103,757,4.237,913,1.378,972,2.112,990,4.771,992,3.113,994,3.321,1000,3.928,1044,2.445,1048,2.351,1063,2.793,1080,3.58,1164,2.034,1165,2.566,1226,2.802,1277,2.793,1278,3.321,1289,3.2,1449,1.665,1571,1.378,1663,2.752,1672,1.74,1683,1.74,1772,5.006,1773,4.638,1778,2.941,1794,3.856,1795,2.793,1807,2.17,1813,1.921,1814,2.17,1821,1.921,1826,2.034,1835,3.321,1856,3.58,1910,1.825,1911,1.665,1941,1.598,1942,2.339,1953,3.58,1958,3.638,1979,2.034,2037,3.928,2106,3.321,2108,5.137,2120,3.572,2122,3.321,2125,2.034,2131,2.17,2159,3.928,2170,3.928,2172,5.345,2173,6.077,2179,2.566,2180,2.566,2201,2.034,2296,3.58,2526,4.771,2539,2.339,2554,2.566,2581,2.566,2583,4.771,2627,2.566,2635,2.566,2636,2.566,2640,2.566,2648,2.339,2649,2.339,2655,2.566,2656,2.566,2980,2.566,2981,5.412,2982,4.455,2983,5.412,2984,2.911,2985,6.064,2986,4.455,2987,4.455,2988,2.911,2989,2.911,2990,2.911,2991,2.911,2992,4.771,2993,2.911,2994,2.911,2995,2.911,2996,2.911,2997,2.911,2998,2.911,2999,2.911,3000,2.911,3001,3.928,3002,2.911,3003,2.911,3004,2.911,3005,2.911,3006,2.911,3007,2.911,3008,2.911,3009,4.455,3010,4.455,3011,2.911,3012,2.911,3013,2.911,3014,4.455,3015,4.455,3016,2.911,3017,2.911,3018,2.911,3019,2.911,3020,4.455,3021,4.455,3022,4.455,3023,4.455,3024,2.911,3025,2.911,3026,2.911,3027,2.911,3028,2.566]],["title/modules/SettingsPageModule.html",[216,1.135,3029,3.255]],["body/modules/SettingsPageModule.html",[3,0.146,4,0.146,9,0.132,36,0.01,76,0.629,77,0.586,80,0.146,81,0.401,154,1.708,197,2.861,214,0.008,215,0.008,216,1.667,218,2.143,219,2.94,220,4.013,221,3.145,222,2.847,223,2.259,228,4.164,229,3.754,230,3.145,231,2.386,233,2.771,234,2.771,235,3.384,236,3.039,237,3.384,238,2.524,239,3.26,240,2.143,241,3.384,560,4.48,1919,4.232,3029,6.748,3030,5.652,3031,5.652,3032,5.652,3033,6.139,3034,6.412,3035,6.746,3036,5.652]],["title/modules/SettingsPageRoutingModule.html",[216,1.135,3033,3.052]],["body/modules/SettingsPageRoutingModule.html",[0,1.055,3,0.156,4,0.156,9,0.14,36,0.01,76,0.595,77,0.624,80,0.156,81,0.427,197,2.585,214,0.008,215,0.008,218,2.281,223,2.406,233,2.472,234,2.875,245,3.603,246,3.614,247,4.037,248,2.406,249,1.571,250,2.008,251,3.747,3033,5.548,3036,6.018,3037,6.827]],["title/modules/SharedModule.html",[216,1.135,228,2.07]],["body/modules/SharedModule.html",[2,2.134,3,0.101,4,0.101,9,0.091,36,0.01,76,0.642,77,0.407,80,0.101,81,0.278,154,1.184,163,2.897,165,2.823,168,2.974,171,2.897,177,2.897,182,2.823,185,2.897,187,2.897,190,2.897,193,2.897,201,2.974,203,2.897,206,2.897,210,2.134,211,2.823,214,0.006,215,0.006,216,1.156,218,2.023,219,2.039,220,3.378,221,2.181,222,1.974,223,2.426,228,4.396,229,2.97,230,2.181,231,1.654,233,1.61,234,2.192,235,3.634,236,2.107,237,3.634,238,1.75,239,3.501,240,1.486,247,3.078,248,1.567,415,3.573,416,3.107,453,4.231,455,3.314,466,5.338,467,5.338,468,3.314,469,3.314,474,4.513,511,3.314,512,3.107,513,3.919,514,3.919,578,3.573,1053,3.314,1634,3.573,1811,3.573,1812,4.811,1939,3.107,2100,3.573,2254,6.058,2255,5.338,2341,3.919,2388,3.314,2657,3.573,2873,3.573,2919,3.573,3035,5.338,3038,3.919,3039,3.919,3040,3.919,3041,4.446,3042,4.446,3043,6.055,3044,4.446,3045,6.055,3046,7.393,3047,6.055,3048,3.573,3049,3.573,3050,6.055,3051,4.446,3052,4.446,3053,4.446,3054,4.446,3055,4.446,3056,4.446,3057,4.446,3058,4.446,3059,4.446,3060,4.446,3061,4.446,3062,6.055,3063,4.446,3064,3.573,3065,4.446,3066,4.446]],["title/components/SplashPage.html",[0,0.675,199,1.422]],["body/components/SplashPage.html",[0,1.22,1,1.535,2,2.22,3,0.108,4,0.108,5,1.196,6,1.755,7,1.755,8,1.755,9,0.097,11,0.482,13,2.105,14,1.201,15,2.281,16,2.875,17,1.112,18,3.311,19,2.898,20,2.344,22,2.344,24,0.361,25,0.876,27,1.135,28,3.069,30,1.316,33,1.163,35,0.849,36,0.01,37,0.716,38,0.348,39,0.522,42,2.06,46,2.22,47,2.553,48,2.553,52,2.711,57,1.163,60,0.768,61,1.458,70,1.196,76,0.559,77,0.431,80,0.108,81,0.295,82,1.155,104,2.094,116,2.403,126,2.397,154,1.256,155,2.344,156,2.281,157,1.576,158,1.755,160,1.755,161,1.576,162,1.755,163,1.576,164,1.755,165,1.535,166,1.319,167,1.755,168,1.618,169,2.051,170,2.64,171,1.576,172,2.818,173,1.535,174,1.755,175,1.496,176,1.755,177,1.576,178,1.381,179,2.344,180,1.535,181,1.755,182,1.535,183,1.059,184,1.755,185,1.576,186,1.284,187,1.576,188,1.535,189,1.755,190,1.576,191,1.535,192,1.755,193,1.576,194,1.422,195,1.535,196,1.755,197,1.535,198,1.755,199,2.643,200,1.755,201,1.618,202,1.348,203,1.576,204,1.535,205,1.755,206,1.576,207,1.535,208,1.226,209,1.287,210,1.661,211,1.535,212,1.707,213,1.755,214,0.007,215,0.007,248,1.661,249,1.085,268,1.763,269,1.807,306,1.387,313,2.035,320,1.638,338,2.488,347,5.885,355,3.461,356,4.623,357,6.084,417,6.254,433,2.488,437,3.295,446,2.313,518,3.604,520,5.514,584,2.955,604,5.291,605,2.63,628,2.465,635,2.63,636,2.797,642,4.158,654,2.819,667,3.295,711,3.069,713,5.553,714,4.156,725,2.819,727,4.156,761,6.051,831,2.397,860,3.203,1048,2.488,1224,4.402,1277,3.949,1762,3.457,1775,3.949,1961,4.156,1963,2.819,1978,4.156,2001,4.695,2574,5.553,3067,4.156,3068,7.094,3069,6.3,3070,4.715,3071,4.715,3072,4.715,3073,4.715,3074,4.715,3075,4.715,3076,4.715,3077,4.715,3078,4.715,3079,4.715,3080,4.715,3081,4.715]],["title/modules/SplashPageModule.html",[216,1.135,3082,3.255]],["body/modules/SplashPageModule.html",[3,0.148,4,0.148,9,0.134,36,0.01,76,0.625,77,0.595,80,0.148,81,0.407,154,1.733,199,2.87,214,0.008,215,0.008,216,1.691,218,2.174,219,2.983,220,4.037,221,3.191,222,2.888,223,2.292,229,3.786,230,3.191,231,2.421,233,2.794,234,2.794,235,4.073,236,3.083,237,4.073,238,2.561,239,3.924,240,2.174,241,3.433,520,4.545,3082,6.688,3083,5.734,3084,5.734,3085,5.734,3086,6.159,3087,6.505,3088,5.734]],["title/modules/SplashPageRoutingModule.html",[216,1.135,3086,3.052]],["body/modules/SplashPageRoutingModule.html",[0,1.055,3,0.156,4,0.156,9,0.14,36,0.01,76,0.595,77,0.624,80,0.156,81,0.427,199,2.585,214,0.008,215,0.008,218,2.281,223,2.406,233,2.472,234,2.875,245,3.603,246,3.614,247,4.037,248,2.406,249,1.571,250,2.008,251,3.747,3086,5.548,3088,6.018,3089,6.827]],["title/interfaces/StrapiArrayResponse.html",[832,1.824,1170,0.641]],["body/interfaces/StrapiArrayResponse.html",[3,0.081,4,0.081,5,1.544,9,0.106,11,0.271,13,1.725,14,1.414,17,1.435,24,0.271,25,0.717,36,0.01,37,0.741,38,0.633,39,0.82,57,1.623,63,1.244,70,1.802,80,0.196,109,1.918,113,2.016,120,1.154,178,1.132,183,1.159,186,0.722,202,0.758,214,0.005,215,0.005,250,1.518,265,2.155,271,3.258,276,2.193,283,3.088,344,0.722,492,3.309,543,1.069,546,1.184,586,1.771,587,3.058,628,1.154,639,1.125,701,2.016,745,2.558,748,1.184,756,1.069,769,2.032,772,3.406,806,2.467,832,2.155,833,2.032,834,1.525,835,2.155,836,1.574,837,1.525,838,1.574,839,1.395,840,2.541,846,1.625,854,2.558,856,2.488,872,2.644,880,2.791,882,1.68,884,1.68,885,1.574,913,2.368,931,2.025,944,3.058,953,3.169,1030,2.71,1031,1.625,1104,2.291,1170,1.307,1172,1.125,1174,2.736,1185,2.356,1225,2.702,1226,2.42,1290,1.395,1292,2.968,1294,2.291,1516,2.38,1526,1.525,1558,2.032,1571,2.814,1584,3.258,1585,1.625,1586,2.446,1587,2.446,1588,2.291,1589,2.221,1590,2.291,1591,3.258,1592,2.291,1593,1.739,1594,2.985,1595,2.985,1596,1.525,1597,1.68,1598,2.791,1599,3.4,1600,2.532,1601,3.638,1602,1.625,1603,1.625,1604,1.625,1605,2.791,1606,1.625,1607,2.291,1608,1.739,1609,1.739,1610,2.532,1611,3.28,1612,2.532,1613,1.739,1614,1.739,1615,2.532,1616,2.791,1617,1.48,1618,2.366,1619,1.739,1620,1.739,1621,1.739,1622,1.739,1623,1.739]],["title/interfaces/StrapiData.html",[1170,0.641,1599,2.003]],["body/interfaces/StrapiData.html",[3,0.081,4,0.081,5,1.546,9,0.106,11,0.272,13,1.187,14,1.414,17,1.437,24,0.272,25,0.718,36,0.01,37,0.742,38,0.625,39,0.821,57,1.611,63,1.244,70,1.804,80,0.196,109,1.92,113,2.018,120,1.156,178,1.133,183,1.161,186,0.724,202,0.76,214,0.005,215,0.005,250,1.52,265,2.158,271,3.26,276,2.258,283,2.922,344,0.724,492,3.31,543,1.071,546,1.187,586,1.773,587,3.06,628,1.156,639,1.127,701,2.018,745,2.561,748,1.187,756,1.071,769,2.035,806,2.469,832,1.483,833,2.035,834,1.528,835,2.158,836,1.577,837,1.528,838,1.577,839,1.398,840,2.544,846,1.628,854,2.623,856,2.49,872,2.646,880,2.794,882,1.683,884,1.683,885,1.577,913,2.199,931,2.185,944,3.06,953,2.45,1030,3.008,1031,1.628,1104,2.295,1170,1.307,1172,1.127,1174,2.737,1185,2.506,1225,2.295,1226,2.423,1290,1.398,1292,2.971,1294,2.295,1516,2.4,1526,1.528,1558,2.035,1571,2.814,1584,3.26,1585,1.628,1586,2.45,1587,2.45,1588,2.295,1589,2.224,1590,2.295,1591,3.26,1592,2.295,1593,1.742,1594,2.989,1595,2.989,1596,1.528,1597,2.45,1598,2.794,1599,3.26,1600,3.64,1601,2.535,1602,1.628,1603,1.628,1604,1.628,1605,2.794,1606,1.628,1607,2.295,1608,1.742,1609,1.742,1610,2.535,1611,3.283,1612,2.535,1613,1.742,1614,1.742,1615,2.535,1616,2.794,1617,1.483,1618,2.37,1619,1.742,1620,1.742,1621,1.742,1622,1.742,1623,1.742]],["title/classes/StrapiDataService.html",[81,0.273,463,3.255]],["body/classes/StrapiDataService.html",[3,0.096,4,0.096,9,0.087,11,0.616,24,0.323,27,1.052,30,1.219,33,1.45,35,1.578,36,0.01,37,0.742,38,0.628,39,0.869,42,1.992,44,3.204,54,3.853,57,1.68,59,4.622,60,1.373,63,1.217,67,1.481,76,0.557,77,0.385,80,0.096,81,0.264,82,1.356,214,0.006,215,0.006,252,0.859,253,3.546,256,1.853,258,2.354,263,5.487,264,4.079,268,1.634,269,1.675,275,5.051,278,2.968,281,4.309,282,2.916,286,4.079,289,3.853,301,2.592,306,1.24,320,2.215,344,1.785,446,2.068,460,5.416,463,5.387,465,3.717,492,3.383,606,2.299,609,2.864,612,2.767,668,1.815,750,3.142,756,2.18,801,2.783,804,3.66,805,4.351,806,2.366,807,4.351,808,3.204,813,4.538,832,2.437,839,2.988,841,2.946,844,2.52,931,2.072,1028,5.147,1030,3.076,1031,4.205,1032,2.968,1033,5.147,1036,5.147,1039,5.147,1044,3.204,1045,5.147,1047,5.147,1049,3.34,1050,2.225,1051,2.946,1156,3.142,1526,2.513,1558,1.66,1569,2.412,3090,4.351,3091,3.717,3092,3.717,3093,4.216,3094,4.216,3095,4.216,3096,4.216,3097,5.838,3098,5.838,3099,4.216,3100,4.216,3101,5.838,3102,4.216,3103,4.216,3104,4.216,3105,4.216,3106,4.216,3107,4.216,3108,7.229,3109,7.229,3110,4.216,3111,4.216,3112,4.216,3113,4.216,3114,4.216]],["title/interfaces/StrapiExtendedUser.html",[833,1.72,1170,0.641]],["body/interfaces/StrapiExtendedUser.html",[3,0.081,4,0.081,5,1.55,9,0.107,11,0.273,13,1.192,14,1.421,17,1.441,24,0.273,25,0.721,36,0.01,37,0.743,38,0.63,39,0.822,57,1.618,63,1.245,70,1.807,80,0.196,109,1.924,113,2.022,120,1.162,178,1.137,183,1.165,186,0.727,202,0.763,214,0.005,215,0.005,250,1.525,265,2.165,271,3.267,276,2.221,283,2.926,344,0.727,492,3.313,543,1.076,546,1.192,586,1.779,587,3.066,628,1.162,639,1.132,701,2.022,745,2.844,748,1.192,756,1.076,769,2.042,772,3.422,806,2.476,832,1.489,833,2.405,834,1.535,835,2.165,836,1.584,837,1.535,838,1.584,839,1.405,840,2.551,846,1.636,854,2.563,856,2.495,872,2.651,880,2.8,882,1.691,884,1.691,885,1.584,913,2.204,931,2.029,944,3.066,953,2.458,1030,2.718,1031,1.636,1104,2.713,1170,1.308,1172,1.132,1174,2.74,1185,2.363,1225,2.302,1226,2.579,1290,1.405,1292,2.978,1294,2.302,1516,2.382,1526,1.535,1558,2.042,1571,2.815,1584,3.267,1585,1.636,1586,2.458,1587,2.458,1588,2.302,1589,2.232,1590,2.302,1591,3.267,1592,2.302,1593,1.75,1594,2.997,1595,2.997,1596,1.535,1597,1.691,1598,2.801,1599,3.075,1600,2.544,1601,2.544,1602,1.636,1603,1.636,1604,1.636,1605,2.801,1606,1.636,1607,2.302,1608,1.75,1609,1.75,1610,2.544,1611,3.29,1612,2.544,1613,1.75,1614,1.75,1615,2.544,1616,2.801,1617,1.489,1618,2.378,1619,1.75,1620,1.75,1621,1.75,1622,1.75,1623,1.75]],["title/interfaces/StrapiExtendedUser-1.html",[133,1.996,833,1.432,1170,0.533]],["body/interfaces/StrapiExtendedUser-1.html",[3,0.079,4,0.079,5,1.52,9,0.104,11,0.264,13,1.152,14,1.429,17,1.413,24,0.264,25,0.703,36,0.01,37,0.783,38,0.643,39,0.94,57,1.579,63,1.254,70,1.783,80,0.195,109,1.893,113,1.99,120,1.123,178,1.109,183,1.65,186,0.703,202,0.738,214,0.005,215,0.005,250,1.488,265,2.112,271,3.222,276,2.181,283,2.892,344,0.703,492,3.292,543,1.04,546,1.152,586,2.52,587,3.024,628,1.123,639,1.094,701,1.99,745,2.811,748,1.152,756,1.04,769,1.992,772,3.339,806,2.428,832,1.44,833,2.359,834,1.484,835,2.112,836,1.531,837,1.484,838,1.531,839,1.358,840,2.501,846,1.581,854,2.601,856,2.456,872,2.615,880,3.25,882,3.128,884,1.635,885,1.531,913,2.174,931,2.204,944,3.024,953,2.398,1030,2.675,1031,1.581,1104,2.246,1170,1.304,1172,1.094,1174,2.723,1185,2.476,1225,2.246,1226,2.389,1290,1.358,1292,2.93,1294,2.246,1516,2.407,1526,1.484,1558,1.992,1571,2.809,1584,3.222,1585,1.581,1586,2.398,1587,2.398,1588,2.246,1589,2.177,1590,2.246,1591,3.222,1592,2.246,1593,1.692,1594,2.939,1595,2.939,1596,1.484,1597,1.635,1598,2.747,1599,3.026,1600,2.482,1601,2.482,1602,1.581,1603,1.581,1604,1.581,1605,2.747,1606,1.581,1607,2.246,1608,1.692,1609,1.692,1610,2.482,1611,3.237,1612,2.482,1613,1.692,1614,1.692,1615,2.482,1616,2.747,1617,1.44,1618,2.32,1619,1.692,1620,1.692,1621,1.692,1622,1.692,1623,1.692]],["title/interfaces/StrapiLoginPayload.html",[834,1.88,1170,0.641]],["body/interfaces/StrapiLoginPayload.html",[3,0.081,4,0.081,5,1.547,9,0.106,11,0.272,13,1.188,14,1.421,17,1.438,24,0.272,25,0.719,36,0.01,37,0.742,38,0.625,39,0.821,57,1.587,63,1.253,70,1.805,80,0.196,109,1.921,113,2.019,120,1.158,178,1.337,183,1.162,186,0.725,202,0.761,214,0.005,215,0.005,250,1.521,265,2.16,271,3.262,276,2.195,283,2.923,344,0.725,492,3.311,543,1.072,546,1.188,586,1.775,587,3.195,628,1.158,639,1.128,701,2.019,745,2.562,748,1.188,756,1.072,769,2.037,806,2.471,832,1.485,833,2.037,834,2.226,835,2.16,836,1.579,837,1.53,838,1.579,839,1.4,840,2.546,846,1.63,854,2.753,856,2.922,872,2.763,880,2.795,882,1.685,884,1.685,885,1.579,913,2.201,931,2.027,944,3.062,953,2.452,1030,2.714,1031,1.63,1104,2.297,1170,1.308,1172,1.128,1174,2.738,1185,2.359,1225,2.297,1226,2.424,1290,1.4,1292,2.973,1294,2.297,1516,2.381,1526,1.53,1558,2.037,1571,2.815,1584,3.262,1585,1.63,1586,2.452,1587,2.452,1588,2.297,1589,2.226,1590,2.297,1591,3.262,1592,2.707,1593,1.744,1594,2.991,1595,2.991,1596,1.53,1597,1.685,1598,2.796,1599,3.07,1600,2.538,1601,2.538,1602,1.63,1603,1.63,1604,1.63,1605,2.796,1606,1.63,1607,2.297,1608,1.744,1609,1.744,1610,2.538,1611,3.285,1612,2.538,1613,1.744,1614,1.744,1615,2.538,1616,2.796,1617,1.485,1618,2.372,1619,1.744,1620,1.744,1621,1.744,1622,1.744,1623,1.744]],["title/interfaces/StrapiLoginResponse.html",[835,1.824,1170,0.641]],["body/interfaces/StrapiLoginResponse.html",[3,0.081,4,0.081,5,1.548,9,0.106,11,0.273,13,1.19,14,1.426,17,1.439,24,0.273,25,0.72,36,0.01,37,0.742,38,0.625,39,0.822,57,1.587,63,1.249,70,1.806,80,0.196,109,1.922,113,2.021,120,1.159,178,1.338,183,1.163,186,0.726,202,0.762,214,0.005,215,0.005,250,1.523,265,3.101,271,3.264,276,2.195,283,3.018,344,0.726,492,3.312,543,1.074,546,1.19,586,1.777,587,3.064,628,1.159,639,1.13,701,2.021,745,2.564,748,1.19,756,1.074,769,2.039,806,2.473,832,1.486,833,2.039,834,1.532,835,2.548,836,1.581,837,1.532,838,1.581,839,1.402,840,2.972,846,2.374,854,2.562,856,2.493,872,2.649,880,2.797,882,1.688,884,1.688,885,1.581,913,2.202,931,2.028,944,3.064,953,2.454,1030,2.715,1031,1.633,1104,2.299,1170,1.308,1172,1.13,1174,2.739,1185,2.361,1225,2.299,1226,2.577,1290,1.402,1292,2.975,1294,2.299,1516,2.382,1526,1.532,1558,2.039,1571,2.815,1584,3.264,1585,1.633,1586,2.454,1587,2.454,1588,2.299,1589,2.229,1590,2.299,1591,3.264,1592,2.299,1593,1.747,1594,2.993,1595,2.993,1596,1.532,1597,1.688,1598,2.798,1599,3.072,1600,2.54,1601,2.54,1602,1.633,1603,1.633,1604,1.633,1605,2.798,1606,1.633,1607,2.299,1608,1.747,1609,1.747,1610,2.54,1611,3.287,1612,2.54,1613,1.747,1614,1.747,1615,2.54,1616,2.798,1617,1.486,1618,2.374,1619,1.747,1620,1.747,1621,1.747,1622,1.747,1623,1.747]],["title/classes/StrapiMappingService.html",[81,0.273,3115,3.51]],["body/classes/StrapiMappingService.html",[3,0.098,4,0.098,9,0.089,11,0.605,14,1.424,24,0.33,27,1.068,30,1.416,33,1.496,35,1.379,36,0.01,37,0.766,38,0.564,39,0.847,42,1.852,57,1.662,60,1.457,63,1.227,70,2.239,76,0.542,77,0.394,80,0.098,81,0.27,82,1.246,183,1.333,208,1.898,214,0.006,215,0.006,249,0.993,252,0.879,256,1.882,257,4.727,258,1.931,268,1.66,269,1.702,281,3.255,320,2.106,344,1.813,446,2.116,475,5.526,492,2.335,585,3.255,586,2.035,609,2.91,612,2.811,643,4.145,736,3.255,745,2.793,748,2.643,756,1.789,799,2.468,805,4.421,806,2.404,807,4.421,808,3.255,813,4.727,833,2.874,839,1.698,841,3.014,844,2.579,872,2.207,880,2.476,931,2.444,936,3.467,937,3.014,1049,4.524,1050,4.275,1051,3.014,1156,3.215,1164,3.014,1170,1.071,1430,4.364,1431,4.364,1500,3.467,1501,4.766,1502,4.421,1503,5.229,1505,4.766,1507,4.766,1508,4.766,1509,4.766,1511,5.866,1513,4.766,1516,2.286,1518,4.766,1522,4.766,1524,4.766,1526,2.553,1527,4.766,1533,4.766,1536,3.803,1537,3.803,1538,3.803,1539,5.229,1544,3.803,1546,3.467,1547,3.803,1548,3.803,1551,3.803,1553,3.803,1555,3.803,1557,3.803,1558,1.698,1559,3.803,1560,3.803,1561,3.803,1562,3.803,1563,3.803,1565,3.803,1566,3.803,1567,3.803,1568,3.803,1569,2.468,1643,3.546,3090,4.421,3115,5.866,3116,4.314,3117,4.314,3118,4.314,3119,4.314,3120,4.314,3121,4.314,3122,4.314,3123,4.314,3124,4.314,3125,4.314,3126,4.314,3127,4.314,3128,4.314]],["title/interfaces/StrapiMedia.html",[1170,0.641,1607,1.939]],["body/interfaces/StrapiMedia.html",[3,0.074,4,0.074,5,1.471,9,0.1,11,0.25,13,1.09,14,1.402,17,1.515,24,0.25,25,0.675,36,0.01,37,0.774,38,0.658,39,0.825,57,1.565,63,1.264,70,2.021,80,0.193,109,2.197,113,2.31,120,1.58,178,1.064,183,1.09,186,0.665,202,0.698,214,0.005,215,0.005,250,1.427,265,2.026,271,3.653,276,2.181,283,2.834,344,0.665,492,3.257,543,0.983,546,1.09,586,1.665,587,2.955,628,1.062,639,1.035,701,2.31,745,2.457,748,1.09,756,1.464,769,1.911,806,2.35,832,1.361,833,1.911,834,1.403,835,2.026,836,1.448,837,1.403,838,1.448,839,1.284,840,2.42,846,1.495,854,2.56,856,2.39,872,2.555,880,2.681,882,1.545,884,1.545,885,1.448,913,2.124,931,2.137,944,2.955,953,2.3,1030,2.603,1031,1.495,1104,2.155,1170,1.296,1172,1.035,1174,2.694,1185,2.419,1225,2.155,1226,2.325,1290,1.284,1292,3.401,1294,2.574,1516,2.419,1526,1.403,1558,1.911,1571,2.84,1584,3.707,1585,1.495,1586,2.748,1587,2.3,1588,2.155,1589,2.089,1590,2.155,1591,3.148,1592,2.155,1593,1.599,1594,2.844,1595,2.844,1596,1.403,1597,1.545,1598,2.658,1599,2.945,1600,2.381,1601,2.381,1602,1.495,1603,1.495,1604,1.495,1605,2.658,1606,1.495,1607,2.574,1608,2.381,1609,3.15,1610,3.531,1611,3.758,1612,3.368,1613,2.381,1614,3.15,1615,3.368,1616,3.148,1617,2.026,1618,2.945,1619,3.15,1620,2.381,1621,3.15,1622,1.599,1623,1.599]],["title/classes/StrapiMediaService.html",[81,0.273,472,3.255]],["body/classes/StrapiMediaService.html",[3,0.159,4,0.126,9,0.171,11,0.586,14,0.876,24,0.423,27,1.258,30,1.458,33,1.289,35,1.258,36,0.01,37,0.66,38,0.515,39,0.772,42,2.15,44,3.832,54,4.608,59,3.685,60,1.137,67,1.401,76,0.627,77,0.505,80,0.126,81,0.346,82,1.137,194,1.666,214,0.007,215,0.007,249,1.271,252,1.126,253,3.946,256,2.216,266,3.159,268,1.954,269,2.003,282,2.702,306,1.624,310,4.116,313,1.584,320,1.815,344,1.56,355,2.306,418,4.116,446,2.709,470,4.245,472,5.996,473,4.438,481,3.462,492,3.167,606,2.749,612,3.309,647,2.533,668,2.377,760,3.031,798,3.159,799,4.38,800,3.159,801,3.645,804,4.377,805,5.204,806,2.83,807,5.204,808,3.832,810,6.152,813,3.302,830,4.869,832,2.306,833,2.175,834,2.377,835,2.306,836,2.452,837,2.377,838,2.452,839,2.175,840,2.306,841,3.859,844,3.302,972,4.127,1289,3.685,1290,2.749,1296,4.608,1569,3.159,1570,4.438,1571,2.693,1574,5.61,1606,3.202,2050,6.155,2498,5.61,2660,4.869,3090,5.204,3129,5.523,3130,5.523,3131,5.523,3132,5.523,3133,5.523,3134,5.523,3135,5.523]],["title/interfaces/StrapiRegisterPayload.html",[837,1.88,1170,0.641]],["body/interfaces/StrapiRegisterPayload.html",[3,0.081,4,0.081,5,1.543,9,0.106,11,0.271,13,1.183,14,1.423,17,1.434,24,0.271,25,0.717,36,0.01,37,0.741,38,0.629,39,0.82,57,1.586,63,1.257,70,1.802,80,0.196,109,1.917,113,2.015,120,1.152,178,1.13,183,1.158,186,0.721,202,0.757,214,0.005,215,0.005,250,1.516,265,2.152,271,3.256,276,2.193,283,2.918,344,0.721,492,3.308,543,1.067,546,1.183,586,1.769,587,3.441,628,1.152,639,1.123,701,2.015,745,2.557,748,1.183,756,1.067,769,2.394,806,2.465,832,1.478,833,2.03,834,1.523,835,2.152,836,1.572,837,2.219,838,1.572,839,1.393,840,2.539,846,1.623,854,2.557,856,2.918,872,2.975,880,2.789,882,1.678,884,1.678,885,1.572,913,2.197,931,2.024,944,3.056,953,2.444,1030,2.708,1031,1.623,1104,2.289,1170,1.307,1172,1.123,1174,2.736,1185,2.354,1225,2.289,1226,2.419,1290,1.393,1292,2.967,1294,2.289,1516,2.38,1526,1.523,1558,2.03,1571,2.814,1584,3.256,1585,1.623,1586,2.444,1587,2.444,1588,2.289,1589,2.219,1590,2.289,1591,3.256,1592,2.7,1593,1.736,1594,2.983,1595,2.983,1596,1.523,1597,1.678,1598,2.788,1599,3.063,1600,2.529,1601,2.529,1602,1.623,1603,1.623,1604,1.623,1605,2.788,1606,1.623,1607,2.289,1608,1.736,1609,1.736,1610,2.529,1611,3.277,1612,2.529,1613,1.736,1614,1.736,1615,2.529,1616,2.788,1617,1.478,1618,2.364,1619,1.736,1620,1.736,1621,1.736,1622,1.736,1623,1.736]],["title/interfaces/StrapiResponse.html",[839,1.72,1170,0.641]],["body/interfaces/StrapiResponse.html",[3,0.082,4,0.082,5,1.552,9,0.107,11,0.274,13,1.195,14,1.415,17,1.442,24,0.274,25,0.722,36,0.01,37,0.743,38,0.62,39,0.823,57,1.624,63,1.245,70,1.809,80,0.196,109,1.926,113,2.024,120,1.164,178,1.139,183,1.167,186,0.729,202,0.765,214,0.005,215,0.005,250,1.527,265,2.168,271,3.269,276,2.242,283,3.022,344,0.729,492,3.314,543,1.078,546,1.195,586,1.782,587,3.069,628,1.164,639,1.134,701,2.024,745,2.569,748,1.195,756,1.078,769,2.044,806,2.479,832,1.492,833,2.044,834,1.538,835,2.168,836,1.587,837,1.538,838,1.587,839,2.044,840,2.553,846,1.639,854,2.565,856,2.498,872,2.653,880,2.802,882,1.694,884,1.694,885,1.587,913,2.205,931,2.031,944,3.069,953,2.461,1030,2.721,1031,1.639,1104,2.306,1170,1.308,1172,1.134,1174,2.741,1185,2.365,1225,2.716,1226,2.43,1290,1.407,1292,2.981,1294,2.306,1516,2.383,1526,2.235,1558,2.044,1571,2.816,1584,3.269,1585,1.639,1586,2.461,1587,2.461,1588,2.306,1589,2.235,1590,2.306,1591,3.269,1592,2.306,1593,1.754,1594,3,1595,3,1596,1.538,1597,1.694,1598,2.804,1599,3.41,1600,2.547,1601,2.547,1602,1.639,1603,1.639,1604,1.639,1605,2.804,1606,1.639,1607,2.306,1608,1.754,1609,1.754,1610,2.547,1611,3.293,1612,2.547,1613,1.754,1614,1.754,1615,2.547,1616,2.804,1617,1.492,1618,2.381,1619,1.754,1620,1.754,1621,1.754,1622,1.754,1623,1.754]],["title/interfaces/StrapiUser.html",[840,1.824,1170,0.641]],["body/interfaces/StrapiUser.html",[3,0.081,4,0.081,5,1.543,9,0.106,11,0.271,13,1.183,14,1.425,17,1.434,24,0.271,25,0.717,36,0.01,37,0.741,38,0.629,39,0.82,57,1.586,63,1.253,70,1.802,80,0.196,109,1.917,113,2.015,120,1.152,178,1.13,183,1.158,186,0.721,202,0.757,214,0.005,215,0.005,250,1.516,265,2.152,271,3.256,276,2.193,283,2.918,344,0.721,492,3.308,543,1.067,546,1.183,586,1.769,587,3.441,628,1.152,639,1.123,701,2.015,745,2.557,748,1.183,756,1.067,769,2.03,806,2.465,832,1.478,833,2.03,834,1.523,835,2.152,836,1.572,837,1.523,838,1.572,839,1.393,840,2.789,846,1.623,854,2.62,856,2.486,872,2.975,880,2.789,882,1.678,884,1.678,885,1.572,913,2.197,931,2.183,944,3.056,953,2.444,1030,2.708,1031,1.623,1104,2.289,1170,1.307,1172,1.123,1174,2.736,1185,2.502,1225,2.289,1226,2.419,1290,1.393,1292,2.967,1294,2.289,1516,2.399,1526,1.523,1558,2.03,1571,2.814,1584,3.256,1585,1.623,1586,2.444,1587,2.444,1588,2.289,1589,2.219,1590,2.289,1591,3.256,1592,2.289,1593,1.736,1594,2.983,1595,2.983,1596,1.523,1597,1.678,1598,2.788,1599,3.063,1600,2.529,1601,2.529,1602,1.623,1603,1.623,1604,1.623,1605,2.788,1606,1.623,1607,2.289,1608,1.736,1609,1.736,1610,2.529,1611,3.277,1612,2.529,1613,1.736,1614,1.736,1615,2.529,1616,2.788,1617,1.478,1618,2.364,1619,1.736,1620,1.736,1621,1.736,1622,1.736,1623,1.736]],["title/interfaces/Team.html",[202,0.935,1170,0.641]],["body/interfaces/Team.html",[3,0.136,4,0.136,9,0.122,11,0.606,24,0.455,25,1.015,36,0.01,37,0.816,38,0.636,39,0.977,63,1.237,76,0.561,80,0.136,107,3.05,186,1.727,202,1.947,214,0.008,215,0.008,276,1.946,543,2.602,854,2.441,885,3.831,913,2.553,1155,3.446,1170,1.16,1172,1.884,1174,2.688,1185,2.574,1571,2.704,1596,3.648,1628,5.409,1643,4.73,1889,4.53,3136,5.234,3137,7.304]],["title/components/TeamInfoComponent.html",[0,0.675,203,1.46]],["body/components/TeamInfoComponent.html",[0,1.131,1,1.244,2,1.92,3,0.145,4,0.087,5,0.969,6,1.422,7,1.422,8,1.422,9,0.079,11,0.417,12,3.116,13,2.542,14,0.606,15,1.972,16,2.573,17,0.901,18,3.256,19,2.848,20,2.027,22,2.027,24,0.417,25,0.757,27,0.981,28,2.805,30,1.528,33,1.478,35,0.688,36,0.01,37,0.74,38,0.539,39,0.423,46,1.92,47,2.208,48,2.208,52,2.345,57,1.006,60,1.034,61,1.964,67,1.382,72,1.316,73,1.349,76,0.45,77,0.349,80,0.087,81,0.239,82,0.622,85,2.675,99,3.799,100,3.711,101,3.009,102,1.943,103,2.016,104,3.249,105,2.582,106,3.378,107,2.275,109,1.563,110,3.596,112,2.573,113,1.643,114,3.368,115,3.244,116,2.484,117,2.966,118,2.284,119,1.943,120,2.067,122,3.176,123,2.875,124,1.697,126,1.943,127,2.145,128,3.355,130,2.186,131,2.085,132,2.395,133,2.097,134,2.573,154,1.018,155,2.027,156,1.972,157,1.277,158,1.422,160,1.422,161,1.277,162,1.422,163,1.277,164,1.422,165,1.244,166,1.069,167,1.422,168,1.311,169,1.774,170,2.363,171,1.277,172,2.576,173,1.244,174,1.422,175,1.212,176,1.422,177,1.277,178,0.838,179,2.027,180,1.244,181,1.422,182,1.244,183,0.858,184,1.422,185,1.277,186,1.596,187,1.277,188,1.244,189,1.422,190,1.277,191,2.254,192,1.422,193,1.277,194,1.152,195,1.244,196,1.422,197,1.244,198,1.422,199,1.244,200,1.422,201,1.311,202,1.935,203,2.542,204,1.244,205,1.422,206,1.277,207,1.244,208,0.993,209,1.043,210,1.346,211,1.244,212,1.383,213,1.422,214,0.006,215,0.006,258,2.254,276,1.451,348,2.673,349,3.07,543,2.207,584,2.395,596,2.99,599,3.415,615,4.479,617,4.053,618,4.568,635,2.275,636,2.419,663,3.228,664,3.632,691,2.67,701,1.915,913,1.685,1074,2.395,1077,3.807,1081,2.284,1083,3.257,1415,2.097,1535,2.395,1635,2.67,1636,4.732,1637,4.06,1638,5.562,1639,4.378,1640,4.191,1641,4.191,1646,3.862,1647,5.283,1649,4.568,1650,4.378,1653,3.07,1654,3.07,1655,2.848,1663,1.943,1665,2.848,1670,3.115,1671,3.115,1674,3.116,1675,2.522,1683,2.284,1910,2.395,1943,3.07,1958,2.016,1959,3.368,1963,2.284,1979,2.67,2144,2.848,2149,3.796,2376,3.368,2487,4.378,2492,3.368,2563,2.848,2602,3.368,2675,2.848,2676,2.848,2677,2.848,2708,4.378,3049,6.546,3138,6.546,3139,5.448,3140,3.368,3141,3.368,3142,3.821,3143,3.368,3144,3.821,3145,6.102,3146,3.821,3147,5.448,3148,5.448,3149,5.448,3150,5.448,3151,5.448,3152,5.448,3153,3.821,3154,3.821,3155,3.821,3156,3.821,3157,3.821,3158,3.821,3159,3.821,3160,3.821,3161,3.821,3162,5.448]],["title/injectables/TeamService.html",[252,0.89,1693,2.738]],["body/injectables/TeamService.html",[3,0.079,4,0.079,9,0.071,11,0.564,24,0.266,25,0.707,27,0.916,30,1.062,33,1.441,35,1.27,36,0.01,37,0.696,38,0.575,39,0.78,42,2.104,44,2.792,54,3.358,59,3.72,60,1.27,63,1.057,67,1.868,72,1.454,73,1.49,76,0.573,77,0.318,80,0.079,81,0.218,82,1.296,85,2.213,166,1.973,186,1.437,202,1.948,214,0.005,215,0.005,249,1.525,252,1.037,253,3.249,254,1.409,256,1.614,258,1.656,268,1.424,269,1.459,278,2.586,282,2.864,301,2.259,306,1.022,311,1.225,312,1.192,313,2.352,320,2.131,332,3.966,333,2.586,338,2.685,340,3.869,344,1.734,345,3.367,355,2.765,368,3.834,371,2.793,372,2.294,380,3.064,383,1.451,384,2.294,400,2.793,405,3.064,406,2.078,411,1.988,427,3.064,433,1.834,435,3.064,477,2.765,479,4.152,481,3.189,487,2.333,493,2.985,533,3.972,543,2.4,546,2.703,573,2.294,605,2.765,606,2.608,609,3.249,647,3.489,668,2.19,711,2.985,756,1.998,763,2.91,765,2.411,778,4.485,780,3.064,784,2.496,801,2.294,831,1.767,852,3.358,860,2.586,865,2.428,867,3.358,885,1.543,913,2.049,917,5.729,928,3.064,1032,2.586,1092,4.372,1093,2.91,1112,1.988,1155,3.631,1171,2.91,1201,5.149,1203,2.294,1240,4.485,1241,3.791,1339,2.91,1348,2.178,1415,2.792,1469,3.791,1489,4.628,1592,2.259,1628,2.178,1643,3.041,1686,3.041,1693,4.152,1697,3.358,1698,3.791,1713,3.064,1714,3.064,1726,3.064,1741,4.485,1754,4.485,1889,1.907,1926,4.152,2227,2.59,2707,4.628,2731,5.322,2749,4.088,2750,2.793,2751,2.793,2764,2.793,2766,2.793,3092,3.064,3163,3.064,3164,5.087,3165,5.087,3166,5.087,3167,5.087,3168,5.087,3169,5.087,3170,3.475,3171,5.087,3172,3.475,3173,5.087,3174,3.475,3175,5.087,3176,3.475,3177,3.475,3178,3.475,3179,3.475,3180,3.475,3181,3.064,3182,3.475,3183,3.475,3184,6.018,3185,7.608,3186,7.608,3187,6.623,3188,3.475,3189,3.064,3190,3.475,3191,3.475,3192,3.475,3193,3.475,3194,3.475,3195,3.475,3196,3.064,3197,3.475,3198,3.475,3199,3.475,3200,3.475,3201,3.475,3202,3.475,3203,5.087,3204,5.087,3205,5.087,3206,3.475,3207,5.087,3208,3.475,3209,6.018,3210,3.475,3211,3.475,3212,3.475,3213,3.475,3214,3.475,3215,3.475,3216,3.475,3217,6.018,3218,3.475,3219,3.475,3220,3.475,3221,3.475,3222,3.064,3223,3.475,3224,3.475,3225,3.475,3226,3.475,3227,3.475,3228,3.475,3229,3.475,3230,3.475,3231,3.475,3232,3.475]],["title/components/TeamsPage.html",[0,0.675,204,1.422]],["body/components/TeamsPage.html",[0,1.053,1,0.92,2,1.534,3,0.121,4,0.064,5,0.717,6,1.051,7,1.051,8,1.051,9,0.109,11,0.494,14,0.448,15,1.576,16,2.153,17,0.666,18,3.159,19,2.761,20,1.62,22,1.62,24,0.522,25,0.83,27,0.784,28,2.419,30,0.909,33,1.389,35,1.075,36,0.01,37,0.759,38,0.502,39,0.66,42,1.801,46,1.534,47,1.765,48,1.765,52,1.874,57,1.483,60,1.109,61,2.107,67,1.348,72,0.683,73,0.7,76,0.544,77,0.258,80,0.064,81,0.177,82,1.224,85,1.775,87,1.437,109,0.811,112,1.765,115,3.323,116,2.577,117,3.421,122,1.18,124,1.255,127,1.112,131,2.033,133,3.276,134,2.761,135,1.689,136,1.771,137,3.176,138,3.176,139,2.603,140,2.603,141,1.865,143,1.689,144,1.616,145,4.042,146,1.491,147,1.771,148,1.689,149,2.214,150,2.214,151,1.689,152,1.689,153,1.865,154,0.753,155,1.62,156,1.576,157,0.944,158,1.051,160,1.051,161,0.944,162,1.051,163,0.944,164,1.051,165,0.92,166,1.219,167,1.051,168,0.969,169,1.418,170,1.977,171,0.944,172,2.221,173,0.92,174,1.051,175,0.897,176,1.051,177,0.944,178,0.62,179,1.62,180,0.92,181,1.051,182,0.92,183,0.635,184,1.051,185,0.944,186,1.217,187,0.944,188,0.92,189,1.051,190,0.944,191,2.099,192,1.051,193,0.944,194,0.852,195,0.92,196,1.051,197,0.92,198,1.051,199,0.92,200,1.051,201,1.823,202,1.912,203,0.944,204,2.218,205,1.051,206,0.944,207,0.92,208,0.735,209,0.771,210,0.996,211,0.92,212,1.023,213,1.051,214,0.005,215,0.005,240,0.944,249,1.918,256,2.161,258,1.418,268,1.219,269,1.249,313,1.712,320,1.552,332,1.437,344,1.616,348,2.136,368,1.339,371,2.27,382,1.765,383,2.218,436,3.904,470,3.15,487,1.296,495,2.603,496,3.176,543,0.852,546,2.611,612,2.064,617,2.136,628,1.944,635,1.818,636,1.934,688,3.746,701,0.852,711,2.419,725,1.689,740,3.415,817,4.496,860,1.437,868,1.771,891,2.491,913,0.874,917,1.974,940,4.837,943,4.449,946,2.73,959,3.245,960,2.106,972,2.064,1032,3.035,1038,1.616,1056,4.671,1061,3.276,1063,3.742,1074,1.771,1122,1.865,1155,2.844,1186,1.865,1289,2.298,1404,2.73,1461,3.245,1489,1.974,1516,1.189,1571,2.107,1617,1.818,1628,2.73,1640,2.874,1641,2.874,1646,3.403,1647,2.874,1649,2.874,1663,3.035,1670,1.386,1671,1.386,1693,4.042,1762,2.39,1765,4.496,1769,3.499,1772,5.301,1773,3.742,1775,4.042,1777,3.043,1778,2.874,1779,3.245,1780,3.499,1788,3.499,1790,3.499,1791,5.889,1793,3.499,1794,3.035,1795,2.73,1796,3.245,1797,3.499,1798,3.499,1799,3.043,1800,3.499,1803,2.874,1804,1.974,1805,1.865,1806,4.505,1807,2.106,1810,2.27,1812,1.974,1813,1.865,1814,2.106,1815,2.27,1816,1.974,1817,3.839,1818,3.245,1820,4.171,1821,3.94,1822,3.94,1823,4.269,1824,4.805,1825,4.269,1826,4.171,1827,4.449,1828,2.27,1833,2.27,1835,2.106,1842,2.27,1843,2.27,1844,2.27,1845,2.27,1846,2.106,1847,2.27,1848,2.27,1849,5.181,1850,2.27,1851,4.797,1852,2.27,1853,2.27,1854,2.27,1855,2.27,1868,4.269,1871,2.491,1874,2.491,1877,2.27,1889,3.738,1900,3.499,1905,2.106,1906,1.974,1907,1.974,1908,1.865,1909,1.689,1910,1.771,1911,1.616,1943,2.27,2332,2.27,2496,2.491,2696,3.839,2707,1.974,2708,2.27,2709,2.491,2710,2.491,2862,3.839,3048,2.27,3138,2.27,3233,2.491,3234,5.313,3235,4.354,3236,5.969,3237,5.969,3238,2.826,3239,4.354,3240,2.826,3241,2.826,3242,4.354,3243,2.826,3244,4.354,3245,2.826,3246,2.826,3247,2.826,3248,2.826,3249,2.826,3250,2.826,3251,2.826,3252,2.826,3253,2.826,3254,2.826,3255,2.826,3256,2.826,3257,2.826,3258,2.826,3259,2.826,3260,2.826,3261,2.826,3262,5.969,3263,2.826,3264,2.826,3265,2.491,3266,2.826,3267,2.826,3268,2.826,3269,2.826,3270,2.826,3271,2.826,3272,2.826,3273,4.354,3274,2.826,3275,4.354,3276,2.826,3277,2.826,3278,2.826,3279,2.826,3280,2.826,3281,2.826,3282,2.826,3283,2.826,3284,2.826,3285,4.354]],["title/modules/TeamsPageModule.html",[216,1.135,3286,3.255]],["body/modules/TeamsPageModule.html",[3,0.147,4,0.147,9,0.132,36,0.01,76,0.63,77,0.588,80,0.147,81,0.402,154,1.712,204,2.862,214,0.008,215,0.008,216,1.671,218,2.148,219,2.947,220,4.017,221,3.153,222,2.854,223,2.265,228,4.167,229,3.759,230,3.153,231,2.392,233,2.774,234,2.774,235,3.392,236,3.046,237,3.392,238,2.53,239,3.268,240,2.148,241,3.392,546,2.148,1919,4.242,3286,6.75,3287,5.666,3288,5.666,3289,5.666,3290,6.143,3291,6.427,3292,5.666]],["title/modules/TeamsPageRoutingModule.html",[216,1.135,3290,3.052]],["body/modules/TeamsPageRoutingModule.html",[0,1.055,3,0.156,4,0.156,9,0.14,36,0.01,76,0.595,77,0.624,80,0.156,81,0.427,204,2.585,214,0.008,215,0.008,218,2.281,223,2.406,233,2.472,234,2.875,245,3.603,246,3.614,247,4.037,248,2.406,249,1.571,250,2.008,251,3.747,3290,5.548,3292,6.018,3293,6.827]],["title/interfaces/Trainer.html",[1170,0.641,1596,1.88]],["body/interfaces/Trainer.html",[3,0.148,4,0.148,9,0.134,11,0.497,24,0.497,25,1.072,36,0.01,37,0.833,38,0.627,63,1.225,80,0.148,214,0.008,215,0.008,501,4.288,854,2.578,880,3.679,931,2.323,1170,1.131,1172,2.062,1174,2.115,1185,2.718,1516,2.406,1596,3.92,3294,5.727,3295,8.812]],["title/interfaces/User.html",[14,0.693,1170,0.641]],["body/interfaces/User.html",[3,0.129,4,0.129,9,0.116,11,0.431,14,1.45,24,0.431,25,0.983,36,0.01,37,0.805,38,0.655,39,1.007,57,1.306,63,1.261,70,1.793,74,3.731,76,0.548,80,0.161,183,1.913,186,1.441,208,1.464,209,1.93,214,0.007,215,0.007,382,3.452,585,4.447,586,2.922,655,4.226,736,4.447,854,2.362,872,3.169,931,2.212,1049,3.222,1050,3.731,1155,3.556,1170,1.133,1172,1.787,1174,2.302,1185,2.855,1516,2.109,1571,2.187,1605,2.583,1643,4.619,1803,5.348,3296,4.526,3297,4.526]],["title/interfaces/UserCredentials.html",[798,2.498,1170,0.641]],["body/interfaces/UserCredentials.html",[3,0.154,4,0.154,9,0.139,11,0.518,14,1.393,24,0.518,25,1.098,36,0.01,38,0.582,63,1.236,80,0.154,214,0.008,215,0.008,587,3.827,760,3.714,798,4.519,856,3.309,1170,1.159,1172,2.147,1174,2.203,1941,3.714,3298,5.965]],["title/components/UserInfoComponent.html",[0,0.675,206,1.46]],["body/components/UserInfoComponent.html",[0,1.147,1,1.292,2,1.972,3,0.148,4,0.091,5,1.006,6,1.476,7,1.476,8,1.476,9,0.082,11,0.496,12,3.201,13,2.352,14,1.434,15,2.026,16,2.627,17,0.936,18,3.267,19,2.858,20,2.082,22,2.082,24,0.304,25,0.978,27,1.008,28,2.853,30,1.354,33,1.371,35,1.008,36,0.01,37,0.702,38,0.519,39,0.619,41,4.933,46,1.972,47,2.268,48,2.268,52,2.408,57,1.3,60,0.911,61,2.005,63,0.778,67,1.419,70,1.419,72,1.701,73,1.385,74,2.953,75,3.91,76,0.459,77,0.363,80,0.091,81,0.248,82,0.911,83,2.269,85,2.352,100,3.518,101,2.652,102,2.017,103,2.094,104,2.484,105,1.88,106,2.484,109,1.605,110,2.619,112,3.008,113,1.687,115,3.331,116,2.565,117,3.122,118,3.875,119,2.017,120,1.292,122,1.656,123,2.094,127,1.562,128,1.819,130,2.269,132,3.507,134,1.608,154,1.057,155,2.082,156,2.026,157,1.326,158,1.476,160,1.476,161,1.326,162,1.476,163,1.326,164,1.476,165,1.292,166,1.814,167,1.476,168,1.361,169,1.822,170,2.412,171,1.326,172,2.62,173,1.292,174,1.476,175,1.259,176,1.476,177,1.326,178,0.87,179,2.082,180,1.292,181,1.476,182,1.292,183,1.668,184,1.476,185,1.326,186,1.14,187,1.326,188,1.292,189,1.476,190,1.326,191,2.11,192,1.476,193,1.326,194,1.197,195,1.292,196,1.476,197,1.292,198,1.476,199,1.292,200,1.476,201,1.361,202,1.197,203,1.326,204,1.292,205,1.476,206,2.574,207,1.292,208,1.031,209,1.77,210,1.398,211,1.292,212,1.436,213,1.476,214,0.006,215,0.006,249,0.913,257,3.345,258,1.292,276,1.727,301,2.484,332,2.017,333,2.017,340,3.071,348,2.745,384,2.619,433,2.094,584,2.487,596,3.071,615,2.269,617,3.453,635,2.336,636,2.484,657,4.933,663,2.845,664,2.269,691,2.772,701,1.687,736,4.571,788,5.067,1044,2.177,1083,2.372,1104,2.484,1449,2.269,1589,1.708,1635,2.772,1636,4.831,1637,4.17,1646,2.953,1663,2.017,1666,2.487,1668,2.957,1669,2.619,1670,2.745,1671,2.745,1672,2.372,1674,2.269,1675,2.619,1678,2.957,1679,2.957,1683,2.372,1762,3.863,1925,5.084,1940,3.188,1941,2.177,1958,2.953,1963,2.372,1975,3.497,2149,3.345,2216,2.772,2258,3.188,2652,4.933,2674,3.188,2675,2.957,2676,2.957,2677,2.957,2992,4.933,3001,4.933,3064,6.189,3140,4.933,3141,3.497,3143,3.497,3145,4.933,3299,6.79,3300,6.482,3301,5.595,3302,3.967,3303,6.482,3304,3.967,3305,5.595,3306,5.595,3307,3.967,3308,3.967,3309,3.967,3310,3.967,3311,3.967,3312,3.967,3313,5.595,3314,5.595,3315,5.595,3316,3.967,3317,5.595,3318,3.967,3319,3.967,3320,3.967,3321,3.967,3322,3.967]],["title/interfaces/UserRegisterInfo.html",[800,2.498,1170,0.641]],["body/interfaces/UserRegisterInfo.html",[3,0.145,4,0.145,9,0.131,11,0.487,13,2.125,14,1.441,24,0.487,25,1.058,36,0.01,37,0.829,38,0.637,63,1.277,80,0.145,194,1.918,214,0.008,215,0.008,586,3.009,769,2.503,800,4.356,856,3.263,872,3.263,880,3.661,1170,1.117,1172,2.018,1174,2.07,1941,3.49,2326,5.606,3323,5.606]],["title/components/UsersAdminPage.html",[0,0.675,207,1.422]],["body/components/UsersAdminPage.html",[0,1.166,1,1.348,2,2.032,3,0.095,4,0.095,5,1.051,6,1.541,7,1.541,8,1.541,9,0.085,11,0.442,14,1.271,15,2.088,16,2.689,17,0.977,18,3.279,19,2.868,20,2.146,22,2.146,24,0.317,25,0.997,27,1.039,28,2.907,30,1.204,33,1.325,35,0.746,36,0.01,37,0.678,38,0.489,39,0.458,42,1.683,46,2.032,47,2.337,48,2.337,52,2.482,57,1.393,60,0.674,61,1.784,72,1.001,73,1.025,75,2.894,76,0.508,77,0.379,80,0.095,81,0.259,82,1.08,100,1.963,101,2.733,102,2.106,103,2.186,104,2.56,105,1.963,106,2.56,109,1.654,112,3.056,113,1.739,115,3.498,116,2.393,117,3.247,119,2.106,120,1.348,122,1.729,123,2.186,124,1.839,127,2.27,128,1.899,130,3.298,132,3.614,134,3.247,135,2.476,136,2.596,154,1.103,155,2.146,156,2.088,157,1.384,158,1.541,160,1.541,161,1.384,162,1.541,163,1.384,164,1.541,165,1.348,166,1.159,167,1.541,168,1.421,169,1.877,170,2.469,171,1.384,172,2.669,173,1.348,174,1.541,175,1.314,176,1.541,177,1.384,178,0.908,179,2.146,180,1.348,181,1.541,182,1.348,183,0.93,184,1.541,185,1.384,186,1.175,187,1.384,188,1.348,189,1.541,190,1.384,191,2.16,192,1.541,193,1.384,194,1.249,195,1.348,196,1.541,197,1.348,198,1.541,199,1.348,200,1.541,201,1.421,202,1.234,203,1.384,204,1.348,205,1.541,206,1.384,207,2.542,208,2.282,209,2.059,210,1.459,211,1.348,212,1.499,213,1.541,214,0.006,215,0.006,240,1.384,258,1.348,268,1.614,269,1.654,313,1.654,340,3.165,344,1.591,382,2.337,383,2.77,407,1.585,557,5.269,612,2.733,628,2.336,635,2.407,636,2.56,691,2.894,701,1.739,711,2.337,1056,4.668,1061,3.937,1063,4.496,1074,2.596,1077,2.894,1081,2.476,1083,2.476,1102,3.651,1589,1.782,1646,2.186,1664,3.651,1666,2.596,1670,3.254,1671,3.254,1672,2.476,1674,2.369,1675,2.733,1678,3.087,1679,3.087,1760,3.651,1762,3.165,1765,5.287,1772,5.154,1773,4.496,1775,4.158,1777,4.029,1778,3.806,1779,4.297,1803,3.806,1806,2.894,1816,4.029,1822,2.733,1906,2.894,1907,2.894,1908,2.733,1909,2.476,1910,4.158,1925,4.977,1940,3.328,1941,2.273,1958,2.186,2144,3.087,2149,3.966,2216,4.029,2218,3.651,2258,3.328,2645,3.651,2648,3.328,2649,5.33,2673,3.651,2674,3.328,2675,3.087,2676,3.087,2677,3.087,2714,3.651,2784,3.328,3028,3.651,3324,5.62,3325,3.651,3326,6.634,3327,5.766,3328,4.141,3329,5.766,3330,4.141,3331,4.141,3332,4.141,3333,4.141,3334,4.141,3335,4.141,3336,4.141,3337,4.141]],["title/modules/UsersAdminPageModule.html",[216,1.135,3338,3.255]],["body/modules/UsersAdminPageModule.html",[3,0.146,4,0.146,9,0.131,36,0.01,76,0.629,77,0.585,80,0.146,81,0.4,154,1.704,207,2.859,208,1.986,209,1.746,214,0.008,215,0.008,216,1.663,218,2.138,219,2.933,220,4.009,221,3.138,222,2.84,223,2.254,228,4.162,229,3.749,230,3.138,231,2.38,233,2.767,234,2.767,235,3.376,236,3.032,237,3.376,238,2.518,239,3.252,240,2.138,241,3.376,557,4.47,1919,4.222,3324,4.767,3338,6.746,3339,5.639,3340,5.639,3341,5.639,3342,6.136,3343,6.396,3344,5.639]],["title/modules/UsersAdminPageRoutingModule.html",[216,1.135,3342,3.052]],["body/modules/UsersAdminPageRoutingModule.html",[0,1.051,3,0.155,4,0.155,9,0.14,36,0.01,76,0.594,77,0.622,80,0.155,81,0.426,207,2.58,208,1.768,209,1.857,214,0.008,215,0.008,218,2.273,223,2.396,233,2.462,234,2.868,245,3.589,246,3.608,247,4.028,248,2.396,249,1.565,250,2,251,3.732,557,4.752,3324,5.068,3342,5.536,3344,5.995]],["title/injectables/UsersService.html",[252,0.89,1925,2.883]],["body/injectables/UsersService.html",[3,0.105,4,0.105,9,0.095,11,0.617,14,1.461,24,0.352,25,0.861,27,1.116,30,1.294,33,1.547,35,1.41,36,0.01,37,0.762,38,0.607,39,0.866,42,1.902,60,1.396,63,0.974,67,2.045,72,1.498,73,1.535,76,0.555,77,0.421,80,0.105,81,0.288,82,1.274,208,2.28,214,0.006,215,0.006,252,1.263,254,1.865,256,1.967,258,2.441,268,1.734,269,1.778,278,3.151,282,2.964,301,2.752,306,1.353,311,1.622,312,1.579,313,2.151,320,2.035,344,1.826,477,3.131,493,2.512,499,3.885,586,1.579,606,2.44,609,3.955,647,3.778,668,1.981,725,2.751,756,2.261,757,4.331,763,4.612,765,3.554,774,4.619,784,3.04,1090,3.43,1092,4.625,1093,3.545,1112,2.632,1155,3.544,1162,6.61,1164,3.216,1211,4.619,1246,5.223,1247,4.619,1339,3.545,1415,4.115,1546,3.698,1686,3.705,1689,5.588,1697,4.091,1925,4.949,1941,2.526,3297,3.698,3345,4.057,3346,6.198,3347,6.198,3348,6.198,3349,6.198,3350,4.602,3351,6.198,3352,4.602,3353,4.602,3354,6.198,3355,4.602,3356,4.602,3357,4.602,3358,6.198,3359,4.602,3360,4.602,3361,4.602,3362,4.602,3363,6.198,3364,4.602]],["title/injectables/VoteService.html",[252,0.89,1771,3.255]],["body/injectables/VoteService.html",[3,0.117,4,0.117,9,0.105,11,0.598,24,0.391,25,0.923,27,1.196,30,1.067,33,1.496,35,1.329,36,0.01,37,0.698,38,0.597,39,0.816,42,1.982,60,1.272,63,1.175,76,0.554,77,0.467,80,0.117,81,0.32,82,1.201,83,2.922,131,1.955,169,2.846,202,1.733,214,0.007,215,0.007,249,1.529,252,1.354,254,2.071,256,2.108,268,1.859,269,1.905,276,1.769,282,2.941,286,4.641,306,1.503,311,1.8,312,1.753,320,2.031,477,3.529,493,2.692,546,2.825,606,2.615,609,4.073,668,2.199,725,3.054,748,2.611,831,2.597,931,2.133,950,5.337,1093,3.799,1112,2.922,1146,5.924,1184,4.384,1516,2.015,1686,3.971,1771,5.824,1776,4.504,1862,4.504,1863,4.504,1864,4.504,1866,4.504,1868,4.105,1869,4.504,3181,4.504,3365,4.504,3366,6.642,3367,6.642,3368,5.109,3369,6.642,3370,6.642,3371,5.109,3372,6.642,3373,8.1,3374,6.642,3375,6.642,3376,5.109,3377,5.109,3378,5.109,3379,5.109,3380,5.109,3381,5.109,3382,5.109,3383,5.109,3384,5.109,3385,5.109,3386,5.109,3387,5.109,3388,5.109,3389,5.109,3390,5.109,3391,6.642,3392,7.38,3393,5.109]],["title/coverage.html",[3394,5.273]],["body/coverage.html",[0,1.388,1,1.309,9,0.083,10,3.545,14,0.638,32,2.3,36,0.01,38,0.296,67,1.02,78,3.947,81,0.497,157,1.344,161,1.344,163,1.344,165,1.309,168,1.38,169,1.309,171,1.344,173,1.309,175,1.276,177,1.344,180,1.309,182,1.309,185,1.344,186,0.819,187,1.344,188,1.309,190,1.344,191,1.309,193,1.344,194,1.213,195,1.309,197,1.309,199,1.309,201,1.38,202,0.86,203,1.344,204,1.309,206,1.344,207,1.309,211,1.309,214,0.006,215,0.006,252,1.805,253,1.972,255,3.545,266,2.3,270,2.809,307,4.209,329,3.545,354,2.654,355,1.679,445,5.69,457,2.997,460,2.654,463,2.997,470,2.122,472,2.997,474,2.997,475,2.654,477,1.679,479,2.52,482,2.809,485,2.997,487,3.547,494,3.231,502,3.231,504,3.231,506,3.231,524,2.997,526,2.997,557,2.809,577,3.545,578,3.231,579,3.545,666,3.947,704,3.947,706,3.545,734,2.52,743,3.545,798,2.3,800,2.3,802,3.231,803,3.545,832,1.679,833,2.224,834,1.73,835,1.679,837,1.73,839,1.583,840,1.679,854,1.344,940,2.654,941,3.545,984,4.539,1026,3.545,1050,2.122,1052,3.231,1053,2.997,1054,3.545,1086,4.866,1087,3.545,1111,2.654,1170,1.325,1171,2.3,1173,5.277,1218,2.809,1499,3.231,1500,4.539,1558,1.583,1570,4.539,1571,1.244,1584,1.844,1585,3.939,1591,1.844,1596,1.73,1599,1.844,1607,1.785,1616,1.844,1624,3.545,1633,4.539,1634,3.231,1635,4.948,1684,2.997,1685,3.545,1693,2.52,1761,3.545,1771,2.997,1811,3.231,1813,2.654,1921,3.545,1925,2.654,1926,2.52,1938,3.947,1939,2.809,1941,3.1,1958,4.918,1994,3.545,2021,3.545,2058,3.231,2099,3.545,2100,3.231,2101,4.539,2153,3.545,2241,3.545,2249,3.545,2252,3.545,2254,2.809,2256,3.545,2292,3.231,2293,3.545,2336,3.545,2345,4.539,2348,3.231,2349,3.545,2387,4.539,2388,4.209,2389,4.539,2395,3.231,2495,4.539,2510,5.756,2650,3.545,2657,3.231,2678,3.545,2723,4.539,2755,2.997,2786,3.545,2787,3.545,2872,3.545,2873,3.231,2874,3.545,2918,3.545,2919,3.231,2950,3.545,2980,3.545,3048,3.231,3049,3.231,3064,3.231,3067,3.545,3090,4.866,3091,3.545,3115,3.231,3136,3.545,3138,4.539,3163,3.545,3233,3.545,3294,3.545,3296,3.231,3298,3.545,3299,3.545,3323,3.545,3324,2.997,3325,3.545,3345,3.545,3365,3.545,3394,3.545,3395,4.021,3396,4.021,3397,6.529,3398,5.648,3399,8.445,3400,8.786,3401,3.545,3402,8.11,3403,7.081,3404,7.46,3405,6.529,3406,7.46,3407,7.735,3408,6.529,3409,5.648,3410,7.46,3411,7.081,3412,4.021,3413,4.021,3414,4.021,3415,4.021,3416,6.529,3417,4.021,3418,5.648,3419,4.021,3420,4.021,3421,4.021,3422,4.021,3423,4.021,3424,4.021,3425,4.021,3426,4.021,3427,6.529,3428,4.021,3429,4.021,3430,4.021,3431,4.021,3432,4.021,3433,4.021,3434,4.021,3435,4.021,3436,3.545,3437,3.545,3438,4.021,3439,4.021]],["title/dependencies.html",[219,2.411,3440,3.206]],["body/dependencies.html",[36,0.01,68,5.769,77,0.598,214,0.008,215,0.008,219,2.997,236,3.098,238,2.573,240,2.184,248,2.303,306,1.922,448,6.824,468,5.769,469,4.871,493,2.649,511,4.871,1012,5.762,1805,4.314,2081,5.762,3441,6.536,3442,8.982,3443,6.536,3444,6.536,3445,6.536,3446,6.536,3447,6.536,3448,6.536,3449,6.536,3450,8.703,3451,6.536,3452,6.536,3453,6.536,3454,6.536,3455,6.536,3456,7.741,3457,6.536,3458,6.536,3459,6.536,3460,6.536,3461,6.536,3462,6.536,3463,6.536,3464,6.536,3465,6.536]],["title/miscellaneous/functions.html",[3466,2.401,3467,4.636]],["body/miscellaneous/functions.html",[11,0.655,24,0.44,32,3.284,35,1.542,36,0.009,37,0.809,38,0.631,39,0.947,40,4.277,46,2.023,57,1.321,59,4.516,63,1.219,70,1.815,214,0.007,215,0.007,250,1.689,253,4.34,257,5.289,265,2.987,266,4.458,269,2.582,355,2.397,445,4.613,451,7.399,453,5.98,460,3.789,470,3.03,474,5.332,477,3.573,486,6.744,487,3.924,488,5.018,489,4.277,490,5.144,491,5.144,492,3.068,493,3.468,494,5.749,502,5.749,504,5.749,506,5.749,666,4.012,748,1.919,946,3.599,952,5.061,954,4.613,972,3.391,984,5.749,993,5.061,1011,5.061,1013,5.061,1799,5.445,1813,4.722,3401,5.061,3466,3.789,3467,5.061,3468,8.158,3469,5.741,3470,5.741,3471,5.741,3472,5.741,3473,5.741,3474,5.741,3475,5.741,3476,5.741,3477,5.741,3478,5.741]],["title/index.html",[24,0.278,3479,3.637,3480,3.637]],["body/index.html",[19,2.006,36,0.008,46,2.674,133,3.469,178,1.386,208,1.643,209,1.726,214,0.008,215,0.008,332,4.385,333,4.385,338,4.45,340,4.462,368,4.088,372,4.172,387,5.08,393,4.711,406,5.235,411,3.616,518,3.616,533,4.172,568,5.573,573,5.366,687,5.08,693,4.711,917,6.026,2198,5.573,3189,5.573,3196,5.573,3222,5.573,3265,6.689,3481,7.588,3482,6.321,3483,6.321,3484,6.321,3485,6.321,3486,6.321,3487,6.321,3488,8.131,3489,8.131,3490,7.588,3491,6.321,3492,6.321,3493,6.321,3494,8.131,3495,6.321,3496,6.321,3497,6.321,3498,6.321,3499,6.321,3500,6.321,3501,6.321,3502,6.321,3503,6.321,3504,6.321,3505,6.321,3506,6.321,3507,6.321,3508,6.321,3509,7.588,3510,6.321,3511,6.321,3512,6.321,3513,6.321,3514,6.321,3515,6.321,3516,6.321,3517,6.321,3518,6.321,3519,6.321,3520,6.321,3521,6.321]],["title/modules.html",[218,1.999]],["body/modules.html",[36,0.008,68,6.791,214,0.008,215,0.008,217,4.728,218,2.12,227,4.433,228,3.007,439,4.728,444,4.433,994,6.767,1912,4.728,1916,4.433,1984,4.728,1989,4.433,2233,4.728,2237,4.433,2715,4.728,2719,4.433,2972,4.728,2976,4.433,3029,4.728,3033,4.433,3082,4.728,3086,4.433,3286,4.728,3290,4.433,3338,4.728,3342,4.433,3522,9.112,3523,9.112,3524,9.288,3525,9.079]],["title/overview.html",[3526,5.273]],["body/overview.html",[1,2.252,2,1.581,36,0.01,124,1.992,133,3.344,154,1.195,157,1.499,161,2.735,163,2.735,165,2.665,168,2.808,171,2.735,173,2.252,175,2.597,177,2.735,180,2.252,182,2.665,185,2.735,187,2.735,188,2.252,190,2.735,193,2.735,195,2.252,197,2.252,199,2.252,201,2.808,203,2.735,204,2.252,206,2.735,207,2.252,211,2.665,214,0.006,215,0.006,216,1.166,217,6.207,218,1.499,219,2.057,220,2.201,221,2.201,222,1.992,223,1.581,224,3.955,225,3.955,226,3.955,227,4.834,228,4.411,229,2.989,230,2.201,231,1.67,246,1.931,254,1.819,439,6.292,440,3.955,441,3.955,442,3.955,443,3.955,444,4.834,705,3.605,734,2.813,1172,1.424,1569,2.567,1912,6.207,1913,3.955,1914,3.955,1915,3.955,1916,4.834,1984,6.292,1985,3.955,1986,3.955,1987,3.955,1988,3.955,1989,4.834,2233,6.207,2234,3.955,2235,3.955,2236,3.955,2237,4.834,2254,5.719,2565,3.344,2715,6.207,2716,3.955,2717,3.955,2718,3.955,2719,4.834,2972,6.207,2973,3.955,2974,3.955,2975,3.955,2976,4.834,3029,6.207,3030,3.955,3031,3.955,3032,3.955,3033,4.834,3038,3.955,3039,3.955,3040,3.955,3082,5.964,3083,3.955,3084,3.955,3085,3.955,3086,4.834,3286,6.207,3287,3.955,3288,3.955,3289,3.955,3290,4.834,3338,6.207,3339,3.955,3340,3.955,3341,3.955,3342,4.834,3526,3.955,3527,4.487,3528,4.487,3529,4.487,3530,4.487,3531,4.487]],["title/classes/playerNotFoundException.html",[81,0.273,2755,3.255]],["body/classes/playerNotFoundException.html",[3,0.101,4,0.101,9,0.091,11,0.338,14,0.7,25,0.613,27,0.795,30,0.922,36,0.01,37,0.648,42,1.74,60,1.327,63,0.613,67,2.067,76,0.578,77,0.404,80,0.138,81,0.377,82,1.327,85,2.013,166,2.062,186,1.863,214,0.006,215,0.006,249,1.016,252,1.228,256,1.4,258,1.962,268,1.235,269,1.266,276,1.605,278,3.063,282,2.869,301,1.96,306,1.298,311,1.555,312,1.514,313,2.114,320,2.266,344,1.661,433,2.329,477,2.515,479,3.776,481,2.766,487,2.024,493,3.127,499,2.766,501,2.913,543,2.537,605,1.843,606,1.738,609,3.365,647,3.379,668,2.593,711,1.789,756,1.331,763,2.524,765,2.856,784,2.165,799,2.524,808,3.306,831,3.063,842,3.289,852,3.976,860,2.244,865,3.084,867,2.913,931,1.205,1032,2.244,1038,2.524,1043,4.3,1044,2.422,1092,3.976,1093,2.524,1112,2.524,1155,3.464,1171,4.216,1196,3.084,1201,4.864,1203,2.913,1238,3.084,1239,3.084,1339,2.524,1348,4.3,1415,2.422,1416,3.084,1430,2.638,1431,2.638,1569,2.524,1592,1.96,1617,1.843,1686,2.638,1689,3.289,1697,2.913,1698,3.289,1754,4.49,1822,2.913,1889,3.765,1926,3.776,2082,3.546,2088,3.546,2090,3.546,2496,3.924,2707,4.793,2723,3.546,2725,3.89,2731,4.841,2733,3.89,2736,3.89,2739,3.89,2741,3.89,2743,3.89,2745,3.89,2749,3.546,2750,3.546,2751,3.546,2752,5.311,2753,5.311,2754,5.311,2755,4.49,2756,3.89,2757,3.89,2758,3.89,2759,3.89,2760,3.89,2761,3.89,2762,3.89,2763,3.89,2764,5.512,2765,6.047,2766,5.512,2767,3.89,2768,3.89,2769,3.89,2770,3.89,2771,3.89,2772,3.89,2773,3.89,2774,3.89,2775,3.89,2776,3.89,2777,3.89,2778,3.89,2779,5.311,2780,5.311,2781,3.89,2782,3.89,2783,3.89,2784,3.546,2785,3.89]],["title/properties.html",[25,0.731,3440,3.206]],["body/properties.html",[11,0.543,25,0.986,36,0.009,175,2.252,214,0.008,215,0.008,2251,6.256,3532,7.097,3533,8.12,3534,6.256,3535,7.097,3536,7.097,3537,7.097]],["title/routes.html",[246,2.575]],["body/routes.html",[36,0.009,214,0.009,215,0.009,246,3.112]],["title/miscellaneous/typealiases.html",[3466,2.401,3538,5.259]],["body/miscellaneous/typealiases.html",[14,1.079,24,0.521,36,0.008,38,0.648,57,1.256,63,0.945,208,1.768,214,0.008,215,0.008,283,3.119,492,3.301,639,2.158,769,2.678,835,2.839,836,3.518,838,3.518,840,2.839,1049,3.89,1050,3.589,1290,2.678,1571,2.104,1585,3.118,1605,3.96,1606,3.633,1607,3.02,2058,5.465,2073,6.985,3296,5.465,3297,6.366,3466,4.489,3539,6.801,3540,6.801,3541,6.801,3542,8.384]],["title/miscellaneous/variables.html",[3466,2.401,3543,4.636]],["body/miscellaneous/variables.html",[0,0.784,19,2.564,24,0.388,36,0.01,38,0.542,44,2.783,57,0.936,59,4.112,70,2.05,72,1.777,73,1.82,182,2.152,214,0.007,215,0.007,276,1.761,307,6.377,345,3.36,407,2.814,490,5.142,493,3.711,512,3.543,518,4.74,560,4.618,605,3.07,643,5.444,649,4.926,650,3.178,687,5.311,720,4.143,746,5.138,854,2.209,931,2.383,946,3.178,997,5.908,1035,3.347,1055,4.47,1176,5.469,1177,3.347,1185,2.329,1217,5.646,1385,4.926,1752,5.826,1794,2.578,2019,4.926,2162,5.826,2387,4.074,2388,3.779,2389,5.311,2395,5.311,2453,4.074,2454,5.311,2455,4.47,2456,4.47,2457,4.47,2458,4.074,2459,4.074,2831,5.311,3436,4.47,3437,4.47,3466,3.347,3534,7.123,3543,4.47,3544,5.07,3545,5.07,3546,5.07,3547,6.609,3548,8.285,3549,6.609,3550,6.609,3551,6.609,3552,5.07,3553,6.609,3554,6.609,3555,7.353,3556,5.07,3557,5.07,3558,6.609,3559,6.609,3560,6.609,3561,6.609,3562,5.07,3563,6.609,3564,6.609,3565,7.791,3566,7.353,3567,7.353,3568,5.07,3569,6.609,3570,6.609,3571,6.609,3572,6.609,3573,6.609,3574,6.609,3575,5.07,3576,5.07,3577,5.07,3578,6.609,3579,6.609]]],"invertedIndex":[["",{"_index":36,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"injectables/MappingService.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/playerNotFoundException.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":131,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthStrapiService.html":{},"components/ErrorModalComponent.html":{},"classes/FirebaseMediaService.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"injectables/VoteService.html":{}}}],["0.0.1",{"_index":3532,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":1950,"title":{},"body":{"components/HomePage.html":{}}}],["0.13.0",{"_index":3465,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1682,"title":{},"body":{"components/GameInfoComponent.html":{}}}],["0.3s",{"_index":151,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["0.5",{"_index":2178,"title":{},"body":{"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{}}}],["0.6",{"_index":2151,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["0.8rem",{"_index":2152,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["0/100",{"_index":2231,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["000",{"_index":2645,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/UsersAdminPage.html":{}}}],["005625",{"_index":3028,"title":{},"body":{"components/SettingsPage.html":{},"components/UsersAdminPage.html":{}}}],["009a44",{"_index":2144,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{},"components/TeamInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["00e61b678775",{"_index":2819,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["03ca5a",{"_index":2145,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["1",{"_index":133,"title":{"interfaces/StrapiExtendedUser-1.html":{}},"body":{"components/AboutPage.html":{},"components/PlayerDetailComponent.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"index.html":{},"overview.html":{}}}],["1.0",{"_index":1949,"title":{},"body":{"components/HomePage.html":{}}}],["1.2rem",{"_index":142,"title":{},"body":{"components/AboutPage.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/PlayerDetailComponent.html":{}}}],["1.5rem",{"_index":119,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["1/1",{"_index":3399,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2862,"title":{},"body":{"directives/PositionImageDirective.html":{},"components/TeamsPage.html":{}}}],["10.7.2",{"_index":3459,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":3411,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1958,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{}}}],["1000",{"_index":1822,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{},"classes/playerNotFoundException.html":{}}}],["100px",{"_index":1667,"title":{},"body":{"components/GameInfoComponent.html":{},"components/HomePage.html":{}}}],["100vh",{"_index":2202,"title":{},"body":{"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterPage.html":{}}}],["10px",{"_index":2149,"title":{},"body":{"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["10vh",{"_index":2654,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["11/11",{"_index":3405,"title":{},"body":{"coverage.html":{}}}],["11/13",{"_index":3431,"title":{},"body":{"coverage.html":{}}}],["12/12",{"_index":3413,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":3415,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":2212,"title":{},"body":{"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterPage.html":{}}}],["12px",{"_index":3319,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["13ae9677ce28",{"_index":2867,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["14/16",{"_index":3417,"title":{},"body":{"coverage.html":{}}}],["15.0.0",{"_index":3457,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":3412,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":2652,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/UserInfoComponent.html":{}}}],["15px",{"_index":1962,"title":{},"body":{"components/HomePage.html":{}}}],["16.0.0",{"_index":3442,"title":{},"body":{"dependencies.html":{}}}],["16.2.12",{"_index":3444,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":1664,"title":{},"body":{"components/GameInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["173f4gxfj4",{"_index":3579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18/18",{"_index":3408,"title":{},"body":{"coverage.html":{}}}],["18px",{"_index":2208,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["19",{"_index":3529,"title":{},"body":{"overview.html":{}}}],["19/21",{"_index":3428,"title":{},"body":{"coverage.html":{}}}],["19/23",{"_index":3433,"title":{},"body":{"coverage.html":{}}}],["1941039.png?alt=media&token=587d6ce6",{"_index":2826,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["1:953186845113:web:a60b0796e386cb700e3668",{"_index":3572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":2204,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["1rem",{"_index":1672,"title":{},"body":{"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["2",{"_index":124,"title":{},"body":{"components/AboutPage.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{},"overview.html":{}}}],["2.3.0",{"_index":3463,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":114,"title":{},"body":{"components/AboutPage.html":{},"components/TeamInfoComponent.html":{}}}],["2/2",{"_index":3406,"title":{},"body":{"coverage.html":{}}}],["20/21",{"_index":3424,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":2180,"title":{},"body":{"components/LoginPage.html":{},"components/SettingsPage.html":{}}}],["200px",{"_index":3025,"title":{},"body":{"components/SettingsPage.html":{}}}],["20px",{"_index":1911,"title":{},"body":{"components/GamesPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["20vw",{"_index":2483,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["23",{"_index":3527,"title":{},"body":{"overview.html":{}}}],["24",{"_index":3528,"title":{},"body":{"overview.html":{}}}],["24px",{"_index":2207,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["255",{"_index":2150,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["26/27",{"_index":3426,"title":{},"body":{"coverage.html":{}}}],["2618",{"_index":2816,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["27",{"_index":3530,"title":{},"body":{"overview.html":{}}}],["2745168.png?alt=media&token=5817cc45",{"_index":2815,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["28/49",{"_index":3420,"title":{},"body":{"coverage.html":{}}}],["2c20",{"_index":2843,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["2e62b27f79e7",{"_index":2841,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["2px",{"_index":2639,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["2rem",{"_index":1673,"title":{},"body":{"components/GameInfoComponent.html":{},"components/PlayerDetailComponent.html":{}}}],["3",{"_index":2561,"title":{},"body":{"components/PlayerDetailComponent.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{}}}],["3/3",{"_index":3400,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":2177,"title":{},"body":{"components/LoginPage.html":{}}}],["3000",{"_index":1946,"title":{},"body":{"components/HomePage.html":{}}}],["300px",{"_index":1966,"title":{},"body":{"components/HomePage.html":{},"components/PictureSelectableComponent.html":{}}}],["30px",{"_index":2641,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{}}}],["30vh",{"_index":3157,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["31",{"_index":3531,"title":{},"body":{"overview.html":{}}}],["350px",{"_index":2209,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["378b",{"_index":2821,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["3d13",{"_index":2827,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["3em",{"_index":702,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["3rem",{"_index":690,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["4",{"_index":2562,"title":{},"body":{"components/PlayerDetailComponent.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{}}}],["4/4",{"_index":3409,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":2640,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/SettingsPage.html":{}}}],["408b",{"_index":2839,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["40ad",{"_index":2865,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["40px",{"_index":3162,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["42d6",{"_index":2834,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["4379",{"_index":2849,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["4384",{"_index":2817,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["439f",{"_index":2859,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["4440",{"_index":2828,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["4485",{"_index":2450,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["461b",{"_index":2844,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["46e9",{"_index":2822,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["46ef",{"_index":2838,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["479a",{"_index":2854,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["486238a92c6c",{"_index":2861,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["4e52",{"_index":2848,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["4px",{"_index":1680,"title":{},"body":{"components/GameInfoComponent.html":{}}}],["4vw",{"_index":1907,"title":{},"body":{"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["5",{"_index":2563,"title":{},"body":{"components/PlayerDetailComponent.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/TeamInfoComponent.html":{}}}],["5.0.6",{"_index":3450,"title":{},"body":{"dependencies.html":{}}}],["5.5.1",{"_index":3448,"title":{},"body":{"dependencies.html":{}}}],["5.6.0",{"_index":3452,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":3402,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":3435,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":3422,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":110,"title":{},"body":{"components/AboutPage.html":{},"components/GameInfoComponent.html":{},"components/HomePage.html":{},"directives/PositionImageDirective.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["500",{"_index":425,"title":{},"body":{"components/AppComponent.html":{}}}],["5005428.png?alt=media&token=4f387627",{"_index":2832,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["5005447.png?alt=media&token=3f4eb468",{"_index":2837,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["500px",{"_index":2206,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["50px",{"_index":1908,"title":{},"body":{"components/GamesPage.html":{},"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["54549.png?alt=media&token=c39eff19",{"_index":2847,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["57",{"_index":3419,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":132,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["5vh",{"_index":1906,"title":{},"body":{"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["6",{"_index":2564,"title":{},"body":{"components/PlayerDetailComponent.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{}}}],["6/6",{"_index":3404,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2147,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["600px",{"_index":1980,"title":{},"body":{"components/HomePage.html":{}}}],["60f7",{"_index":2833,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["60px",{"_index":3027,"title":{},"body":{"components/SettingsPage.html":{}}}],["643797.png?alt=media&token=485f3826",{"_index":2852,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["666",{"_index":3337,"title":{},"body":{"components/UsersAdminPage.html":{}}}],["6d22",{"_index":2449,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["7",{"_index":2565,"title":{},"body":{"components/PlayerDetailComponent.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"overview.html":{}}}],["7.0.0",{"_index":3456,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":3461,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":3407,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":3418,"title":{},"body":{"coverage.html":{}}}],["70px",{"_index":2871,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["71",{"_index":3421,"title":{},"body":{"coverage.html":{}}}],["778a81145809",{"_index":2836,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["7e4d32",{"_index":1910,"title":{},"body":{"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["8",{"_index":975,"title":{},"body":{"injectables/CsvService.html":{},"classes/PasswordValidation.html":{},"components/PlayerDetailComponent.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{}}}],["8.0.0",{"_index":3458,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":3429,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":3403,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2650,"title":{},"body":{"components/PlayerDetailComponent.html":{},"coverage.html":{}}}],["80vh",{"_index":2494,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["82",{"_index":3432,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":3434,"title":{},"body":{"coverage.html":{}}}],["83bf",{"_index":2845,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["84",{"_index":3430,"title":{},"body":{"coverage.html":{}}}],["857d",{"_index":2850,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["868d",{"_index":2835,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["87",{"_index":3416,"title":{},"body":{"coverage.html":{}}}],["8c95",{"_index":2451,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["8e91",{"_index":2823,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["8px",{"_index":1665,"title":{},"body":{"components/GameInfoComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/TeamInfoComponent.html":{}}}],["9",{"_index":2566,"title":{},"body":{"components/PlayerDetailComponent.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{}}}],["9/10",{"_index":3398,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":3410,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":3397,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":3414,"title":{},"body":{"coverage.html":{}}}],["94e1",{"_index":2855,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["95",{"_index":3423,"title":{},"body":{"coverage.html":{}}}],["953186845113",{"_index":3570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96",{"_index":3425,"title":{},"body":{"coverage.html":{}}}],["97ed7c211bdd",{"_index":2856,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["983d",{"_index":2860,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["9]*\\.?[0",{"_index":2333,"title":{},"body":{"classes/NumericValidator.html":{}}}],["9]{0,2",{"_index":2334,"title":{},"body":{"classes/NumericValidator.html":{}}}],["9a",{"_index":2379,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["9a6c",{"_index":2840,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["9cdc",{"_index":2864,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["_",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"injectables/TeamService.html":{}}}],["_`\\[\\]]{8",{"_index":2380,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["_app",{"_index":1229,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_auth",{"_index":1231,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_blank",{"_index":91,"title":{},"body":{"components/AboutPage.html":{}}}],["_credentials",{"_index":853,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["_credentials).subscribe",{"_index":859,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["_db",{"_index":1230,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_extended_user",{"_index":878,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["_game",{"_index":1840,"title":{},"body":{"components/GamesPage.html":{}}}],["_games",{"_index":1242,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{}}}],["_headers",{"_index":2053,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["_headers.set('accept",{"_index":2055,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["_info",{"_index":871,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["_info).subscribe",{"_index":877,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["_info.uuid",{"_index":1139,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["_isadmin",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_islogged",{"_index":1236,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_isowner",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_logged",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["_modal",{"_index":2529,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["_picture",{"_index":2399,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["_player",{"_index":2580,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{}}}],["_player.imageurl",{"_index":2588,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["_player.imageurl.tostring",{"_index":2591,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["_player.positions.foreach(position",{"_index":2595,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["_player.uuid",{"_index":2592,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["_players",{"_index":1238,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["_team",{"_index":3253,"title":{},"body":{"components/TeamsPage.html":{}}}],["_teams",{"_index":1240,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/TeamService.html":{}}}],["_user",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_username",{"_index":583,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["_users",{"_index":1246,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["_votes",{"_index":1244,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_webstorage",{"_index":1232,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["a.match(regex",{"_index":3274,"title":{},"body":{"components/TeamsPage.html":{}}}],["abajo",{"_index":1965,"title":{},"body":{"components/HomePage.html":{}}}],["about'},{'name",{"_index":160,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["about.description'|translate",{"_index":93,"title":{},"body":{"components/AboutPage.html":{}}}],["about.description\\'|translate",{"_index":159,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page",{"_index":242,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{}}}],["about.page.html",{"_index":23,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":21,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["aboutpagemodule",{"_index":217,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules.html":{},"overview.html":{}}}],["aboutpageroutingmodule",{"_index":227,"title":{"modules/AboutPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["above",{"_index":3155,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["absolute",{"_index":1675,"title":{},"body":{"components/GameInfoComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["abstract",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{}}}],["abstractcontrol",{"_index":2316,"title":{},"body":{"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{}}}],["acc",{"_index":3393,"title":{},"body":{"injectables/VoteService.html":{}}}],["acc[teamname",{"_index":3392,"title":{},"body":{"injectables/VoteService.html":{}}}],["accept",{"_index":291,"title":{},"body":{"injectables/ApiService.html":{}}}],["acceso",{"_index":1065,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["access",{"_index":742,"title":{},"body":{"guards/AuthGuard.html":{}}}],["accessing",{"_index":2162,"title":{},"body":{"components/LoginPage.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":2106,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{},"directives/PositionImageDirective.html":{},"components/SettingsPage.html":{}}}],["acción",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["accordingly",{"_index":1278,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{}}}],["action",{"_index":620,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/PlayerDetailComponent.html":{}}}],["activada",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["activated",{"_index":146,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"guards/OwnerGuard.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["activatedroute",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/SplashPage.html":{}}}],["activatedroutesnapshot",{"_index":716,"title":{},"body":{"guards/AuthGuard.html":{},"guards/OwnerGuard.html":{}}}],["activates",{"_index":1929,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["activatevibrationwithoptions",{"_index":1924,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["activating",{"_index":1954,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["actual",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["actual_component",{"_index":213,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["actualiza",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{}}}],["actualización",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TeamService.html":{}}}],["actualizar",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TeamService.html":{}}}],["adapta",{"_index":2226,"title":{},"body":{"components/LoginPage.html":{}}}],["add",{"_index":1415,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"injectables/PlayersService.html":{},"components/PositionSelectorComponent.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["adddoc",{"_index":1193,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adddoc(collectionref",{"_index":1328,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["added",{"_index":1698,"title":{},"body":{"injectables/GameService.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{}}}],["addgame",{"_index":1687,"title":{},"body":{"injectables/GameService.html":{}}}],["addgame(game",{"_index":1695,"title":{},"body":{"injectables/GameService.html":{}}}],["adding",{"_index":1002,"title":{},"body":{"injectables/CustomTranslateService.html":{},"components/GamesPage.html":{}}}],["additional",{"_index":1416,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["addplayer",{"_index":2724,"title":{},"body":{"injectables/PlayersService.html":{}}}],["addplayer(player",{"_index":2733,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["addposition",{"_index":2881,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["addposition(position",{"_index":2887,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["address",{"_index":1403,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adds",{"_index":1697,"title":{},"body":{"injectables/GameService.html":{},"injectables/PlayersService.html":{},"components/PositionSelectorComponent.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["addteam",{"_index":3164,"title":{},"body":{"injectables/TeamService.html":{}}}],["addteam(team",{"_index":3169,"title":{},"body":{"injectables/TeamService.html":{}}}],["adduser",{"_index":3346,"title":{},"body":{"injectables/UsersService.html":{}}}],["adduser(user",{"_index":3349,"title":{},"body":{"injectables/UsersService.html":{}}}],["adjust",{"_index":3333,"title":{},"body":{"components/UsersAdminPage.html":{}}}],["admin",{"_index":209,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"interfaces/User.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"index.html":{}}}],["admin.module').then(m",{"_index":558,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["admin.module.ts",{"_index":3343,"title":{},"body":{"modules/UsersAdminPageModule.html":{}}}],["admin.page",{"_index":3344,"title":{},"body":{"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{}}}],["admin.page.html",{"_index":3327,"title":{},"body":{"components/UsersAdminPage.html":{}}}],["admin.page.scss",{"_index":3326,"title":{},"body":{"components/UsersAdminPage.html":{}}}],["admin.page.ts",{"_index":3325,"title":{},"body":{"components/UsersAdminPage.html":{},"coverage.html":{}}}],["admin.page.ts:19",{"_index":3329,"title":{},"body":{"components/UsersAdminPage.html":{}}}],["admin.page.ts:29",{"_index":3331,"title":{},"body":{"components/UsersAdminPage.html":{}}}],["admin.page.ts:37",{"_index":3330,"title":{},"body":{"components/UsersAdminPage.html":{}}}],["admin/users",{"_index":557,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"coverage.html":{}}}],["administrador",{"_index":3520,"title":{},"body":{"index.html":{}}}],["admins",{"_index":3521,"title":{},"body":{"index.html":{}}}],["ae01",{"_index":2866,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["afterlogin",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["again",{"_index":2187,"title":{},"body":{"components/LoginPage.html":{}}}],["against",{"_index":2373,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["age",{"_index":3295,"title":{},"body":{"interfaces/Trainer.html":{}}}],["agregar",{"_index":3214,"title":{},"body":{"injectables/TeamService.html":{}}}],["aizasybchnuxndvvrvb2wznqycwtlpoykul13i8",{"_index":3554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["al",{"_index":2227,"title":{},"body":{"components/LoginPage.html":{},"pipes/NamePipe.html":{},"components/RegisterPage.html":{},"injectables/TeamService.html":{}}}],["alias",{"_index":1605,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":3539,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":104,"title":{},"body":{"components/AboutPage.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["allkeys",{"_index":1871,"title":{},"body":{"components/GamesPage.html":{},"components/TeamsPage.html":{}}}],["allkeys.add(key",{"_index":1874,"title":{},"body":{"components/GamesPage.html":{},"components/TeamsPage.html":{}}}],["allowed",{"_index":1408,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["allowing",{"_index":2331,"title":{},"body":{"classes/NumericValidator.html":{}}}],["allows",{"_index":2457,"title":{},"body":{"components/PictureSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["allplayers.filter(player",{"_index":3193,"title":{},"body":{"injectables/TeamService.html":{}}}],["allpositions",{"_index":2515,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["almacenar",{"_index":3212,"title":{},"body":{"injectables/TeamService.html":{}}}],["already",{"_index":1396,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alternative",{"_index":1608,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["alternativetext",{"_index":1609,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["alto",{"_index":3318,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["altura",{"_index":2228,"title":{},"body":{"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{}}}],["amatch",{"_index":3273,"title":{},"body":{"components/TeamsPage.html":{}}}],["amatch[1",{"_index":3277,"title":{},"body":{"components/TeamsPage.html":{}}}],["analytics",{"_index":3574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["analyze",{"_index":3576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ancho",{"_index":3316,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["android",{"_index":3508,"title":{},"body":{"index.html":{}}}],["angular",{"_index":46,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"injectables/CustomTranslateService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"classes/NumericValidator.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["angular's",{"_index":2022,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["angular/animations",{"_index":3441,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3443,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":3051,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/common",{"_index":236,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/GamesPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"interfaces/Player.html":{},"modules/PlayersPageModule.html":{},"interfaces/Position.html":{},"modules/RegisterPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersAdminPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"injectables/HttpClientWebProvider.html":{},"modules/SharedModule.html":{}}}],["angular/compiler",{"_index":3445,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":77,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"injectables/PlayersService.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"dependencies.html":{},"classes/playerNotFoundException.html":{}}}],["angular/forms",{"_index":238,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/GamesPageModule.html":{},"modules/HomePageModule.html":{},"components/LoginFormComponent.html":{},"modules/LoginPageModule.html":{},"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"modules/PlayersPageModule.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"modules/RegisterPageModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersAdminPageModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":248,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthStrapiService.html":{},"modules/GamesPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"guards/OwnerGuard.html":{},"components/PlayersPage.html":{},"modules/PlayersPageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"dependencies.html":{}}}],["anonymously",{"_index":1379,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["antes",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"injectables/TeamService.html":{}}}],["api",{"_index":59,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AuthStrapiService.html":{},"components/LoginPage.html":{},"directives/PositionImageDirective.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["api.service",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/DataService.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{}}}],["apikey",{"_index":3553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiservice",{"_index":253,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/DataService.html":{},"components/PlayerInfoComponent.html":{},"directives/PositionImageDirective.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apisvc",{"_index":810,"title":{},"body":{"injectables/AuthStrapiService.html":{},"components/PlayerInfoComponent.html":{},"classes/StrapiMediaService.html":{}}}],["apiurl",{"_index":3549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aplicación",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["app",{"_index":19,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["appbarbackground",{"_index":689,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["appcomponent",{"_index":161,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":3571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":643,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/FirebaseMappingService.html":{},"components/SettingsPage.html":{},"classes/StrapiMappingService.html":{},"miscellaneous/variables.html":{}}}],["application/x",{"_index":2056,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["applied",{"_index":2795,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["applies",{"_index":2803,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["apply",{"_index":2804,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["applybackgroundimage",{"_index":2788,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["applybackgroundimage(url",{"_index":2801,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["appmodule",{"_index":439,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":444,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apptoolbarcomponent",{"_index":163,"title":{"components/AppToolbarComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["aresetsequal",{"_index":2518,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["aresetsequal(seta",{"_index":2531,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["array",{"_index":913,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"interfaces/Position.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/SettingsPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{}}}],["array.from(allkeys",{"_index":1875,"title":{},"body":{"components/GamesPage.html":{}}}],["array.from(allkeys).filter(key",{"_index":3268,"title":{},"body":{"components/TeamsPage.html":{}}}],["array.from(this.inputpositions",{"_index":2899,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["array.isarray(team.players",{"_index":1468,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["arrays",{"_index":918,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["arriba",{"_index":1964,"title":{},"body":{"components/HomePage.html":{}}}],["aspecto",{"_index":3322,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["assets/i18n",{"_index":1015,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["assets/imgs/unknown.png",{"_index":3306,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["assets/positions/${positionid}.png",{"_index":2671,"title":{},"body":{"components/PlayerInfoComponent.html":{}}}],["assign",{"_index":1333,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["associated",{"_index":1595,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["async",{"_index":688,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/AuthStrapiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["attributes",{"_index":1600,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["autenticación",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["auth",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"guards/OwnerGuard.html":{},"components/RegisterPage.html":{},"injectables/TeamService.html":{},"miscellaneous/variables.html":{}}}],["auth.service",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/PlayersService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{}}}],["auth.service.ts",{"_index":1087,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:127",{"_index":1098,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["auth.service.ts:16",{"_index":1091,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["auth.service.ts:55",{"_index":1106,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["auth/email",{"_index":1401,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/invalid",{"_index":1405,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/operation",{"_index":1407,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/weak",{"_index":1411,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["authdomain",{"_index":3558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticate",{"_index":3552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticated",{"_index":660,"title":{},"body":{"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["authentication",{"_index":605,"title":{},"body":{"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"guards/OwnerGuard.html":{},"injectables/PlayersService.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":524,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":3536,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":708,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authservice",{"_index":355,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"guards/OwnerGuard.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authservice:145",{"_index":818,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["authservice:146",{"_index":1096,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["authservice:168",{"_index":1095,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["authservice:178",{"_index":1103,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["authservice:19",{"_index":821,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["authservice:22",{"_index":820,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["authservice:27",{"_index":1110,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["authservice:32",{"_index":824,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["authservice:37",{"_index":827,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["authservice:42",{"_index":822,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["authservice:47",{"_index":826,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["authservice:52",{"_index":823,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["authservice:55",{"_index":814,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["authservice:57",{"_index":828,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["authservice:62",{"_index":825,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["authservice:67",{"_index":829,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["authservice:71",{"_index":1094,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["authservice:86",{"_index":816,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["authservice:96",{"_index":1101,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["authservice:99",{"_index":819,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["authservicefactory",{"_index":506,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authservicefactory(backend",{"_index":3471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authstrapiservice",{"_index":482,"title":{"injectables/AuthStrapiService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthStrapiService.html":{},"components/HomePage.html":{},"coverage.html":{}}}],["authstrapiservice(jwt",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["auto",{"_index":1081,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/RegisterPage.html":{},"components/TeamInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["available",{"_index":994,"title":{},"body":{"injectables/CustomTranslateService.html":{},"components/PositionSelectorComponent.html":{},"components/SettingsPage.html":{},"modules.html":{}}}],["avatar",{"_index":75,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/PlayerInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["avoid",{"_index":1745,"title":{},"body":{"injectables/GameService.html":{}}}],["await",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStrapiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"guards/OwnerGuard.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["añade",{"_index":2284,"title":{},"body":{"pipes/NamePipe.html":{}}}],["añadir",{"_index":3510,"title":{},"body":{"index.html":{}}}],["b",{"_index":3270,"title":{},"body":{"components/TeamsPage.html":{}}}],["b.match(regex",{"_index":3276,"title":{},"body":{"components/TeamsPage.html":{}}}],["b2a4",{"_index":2829,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["b2a784a93f06",{"_index":2824,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["b5d1783201c2",{"_index":2846,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["b8ef",{"_index":2858,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["ba2f2549812e",{"_index":2851,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["backend",{"_index":257,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"directives/PositionImageDirective.html":{},"classes/StrapiMappingService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["background",{"_index":134,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["background.jpg",{"_index":2230,"title":{},"body":{"components/LoginPage.html":{}}}],["background:#009a44",{"_index":2949,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["bar",{"_index":3455,"title":{},"body":{"dependencies.html":{}}}],["base",{"_index":2831,"title":{},"body":{"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"miscellaneous/variables.html":{}}}],["baseball",{"_index":2814,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["baseballfont",{"_index":692,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["based",{"_index":489,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"guards/OwnerGuard.html":{},"components/PlayerInfoComponent.html":{},"directives/PositionImageDirective.html":{},"miscellaneous/functions.html":{}}}],["bbdd",{"_index":3509,"title":{},"body":{"index.html":{}}}],["bc7f842831e6/spell.jpg",{"_index":2452,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["bd11",{"_index":2818,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["bearer",{"_index":318,"title":{},"body":{"injectables/ApiService.html":{}}}],["behaviorsubject",{"_index":647,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/PictureSelectableComponent.html":{},"injectables/PlayersService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["behaviorsubject(\"kuza",{"_index":644,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["behaviorsubject('es",{"_index":1009,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["behaviorsubject(false",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["behaviorsubject(null",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["behaviorsubjects",{"_index":1233,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["being",{"_index":806,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["between",{"_index":1502,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"classes/StrapiMappingService.html":{}}}],["big",{"_index":2674,"title":{},"body":{"components/PlayerInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["blanco",{"_index":2673,"title":{},"body":{"components/PlayerInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["blob",{"_index":972,"title":{},"body":{"injectables/CsvService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/MediaService.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"classes/StrapiMediaService.html":{},"components/TeamsPage.html":{},"miscellaneous/functions.html":{}}}],["blob([csvdata",{"_index":973,"title":{},"body":{"injectables/CsvService.html":{}}}],["blob).then(async",{"_index":1312,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["block",{"_index":2492,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/TeamInfoComponent.html":{}}}],["bmatch",{"_index":3275,"title":{},"body":{"components/TeamsPage.html":{}}}],["bmatch[1",{"_index":3278,"title":{},"body":{"components/TeamsPage.html":{}}}],["body",{"_index":299,"title":{},"body":{"injectables/ApiService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["bold",{"_index":140,"title":{},"body":{"components/AboutPage.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["boolean",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{},"interfaces/User.html":{},"components/UsersAdminPage.html":{}}}],["bootstrap",{"_index":221,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/GamesPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersAdminPageModule.html":{},"overview.html":{}}}],["border",{"_index":1670,"title":{},"body":{"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/RegisterPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["both",{"_index":2306,"title":{},"body":{"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{}}}],["boton",{"_index":2213,"title":{},"body":{"components/LoginPage.html":{}}}],["bottom",{"_index":1663,"title":{},"body":{"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{}}}],["bound",{"_index":636,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["box",{"_index":149,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["break",{"_index":1404,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/TeamsPage.html":{}}}],["browse",{"_index":3524,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":68,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["bucket",{"_index":3561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button",{"_index":128,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["button.button",{"_index":141,"title":{},"body":{"components/AboutPage.html":{},"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["button.button:hover",{"_index":153,"title":{},"body":{"components/AboutPage.html":{},"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["button.not",{"_index":2915,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["button.picture",{"_index":2486,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["button.selected:hover",{"_index":2917,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["button.submit",{"_index":2655,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/SettingsPage.html":{}}}],["button.submit:hover",{"_index":2656,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/SettingsPage.html":{}}}],["button:hover",{"_index":703,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["buttons",{"_index":121,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{}}}],["cadena",{"_index":2291,"title":{},"body":{"pipes/NamePipe.html":{}}}],["call",{"_index":3477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["callback",{"_index":1799,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/TeamsPage.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":635,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["calling",{"_index":2169,"title":{},"body":{"components/LoginPage.html":{}}}],["calltoactiongreen",{"_index":145,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["cambia",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{}}}],["cambiar",{"_index":695,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["cambiaste",{"_index":2967,"title":{},"body":{"components/RegisterPage.html":{}}}],["cambios",{"_index":2198,"title":{},"body":{"components/LoginPage.html":{},"index.html":{}}}],["camino",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["campo",{"_index":3205,"title":{},"body":{"injectables/TeamService.html":{}}}],["campos",{"_index":3498,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":531,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/OwnerGuard.html":{}}}],["canactivate(route",{"_index":715,"title":{},"body":{"guards/AuthGuard.html":{},"guards/OwnerGuard.html":{}}}],["cancel",{"_index":2547,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["capacitor",{"_index":2164,"title":{},"body":{"components/LoginPage.html":{}}}],["capacitor/android",{"_index":3447,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":3449,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":3451,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":1805,"title":{},"body":{"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{},"dependencies.html":{}}}],["capacitor/keyboard",{"_index":3453,"title":{},"body":{"dependencies.html":{}}}],["capacitor/preferences",{"_index":2081,"title":{},"body":{"injectables/JwtService.html":{},"dependencies.html":{}}}],["capacitor/status",{"_index":3454,"title":{},"body":{"dependencies.html":{}}}],["capitaliza",{"_index":2278,"title":{},"body":{"pipes/NamePipe.html":{}}}],["capitalizado",{"_index":2273,"title":{},"body":{"pipes/NamePipe.html":{}}}],["capitalizando",{"_index":2259,"title":{},"body":{"pipes/NamePipe.html":{}}}],["caption",{"_index":1610,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["caracteres",{"_index":2270,"title":{},"body":{"pipes/NamePipe.html":{}}}],["card",{"_index":1646,"title":{},"body":{"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/RegisterPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["case",{"_index":496,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/TeamsPage.html":{}}}],["casi",{"_index":2192,"title":{},"body":{"components/LoginPage.html":{}}}],["caso",{"_index":408,"title":{},"body":{"components/AppComponent.html":{}}}],["catch",{"_index":866,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/LoginPage.html":{}}}],["catch((error",{"_index":2091,"title":{},"body":{"injectables/JwtService.html":{}}}],["catch(async",{"_index":1316,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catch(error",{"_index":1583,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["catcher",{"_index":2504,"title":{},"body":{"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{}}}],["center",{"_index":106,"title":{},"body":{"components/AboutPage.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["centerfield",{"_index":2507,"title":{},"body":{"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"interfaces/Position.html":{}}}],["centrado",{"_index":2217,"title":{},"body":{"components/LoginPage.html":{}}}],["cerrar",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["change",{"_index":619,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["changed",{"_index":2992,"title":{},"body":{"components/SettingsPage.html":{},"components/UserInfoComponent.html":{}}}],["changepicture",{"_index":2404,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changepicture(picture",{"_index":2415,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changes",{"_index":676,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/CustomTranslateService.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["characters",{"_index":1417,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/PasswordValidation.html":{}}}],["check",{"_index":654,"title":{},"body":{"components/AppToolbarComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/PasswordValidation.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterFormComponent.html":{},"components/SplashPage.html":{}}}],["checkear",{"_index":3515,"title":{},"body":{"index.html":{}}}],["checker",{"_index":2903,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["checks",{"_index":1277,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{}}}],["checkuserstatus(userid",{"_index":1280,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["cierra",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["circle",{"_index":3161,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["class",{"_index":81,"title":{"classes/FirebaseMediaService.html":{},"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"classes/playerNotFoundException.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"injectables/PlayersService.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"coverage.html":{},"classes/playerNotFoundException.html":{}}}],["classes",{"_index":1569,"title":{},"body":{"classes/FirebaseMediaService.html":{},"injectables/HttpClientProvider.html":{},"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"overview.html":{},"classes/playerNotFoundException.html":{}}}],["clears",{"_index":2926,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["click",{"_index":1649,"title":{},"body":{"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{}}}],["clicked",{"_index":1647,"title":{},"body":{"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{}}}],["client",{"_index":270,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["client.provider",{"_index":79,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{}}}],["client.provider.ts",{"_index":1994,"title":{},"body":{"injectables/HttpClientProvider.html":{},"coverage.html":{}}}],["client.provider.ts:17",{"_index":2004,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:27",{"_index":2003,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:38",{"_index":2010,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:49",{"_index":2012,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:60",{"_index":2007,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:70",{"_index":2000,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:77",{"_index":2017,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["close",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{},"components/TeamInfoComponent.html":{}}}],["close(menu",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["cloud",{"_index":3567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_aboutpagemodule",{"_index":224,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":225,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_aboutpagemodule_imports",{"_index":226,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_gamespagemodule",{"_index":1913,"title":{},"body":{"modules/GamesPageModule.html":{},"overview.html":{}}}],["cluster_gamespagemodule_declarations",{"_index":1914,"title":{},"body":{"modules/GamesPageModule.html":{},"overview.html":{}}}],["cluster_gamespagemodule_imports",{"_index":1915,"title":{},"body":{"modules/GamesPageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule",{"_index":1985,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declarations",{"_index":1987,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_exports",{"_index":1986,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_imports",{"_index":1988,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule",{"_index":2234,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":2235,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_imports",{"_index":2236,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_playerspagemodule",{"_index":2716,"title":{},"body":{"modules/PlayersPageModule.html":{},"overview.html":{}}}],["cluster_playerspagemodule_declarations",{"_index":2717,"title":{},"body":{"modules/PlayersPageModule.html":{},"overview.html":{}}}],["cluster_playerspagemodule_imports",{"_index":2718,"title":{},"body":{"modules/PlayersPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule",{"_index":2973,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule_declarations",{"_index":2974,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule_imports",{"_index":2975,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_settingspagemodule",{"_index":3030,"title":{},"body":{"modules/SettingsPageModule.html":{},"overview.html":{}}}],["cluster_settingspagemodule_declarations",{"_index":3031,"title":{},"body":{"modules/SettingsPageModule.html":{},"overview.html":{}}}],["cluster_settingspagemodule_imports",{"_index":3032,"title":{},"body":{"modules/SettingsPageModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":3038,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":3039,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":3040,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_splashpagemodule",{"_index":3083,"title":{},"body":{"modules/SplashPageModule.html":{},"overview.html":{}}}],["cluster_splashpagemodule_declarations",{"_index":3085,"title":{},"body":{"modules/SplashPageModule.html":{},"overview.html":{}}}],["cluster_splashpagemodule_imports",{"_index":3084,"title":{},"body":{"modules/SplashPageModule.html":{},"overview.html":{}}}],["cluster_teamspagemodule",{"_index":3287,"title":{},"body":{"modules/TeamsPageModule.html":{},"overview.html":{}}}],["cluster_teamspagemodule_declarations",{"_index":3289,"title":{},"body":{"modules/TeamsPageModule.html":{},"overview.html":{}}}],["cluster_teamspagemodule_imports",{"_index":3288,"title":{},"body":{"modules/TeamsPageModule.html":{},"overview.html":{}}}],["cluster_usersadminpagemodule",{"_index":3339,"title":{},"body":{"modules/UsersAdminPageModule.html":{},"overview.html":{}}}],["cluster_usersadminpagemodule_declarations",{"_index":3340,"title":{},"body":{"modules/UsersAdminPageModule.html":{},"overview.html":{}}}],["cluster_usersadminpagemodule_imports",{"_index":3341,"title":{},"body":{"modules/UsersAdminPageModule.html":{},"overview.html":{}}}],["code",{"_index":1000,"title":{},"body":{"injectables/CustomTranslateService.html":{},"components/SettingsPage.html":{}}}],["col",{"_index":129,"title":{},"body":{"components/AboutPage.html":{}}}],["colección",{"_index":3223,"title":{},"body":{"injectables/TeamService.html":{}}}],["collect",{"_index":3575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":1194,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{}}}],["collection(this._db",{"_index":1327,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionname",{"_index":1323,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionref",{"_index":1326,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collections",{"_index":1265,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["color",{"_index":115,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["color:var",{"_index":137,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["colores",{"_index":2968,"title":{},"body":{"components/RegisterPage.html":{}}}],["column",{"_index":103,"title":{},"body":{"components/AboutPage.html":{},"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["combinada",{"_index":930,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["combinelatest",{"_index":724,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{}}}],["combinelatest(gameobservables).pipe",{"_index":1734,"title":{},"body":{"injectables/GameService.html":{}}}],["commonmodule",{"_index":235,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/GamesPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersAdminPageModule.html":{}}}],["compare",{"_index":2537,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{}}}],["comparison",{"_index":2577,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["complete",{"_index":2419,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["completo",{"_index":2287,"title":{},"body":{"pipes/NamePipe.html":{}}}],["complexity",{"_index":2351,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"modules/GamesPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"modules/PlayersPageRoutingModule.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"modules/TeamsPageRoutingModule.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component's",{"_index":50,"title":{},"body":{"components/AboutPage.html":{}}}],["component_template",{"_index":158,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["componente",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["componentprops",{"_index":1844,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"overview.html":{}}}],["components/app",{"_index":3058,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/error",{"_index":3065,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/game",{"_index":3062,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/login",{"_index":3042,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/picture",{"_index":3060,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/player",{"_index":3045,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/position",{"_index":3053,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/register",{"_index":3044,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/team",{"_index":3047,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/user",{"_index":3063,"title":{},"body":{"modules/SharedModule.html":{}}}],["con",{"_index":533,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"components/LoginPage.html":{},"injectables/TeamService.html":{},"index.html":{}}}],["config",{"_index":515,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["configura",{"_index":566,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["configuration",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":2358,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["confirmcontrolname",{"_index":2356,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["confirmpassword",{"_index":2382,"title":{},"body":{"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{}}}],["connectanonymously",{"_index":1392,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connected",{"_index":1160,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connects",{"_index":1391,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connectuserwithemailandpassword(email",{"_index":1421,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["consider",{"_index":2323,"title":{},"body":{"classes/NumericValidator.html":{}}}],["console",{"_index":1576,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["console.error(\"no",{"_index":1830,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{}}}],["console.error('error",{"_index":1449,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/UserInfoComponent.html":{}}}],["console.log(\"password",{"_index":1412,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log('teams",{"_index":1463,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log('updated",{"_index":1476,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log('vibration",{"_index":1952,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["console.log(`email",{"_index":1402,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(`error",{"_index":1409,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(`user",{"_index":3310,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["console.log(data",{"_index":2183,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log(err",{"_index":1122,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"components/GamesPage.html":{},"components/LoginPage.html":{},"components/PlayersPage.html":{},"components/RegisterPage.html":{},"components/TeamsPage.html":{}}}],["console.log(error",{"_index":2477,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["console.log(error.message",{"_index":1420,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(formwithuuid",{"_index":2618,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["console.log(this.firebasesvc.user?.uid",{"_index":2761,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["console.log(user",{"_index":2763,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["console.log(user.uid",{"_index":1266,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["const",{"_index":249,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"modules/GamesPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"modules/PlayersPageRoutingModule.html":{},"injectables/PlayersService.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageRoutingModule.html":{},"components/UserInfoComponent.html":{},"modules/UsersAdminPageRoutingModule.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["constant",{"_index":2455,"title":{},"body":{"components/PictureSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["construction",{"_index":2242,"title":{},"body":{"injectables/MappingService.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["constructor(_modal",{"_index":2527,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["constructor(api",{"_index":3092,"title":{},"body":{"classes/StrapiDataService.html":{},"injectables/TeamService.html":{}}}],["constructor(apisvc",{"_index":2660,"title":{},"body":{"components/PlayerInfoComponent.html":{},"classes/StrapiMediaService.html":{}}}],["constructor(auth",{"_index":709,"title":{},"body":{"guards/AuthGuard.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"guards/OwnerGuard.html":{},"components/RegisterPage.html":{}}}],["constructor(authservice",{"_index":3070,"title":{},"body":{"components/SplashPage.html":{}}}],["constructor(el",{"_index":2790,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["constructor(firebase",{"_index":1572,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["constructor(firebaseservice",{"_index":3368,"title":{},"body":{"injectables/VoteService.html":{}}}],["constructor(firebasesvc",{"_index":1090,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"injectables/GameService.html":{},"injectables/PlayersService.html":{},"injectables/UsersService.html":{}}}],["constructor(formbuilder",{"_index":2107,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["constructor(gameservice",{"_index":1770,"title":{},"body":{"components/GamesPage.html":{}}}],["constructor(http",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{}}}],["constructor(httpclient",{"_index":2025,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["constructor(jwtsvc",{"_index":809,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["constructor(modalcontroller",{"_index":1060,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["constructor(picturemodal",{"_index":2412,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["constructor(private",{"_index":83,"title":{},"body":{"components/AboutPage.html":{},"injectables/CustomTranslateService.html":{},"components/ErrorModalComponent.html":{},"injectables/HttpClientWebProvider.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerInfoComponent.html":{},"components/UserInfoComponent.html":{},"injectables/VoteService.html":{}}}],["constructor(router",{"_index":602,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/PlayersPage.html":{}}}],["constructor(teams",{"_index":3238,"title":{},"body":{"components/TeamsPage.html":{}}}],["constructor(translate",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{}}}],["constructor(translateservice",{"_index":2984,"title":{},"body":{"components/SettingsPage.html":{}}}],["constructor(users",{"_index":3328,"title":{},"body":{"components/UsersAdminPage.html":{}}}],["constructor(userservice",{"_index":3302,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["construye",{"_index":927,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["contain",{"_index":2484,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["contained",{"_index":1181,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["container",{"_index":99,"title":{},"body":{"components/AboutPage.html":{},"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{}}}],["containing",{"_index":1104,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"classes/NumericValidator.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"components/UserInfoComponent.html":{}}}],["contains",{"_index":2365,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["contenido",{"_index":911,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["content",{"_index":127,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["content:center",{"_index":3080,"title":{},"body":{"components/SplashPage.html":{}}}],["contenttype",{"_index":292,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["contract",{"_index":1996,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["contrario",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":650,"title":{},"body":{"components/AppToolbarComponent.html":{},"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PositionSelectorComponent.html":{},"miscellaneous/variables.html":{}}}],["control's",{"_index":2302,"title":{},"body":{"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{}}}],["control.errors",{"_index":2386,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.get(confirmcontrolname)?.value",{"_index":2383,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.get(controlname)?.value",{"_index":2372,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.get(formcontrolname)?.value",{"_index":2321,"title":{},"body":{"classes/NumericValidator.html":{}}}],["control.get(passwordcontrolname)?.value",{"_index":2381,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.value",{"_index":2609,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["control?.errors",{"_index":2322,"title":{},"body":{"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{}}}],["control?.value",{"_index":2320,"title":{},"body":{"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{}}}],["controller",{"_index":1063,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/GamesPage.html":{},"guards/OwnerGuard.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["controlname",{"_index":2371,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["controls",{"_index":2111,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{}}}],["controlvalueaccessor",{"_index":2392,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["conversion",{"_index":942,"title":{},"body":{"injectables/CsvService.html":{},"components/PlayersPage.html":{}}}],["convert",{"_index":954,"title":{},"body":{"injectables/CsvService.html":{},"components/PlayersPage.html":{},"miscellaneous/functions.html":{}}}],["converts",{"_index":952,"title":{},"body":{"injectables/CsvService.html":{},"miscellaneous/functions.html":{}}}],["converttocsv",{"_index":947,"title":{},"body":{"injectables/CsvService.html":{}}}],["converttocsv(data",{"_index":949,"title":{},"body":{"injectables/CsvService.html":{}}}],["core/guards/auth.guard",{"_index":525,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/owner.guard",{"_index":527,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/interfaces/user",{"_index":2931,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{}}}],["core/services/api/api.service",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/api/auth.service",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/RegisterPage.html":{}}}],["core/services/api/data.service",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/api/firebase/firebase",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/api/mapping.service",{"_index":476,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/api/media.service",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/api/strapi/auth",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/api/strapi/strapi",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/custom",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["core/services/firebase/firebase.service",{"_index":478,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/http/http",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/jwt.service",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["corner",{"_index":3154,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["counts",{"_index":3372,"title":{},"body":{"injectables/VoteService.html":{}}}],["countvotesforteams",{"_index":3366,"title":{},"body":{"injectables/VoteService.html":{}}}],["countvotesforteams(gameid",{"_index":3370,"title":{},"body":{"injectables/VoteService.html":{}}}],["cover",{"_index":1669,"title":{},"body":{"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"directives/PositionImageDirective.html":{},"components/RegisterPage.html":{},"components/UserInfoComponent.html":{}}}],["coverage",{"_index":3394,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creado",{"_index":3210,"title":{},"body":{"injectables/TeamService.html":{}}}],["creamos",{"_index":909,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["crear",{"_index":3196,"title":{},"body":{"injectables/TeamService.html":{},"index.html":{}}}],["create",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/PasswordValidation.html":{},"miscellaneous/functions.html":{}}}],["createbody",{"_index":2023,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createbody(body",{"_index":2027,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["created",{"_index":1038,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"components/TeamsPage.html":{},"classes/playerNotFoundException.html":{}}}],["createdat",{"_index":1619,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["createddocid",{"_index":1741,"title":{},"body":{"injectables/GameService.html":{},"injectables/TeamService.html":{}}}],["createdocument(collectionname",{"_index":1324,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createdocumentwithid(collectionname",{"_index":1334,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createheaders",{"_index":2024,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createheaders(headers",{"_index":2030,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["creates",{"_index":268,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"classes/PasswordValidation.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["createtranslateloader",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":1013,"title":{},"body":{"injectables/CustomTranslateService.html":{},"miscellaneous/functions.html":{}}}],["createuserwithemailandpassword",{"_index":1210,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createuserwithemailandpassword(email",{"_index":1397,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createuserwithemailandpassword(this._auth",{"_index":1399,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["creating",{"_index":1795,"title":{},"body":{"components/GamesPage.html":{},"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["creation",{"_index":1617,"title":{},"body":{"interfaces/Formats.html":{},"components/GamesPage.html":{},"interfaces/MediaFormat.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"components/TeamsPage.html":{},"classes/playerNotFoundException.html":{}}}],["credential",{"_index":1220,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["credentials",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"classes/StrapiMediaService.html":{},"interfaces/UserCredentials.html":{}}}],["credentials.password",{"_index":857,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["credentials.password).then((credentials",{"_index":1129,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["credentials.ts",{"_index":3298,"title":{},"body":{"interfaces/UserCredentials.html":{},"coverage.html":{}}}],["credentials.user",{"_index":1130,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["credentials.user.user",{"_index":1131,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["credentials.user.user.uid",{"_index":1132,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["credentials.username",{"_index":855,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["crud",{"_index":3513,"title":{},"body":{"index.html":{}}}],["cruds",{"_index":3501,"title":{},"body":{"index.html":{}}}],["cssclass",{"_index":1824,"title":{},"body":{"components/GamesPage.html":{},"guards/OwnerGuard.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["csv",{"_index":943,"title":{},"body":{"injectables/CsvService.html":{},"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["csvdata",{"_index":960,"title":{},"body":{"injectables/CsvService.html":{},"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["csvrows",{"_index":963,"title":{},"body":{"injectables/CsvService.html":{}}}],["csvrows].join('\\n",{"_index":971,"title":{},"body":{"injectables/CsvService.html":{}}}],["csvservice",{"_index":940,"title":{"injectables/CsvService.html":{}},"body":{"injectables/CsvService.html":{},"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{},"coverage.html":{}}}],["cualquier",{"_index":3229,"title":{},"body":{"injectables/TeamService.html":{}}}],["cuenta",{"_index":2215,"title":{},"body":{"components/LoginPage.html":{}}}],["current",{"_index":639,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"injectables/JwtService.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"components/PlayersPage.html":{},"interfaces/ProviderMetadata.html":{},"components/SettingsPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"miscellaneous/typealiases.html":{}}}],["currently",{"_index":612,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/AuthStrapiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["currenturl",{"_index":671,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["cursor",{"_index":1678,"title":{},"body":{"components/GameInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["custom",{"_index":1909,"title":{},"body":{"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/RegisterFormComponent.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["customtranslateservice",{"_index":354,"title":{"injectables/CustomTranslateService.html":{}},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"injectables/CustomTranslateService.html":{},"components/SettingsPage.html":{},"coverage.html":{}}}],["d",{"_index":3271,"title":{},"body":{"components/TeamsPage.html":{}}}],["d24a",{"_index":2853,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["da79454a87bd",{"_index":2830,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["danger",{"_index":1828,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["dark",{"_index":2211,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["dashed",{"_index":2644,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["data",{"_index":57,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppToolbarComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"injectables/MappingService.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"interfaces/User.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data).then",{"_index":1337,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["data).then(docref",{"_index":1329,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["data.attributes",{"_index":3105,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["data.data['email",{"_index":1152,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["data.data['isadmin",{"_index":1157,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["data.data['isowner",{"_index":1158,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["data.data['name",{"_index":1151,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["data.data['nickname",{"_index":1153,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["data.data['picture",{"_index":1154,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["data.email",{"_index":3126,"title":{},"body":{"classes/StrapiMappingService.html":{}}}],["data.file",{"_index":1580,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["data.id",{"_index":1156,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{}}}],["data.imageurl",{"_index":1850,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["data.isadmin",{"_index":3127,"title":{},"body":{"classes/StrapiMappingService.html":{}}}],["data.isowner",{"_index":3128,"title":{},"body":{"classes/StrapiMappingService.html":{}}}],["data.length",{"_index":962,"title":{},"body":{"injectables/CsvService.html":{}}}],["data.map(doc",{"_index":964,"title":{},"body":{"injectables/CsvService.html":{}}}],["data.name",{"_index":1560,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["data.nickname",{"_index":1562,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["data.pagination",{"_index":1559,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["data.picture.data.attributes.formats.large?.url",{"_index":1565,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["data.picture.data.attributes.formats.medium?.url",{"_index":1567,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["data.picture.data.attributes.formats.small?.url",{"_index":1566,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["data.picture.data.attributes.formats.thumbnail?.url",{"_index":1568,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["data.picture.data.id",{"_index":1564,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["data.picture?.data",{"_index":1563,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["data.service",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"classes/StrapiDataService.html":{}}}],["data.service.ts",{"_index":3091,"title":{},"body":{"classes/StrapiDataService.html":{},"coverage.html":{}}}],["data.service.ts:11",{"_index":3093,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["data.surname",{"_index":1561,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["data.user.id",{"_index":883,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["database",{"_index":1099,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dataservice",{"_index":460,"title":{"injectables/DataService.html":{}},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"classes/StrapiDataService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataservice:31",{"_index":3100,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["dataservice:46",{"_index":3095,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["dataservice:59",{"_index":3096,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["dataservice:72",{"_index":3099,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["dataservice:84",{"_index":3094,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["dataservicefactory",{"_index":502,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataservicefactory(backend",{"_index":3472,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurl",{"_index":3476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob",{"_index":1813,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataurltoblob(dataurl",{"_index":3475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob(result.data.imageurl",{"_index":1852,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["dataurltoblob(updateduser.picture",{"_index":3011,"title":{},"body":{"components/SettingsPage.html":{}}}],["date",{"_index":1618,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Game.html":{},"components/GameInfoComponent.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["date(game.gamedate).tolocaledatestring",{"_index":1870,"title":{},"body":{"components/GamesPage.html":{}}}],["date.now",{"_index":1308,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["datos",{"_index":3265,"title":{},"body":{"components/TeamsPage.html":{},"index.html":{}}}],["de",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"components/ErrorModalComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"pipes/NamePipe.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["debería",{"_index":1831,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{}}}],["debido",{"_index":3505,"title":{},"body":{"index.html":{}}}],["decimal",{"_index":2310,"title":{},"body":{"classes/NumericValidator.html":{}}}],["declarations",{"_index":220,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/GamesPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersAdminPageModule.html":{},"overview.html":{}}}],["declare",{"_index":2756,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["default",{"_index":72,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppToolbarComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlang",{"_index":1019,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["defaultpictureurl",{"_index":3300,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["defecto",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["define",{"_index":1177,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":33,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{}}}],["del",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"components/LoginPage.html":{},"pipes/NamePipe.html":{},"components/RegisterPage.html":{},"injectables/TeamService.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"index.html":{}}}],["delay",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/SplashPage.html":{}}}],["delay(500",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["delete",{"_index":258,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/MappingService.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["delete(path",{"_index":274,"title":{},"body":{"injectables/ApiService.html":{}}}],["delete(resource",{"_index":1028,"title":{},"body":{"injectables/DataService.html":{},"classes/StrapiDataService.html":{}}}],["delete(url",{"_index":1999,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["deleteall",{"_index":2725,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["deleted",{"_index":1032,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"classes/StrapiDataService.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"classes/playerNotFoundException.html":{}}}],["deletedoc",{"_index":1202,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedoc(doc(this._db",{"_index":1368,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedocument(collectionname",{"_index":1366,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletegame",{"_index":1688,"title":{},"body":{"injectables/GameService.html":{}}}],["deletegame(game",{"_index":1699,"title":{},"body":{"injectables/GameService.html":{}}}],["deleteplayer",{"_index":2726,"title":{},"body":{"injectables/PlayersService.html":{}}}],["deleteplayer(player",{"_index":2736,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["deleteplayerurl",{"_index":1504,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["deleteplayerurl(id",{"_index":1515,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["deletes",{"_index":278,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/PlayerDetailComponent.html":{},"injectables/PlayersService.html":{},"classes/StrapiDataService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["deleteteam",{"_index":3165,"title":{},"body":{"injectables/TeamService.html":{}}}],["deleteteam(team",{"_index":3171,"title":{},"body":{"injectables/TeamService.html":{}}}],["deleteuser",{"_index":1211,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["deleteuser(user",{"_index":3351,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuserurl",{"_index":1505,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"classes/StrapiMappingService.html":{}}}],["deleteuserurl(id",{"_index":1518,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"classes/StrapiMappingService.html":{}}}],["deleting",{"_index":1838,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{}}}],["deletion",{"_index":1788,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["dentro",{"_index":903,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["dependencies",{"_index":219,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/GamesPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersAdminPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":514,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["derived",{"_index":659,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"injectables/MappingService.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"miscellaneous/functions.html":{},"classes/playerNotFoundException.html":{},"properties.html":{}}}],["designatedhitter",{"_index":2509,"title":{},"body":{"interfaces/Player.html":{},"interfaces/Position.html":{}}}],["despoporcionado",{"_index":1974,"title":{},"body":{"components/HomePage.html":{}}}],["después",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{}}}],["destacar",{"_index":3484,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":2061,"title":{},"body":{"injectables/JwtService.html":{}}}],["destroyed",{"_index":2071,"title":{},"body":{"injectables/JwtService.html":{},"components/PictureSelectableComponent.html":{}}}],["destroys",{"_index":2068,"title":{},"body":{"injectables/JwtService.html":{}}}],["destroytoken",{"_index":2062,"title":{},"body":{"injectables/JwtService.html":{}}}],["detail",{"_index":2512,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail'},{'name",{"_index":170,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["detail.component",{"_index":1812,"title":{},"body":{"components/GamesPage.html":{},"components/HomePage.html":{},"components/PlayersPage.html":{},"modules/SharedModule.html":{},"components/TeamsPage.html":{}}}],["detail.component.html",{"_index":2514,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.scss",{"_index":2513,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts",{"_index":2510,"title":{},"body":{"components/PlayerDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:106",{"_index":2545,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:115",{"_index":2543,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:123",{"_index":2556,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:139",{"_index":2546,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:147",{"_index":2553,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:157",{"_index":2550,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:16",{"_index":2570,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:167",{"_index":2541,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:176",{"_index":2560,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:184",{"_index":2582,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:194",{"_index":2533,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:208",{"_index":2552,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":2569,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":2573,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":2576,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":2571,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":2575,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:42",{"_index":2578,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:47",{"_index":2530,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:70",{"_index":2567,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail.component.ts:80",{"_index":2528,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["detail/game",{"_index":1811,"title":{},"body":{"components/GamesPage.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["detail/player",{"_index":1939,"title":{},"body":{"components/HomePage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["detail/team",{"_index":3048,"title":{},"body":{"modules/SharedModule.html":{},"components/TeamsPage.html":{},"coverage.html":{}}}],["details",{"_index":1226,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"components/PlayerDetailComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/SettingsPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["determinado",{"_index":403,"title":{},"body":{"components/AppComponent.html":{}}}],["determine",{"_index":2574,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/SplashPage.html":{}}}],["determines",{"_index":719,"title":{},"body":{"guards/AuthGuard.html":{},"guards/OwnerGuard.html":{},"components/PlayerInfoComponent.html":{}}}],["devolver",{"_index":3209,"title":{},"body":{"injectables/TeamService.html":{}}}],["devuelve",{"_index":938,"title":{},"body":{"injectables/AuthStrapiService.html":{},"pipes/NamePipe.html":{}}}],["dialogs",{"_index":1779,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["different",{"_index":1586,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"components/PlayersPage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["digit",{"_index":2367,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["direction",{"_index":102,"title":{},"body":{"components/AboutPage.html":{},"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["directive",{"_index":157,"title":{"directives/PositionImageDirective.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":210,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["directives/position",{"_index":3056,"title":{},"body":{"modules/SharedModule.html":{}}}],["dirty",{"_index":2583,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/SettingsPage.html":{}}}],["disabled",{"_index":2436,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["dismiss",{"_index":1059,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["dismissed",{"_index":1800,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["dismisses",{"_index":1070,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/PlayerDetailComponent.html":{}}}],["display",{"_index":100,"title":{},"body":{"components/AboutPage.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["display:flex",{"_index":3078,"title":{},"body":{"components/SplashPage.html":{}}}],["displayed",{"_index":1067,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["displaying",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["displays",{"_index":2172,"title":{},"body":{"components/LoginPage.html":{},"components/SettingsPage.html":{}}}],["disponible",{"_index":575,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["div.user",{"_index":2482,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["divider",{"_index":2646,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["doc",{"_index":1196,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["doc(this._db",{"_index":1282,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.data",{"_index":1286,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.data['gamedate",{"_index":1723,"title":{},"body":{"injectables/GameService.html":{}}}],["doc.data['id",{"_index":2772,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["doc.data['imageurl",{"_index":2766,"title":{},"body":{"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{}}}],["doc.data['local",{"_index":1716,"title":{},"body":{"injectables/GameService.html":{}}}],["doc.data['localruns",{"_index":1725,"title":{},"body":{"injectables/GameService.html":{}}}],["doc.data['name",{"_index":2764,"title":{},"body":{"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{}}}],["doc.data['players'].map((player",{"_index":3188,"title":{},"body":{"injectables/TeamService.html":{}}}],["doc.data['positions",{"_index":2765,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["doc.data['story",{"_index":1726,"title":{},"body":{"injectables/GameService.html":{},"injectables/TeamService.html":{}}}],["doc.data['trainers'].map((trainer",{"_index":3198,"title":{},"body":{"injectables/TeamService.html":{}}}],["doc.data['visitor",{"_index":1718,"title":{},"body":{"injectables/GameService.html":{}}}],["doc.data['visitorruns",{"_index":1728,"title":{},"body":{"injectables/GameService.html":{}}}],["doc.exists",{"_index":1284,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.id",{"_index":1348,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{}}}],["doc[\"id",{"_index":1439,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc['email",{"_index":1433,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc['isadmin",{"_index":1437,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc['isowner",{"_index":1438,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc['name",{"_index":1434,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc['nickname",{"_index":1435,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc['picture",{"_index":1436,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc[key",{"_index":966,"title":{},"body":{"injectables/CsvService.html":{}}}],["docid",{"_index":1332,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docref",{"_index":1335,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap",{"_index":1351,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.data",{"_index":1355,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.exists",{"_index":1353,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.id",{"_index":1354,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["document",{"_index":1043,"title":{},"body":{"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["document.body.appendchild(link",{"_index":981,"title":{},"body":{"injectables/CsvService.html":{}}}],["document.body.removechild(link",{"_index":983,"title":{},"body":{"injectables/CsvService.html":{}}}],["document.createelement('a",{"_index":976,"title":{},"body":{"injectables/CsvService.html":{}}}],["documentation",{"_index":3395,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":1180,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentname",{"_index":1040,"title":{},"body":{"injectables/DataService.html":{}}}],["documento",{"_index":3206,"title":{},"body":{"injectables/TeamService.html":{}}}],["documentref",{"_index":1427,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documents",{"_index":1343,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documents.map(doc",{"_index":2771,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["domain",{"_index":3555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["download",{"_index":961,"title":{},"body":{"injectables/CsvService.html":{}}}],["downloadfile",{"_index":948,"title":{},"body":{"injectables/CsvService.html":{}}}],["downloadfile(csvdata",{"_index":956,"title":{},"body":{"injectables/CsvService.html":{}}}],["downloadgamescsv",{"_index":1766,"title":{},"body":{"components/GamesPage.html":{}}}],["downloading",{"_index":945,"title":{},"body":{"injectables/CsvService.html":{}}}],["downloadplayerscsv",{"_index":2681,"title":{},"body":{"components/PlayersPage.html":{}}}],["downloads",{"_index":959,"title":{},"body":{"injectables/CsvService.html":{},"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["downloadteamscsv",{"_index":3236,"title":{},"body":{"components/TeamsPage.html":{}}}],["downloadurl",{"_index":1314,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["downloadvotescsv",{"_index":1767,"title":{},"body":{"components/GamesPage.html":{}}}],["draganddrop",{"_index":2637,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["dragdropmodule",{"_index":3050,"title":{},"body":{"modules/SharedModule.html":{}}}],["dragging",{"_index":2642,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["drop",{"_index":3052,"title":{},"body":{"modules/SharedModule.html":{}}}],["durante",{"_index":3231,"title":{},"body":{"injectables/TeamService.html":{}}}],["duration",{"_index":1821,"title":{},"body":{"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["during",{"_index":1410,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{}}}],["dynamic",{"_index":3446,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":2200,"title":{},"body":{"components/LoginPage.html":{}}}],["e.g",{"_index":1006,"title":{},"body":{"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["each",{"_index":1464,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ease",{"_index":152,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["edit",{"_index":2572,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["editing",{"_index":1796,"title":{},"body":{"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["effect",{"_index":1676,"title":{},"body":{"components/GameInfoComponent.html":{}}}],["eje",{"_index":2220,"title":{},"body":{"components/LoginPage.html":{}}}],["ejecutar",{"_index":428,"title":{},"body":{"components/AppComponent.html":{}}}],["el",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginPage.html":{},"pipes/NamePipe.html":{},"directives/PositionImageDirective.html":{},"components/RegisterPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"index.html":{}}}],["element",{"_index":156,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["element's",{"_index":2797,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["elementref",{"_index":2791,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["elimina",{"_index":3264,"title":{},"body":{"components/TeamsPage.html":{}}}],["eliminado",{"_index":3227,"title":{},"body":{"injectables/TeamService.html":{}}}],["eliminar",{"_index":3222,"title":{},"body":{"injectables/TeamService.html":{},"index.html":{}}}],["email",{"_index":872,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{},"interfaces/UserRegisterInfo.html":{}}}],["emit",{"_index":2115,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["emits",{"_index":2925,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["emitted",{"_index":618,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/GameInfoComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/TeamInfoComponent.html":{}}}],["emitter",{"_index":2114,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["emitting",{"_index":2070,"title":{},"body":{"injectables/JwtService.html":{}}}],["empty",{"_index":1474,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/NumericValidator.html":{}}}],["en",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"injectables/CustomTranslateService.html":{},"components/LoginPage.html":{},"components/SettingsPage.html":{},"injectables/TeamService.html":{},"index.html":{}}}],["encadena",{"_index":889,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["encoded",{"_index":2008,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["end",{"_index":2488,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{}}}],["endpoint",{"_index":280,"title":{},"body":{"injectables/ApiService.html":{}}}],["enough",{"_index":1414,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["enrutador",{"_index":567,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enrutamiento",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["ensure",{"_index":2602,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/TeamInfoComponent.html":{}}}],["ensures",{"_index":2364,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["entrar",{"_index":1832,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{}}}],["environment",{"_index":307,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl}${path",{"_index":324,"title":{},"body":{"injectables/ApiService.html":{}}}],["environment.firebase",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["equal",{"_index":2534,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["equipo",{"_index":3186,"title":{},"body":{"injectables/TeamService.html":{}}}],["err",{"_index":868,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/GamesPage.html":{},"components/LoginPage.html":{},"components/PlayersPage.html":{},"components/RegisterPage.html":{},"components/TeamsPage.html":{}}}],["error",{"_index":166,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthStrapiService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"classes/playerNotFoundException.html":{}}}],["error(\"game",{"_index":1743,"title":{},"body":{"injectables/GameService.html":{}}}],["error(\"not",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["error(\"player",{"_index":2780,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["error(\"team",{"_index":3217,"title":{},"body":{"injectables/TeamService.html":{}}}],["error(\"user",{"_index":3363,"title":{},"body":{"injectables/UsersService.html":{}}}],["error('method",{"_index":842,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseMappingService.html":{},"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["error('unexpected",{"_index":1148,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["error('user",{"_index":1159,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["error.code",{"_index":1400,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["errormessage",{"_index":2156,"title":{},"body":{"components/LoginPage.html":{}}}],["errormodalcomponent",{"_index":165,"title":{"components/ErrorModalComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["errors",{"_index":2315,"title":{},"body":{"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"components/PlayerDetailComponent.html":{}}}],["errors.accessdeniedtext'|translate",{"_index":1073,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["errors.accessdeniedtext\\'|translate",{"_index":1085,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["errors.accessdeniedtitle'|translate",{"_index":1072,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["errors.accessdeniedtitle\\'|translate",{"_index":1084,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["errors['passwordmatch",{"_index":2385,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["es",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"components/LoginPage.html":{},"pipes/NamePipe.html":{},"components/SettingsPage.html":{},"injectables/TeamService.html":{},"index.html":{}}}],["especificado",{"_index":2265,"title":{},"body":{"pipes/NamePipe.html":{}}}],["espera",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["esquina",{"_index":2222,"title":{},"body":{"components/LoginPage.html":{}}}],["est",{"_index":574,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["esta",{"_index":696,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{}}}],["establece",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["establecer",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["esto",{"_index":2191,"title":{},"body":{"components/LoginPage.html":{}}}],["estrategia",{"_index":570,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["event",{"_index":617,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{}}}],["event.detail.checked",{"_index":3308,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["event.stoppropagation",{"_index":1655,"title":{},"body":{"components/GameInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{}}}],["event.target.files[0",{"_index":2629,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["eventemitter",{"_index":615,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/GameInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PlayerInfoComponent.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["evento",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["excede",{"_index":2263,"title":{},"body":{"pipes/NamePipe.html":{}}}],["exception",{"_index":2752,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["exist",{"_index":1357,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["existing",{"_index":1339,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/PlayerDetailComponent.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["export",{"_index":80,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"injectables/MappingService.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["exporta",{"_index":572,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["exports",{"_index":223,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"overview.html":{}}}],["exports:[homepage",{"_index":1992,"title":{},"body":{"modules/HomePageModule.html":{}}}],["expose",{"_index":1008,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["expression",{"_index":2330,"title":{},"body":{"classes/NumericValidator.html":{}}}],["ext",{"_index":1612,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["extended",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/Formats.html":{},"injectables/MappingService.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["extended_user",{"_index":910,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["extended_user.attributes.name",{"_index":933,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["extended_user.attributes.players",{"_index":919,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["extended_user.attributes.players.data.map((p",{"_index":920,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["extended_user.attributes.surname",{"_index":934,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["extended_user.attributes.teams",{"_index":922,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["extended_user.attributes.teams.data.map((t",{"_index":923,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["extended_user.attributes.trainers",{"_index":925,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["extended_user.attributes.trainers.data.map((t",{"_index":926,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["extended_user.id",{"_index":932,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["extended_user_response.data[0",{"_index":915,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["extending",{"_index":1997,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["extends",{"_index":808,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/PlayersService.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"classes/playerNotFoundException.html":{}}}],["extension",{"_index":1294,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["factory",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"miscellaneous/functions.html":{}}}],["failed",{"_index":2185,"title":{},"body":{"components/LoginPage.html":{}}}],["fails",{"_index":2930,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["false",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/LoginFormComponent.html":{},"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["family",{"_index":691,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["fav",{"_index":1842,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["fb",{"_index":2985,"title":{},"body":{"components/SettingsPage.html":{}}}],["fetch",{"_index":56,"title":{},"body":{"components/AboutPage.html":{},"injectables/FirebaseAuthService.html":{}}}],["fetches",{"_index":2037,"title":{},"body":{"injectables/HttpClientWebProvider.html":{},"components/SettingsPage.html":{}}}],["fff",{"_index":2649,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/SettingsPage.html":{},"components/UsersAdminPage.html":{}}}],["ffffff",{"_index":2146,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["field",{"_index":1359,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/NumericValidator.html":{},"components/PositionSelectorComponent.html":{}}}],["fieldname",{"_index":1424,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fields",{"_index":1183,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{}}}],["fieldupdate",{"_index":1428,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fieldvalue",{"_index":1425,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fijo",{"_index":3317,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"injectables/MappingService.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"coverage.html":{},"classes/playerNotFoundException.html":{}}}],["file's",{"_index":1297,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fileloader",{"_index":2422,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.click",{"_index":2479,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files",{"_index":2469,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files.length",{"_index":2470,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files[0",{"_index":2471,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.onchange",{"_index":2468,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["filename",{"_index":957,"title":{},"body":{"injectables/CsvService.html":{}}}],["filereader",{"_index":2473,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["files",{"_index":946,"title":{},"body":{"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["fileupload(blob",{"_index":1298,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filter",{"_index":1360,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filtrado",{"_index":3518,"title":{},"body":{"index.html":{}}}],["filtrados",{"_index":3197,"title":{},"body":{"injectables/TeamService.html":{}}}],["filtrar",{"_index":3190,"title":{},"body":{"injectables/TeamService.html":{}}}],["final",{"_index":2285,"title":{},"body":{"pipes/NamePipe.html":{}}}],["firebase",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/HomePage.html":{},"components/PlayerDetailComponent.html":{},"injectables/PlayersService.html":{},"components/SettingsPage.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"classes/playerNotFoundException.html":{},"miscellaneous/variables.html":{}}}],["firebase/app",{"_index":1191,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebase/auth",{"_index":1116,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebase/firebase",{"_index":2751,"title":{},"body":{"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{}}}],["firebase/firebase.service",{"_index":1112,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"injectables/GameService.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["firebase/firestore",{"_index":1203,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{}}}],["firebase/storage",{"_index":1209,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebaseapp",{"_index":1190,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebaseauth",{"_index":2731,"title":{},"body":{"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{}}}],["firebaseauthservice",{"_index":479,"title":{"injectables/FirebaseAuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthService.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"coverage.html":{},"classes/playerNotFoundException.html":{}}}],["firebaseauthservice(firebase",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseconfig",{"_index":1250,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebasedocument",{"_index":1171,"title":{"interfaces/FirebaseDocument.html":{}},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"coverage.html":{},"classes/playerNotFoundException.html":{}}}],["firebasemappingservice",{"_index":1499,"title":{"injectables/FirebaseMappingService.html":{}},"body":{"injectables/FirebaseMappingService.html":{},"coverage.html":{}}}],["firebasemediaservice",{"_index":485,"title":{"classes/FirebaseMediaService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"coverage.html":{}}}],["firebasemediaservice(firebase",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseservice",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/HomePage.html":{},"components/PlayerDetailComponent.html":{},"injectables/PlayersService.html":{},"components/SettingsPage.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/playerNotFoundException.html":{}}}],["firebasestorage",{"_index":1208,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebasestoragefile",{"_index":1218,"title":{"interfaces/FirebaseStorageFile.html":{}},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firebasesvc",{"_index":1092,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"injectables/GameService.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["firebaseusercredential",{"_index":1111,"title":{"interfaces/FirebaseUserCredential.html":{}},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firestorage",{"_index":1303,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firestore",{"_index":1175,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{}}}],["first",{"_index":2536,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["firstbase",{"_index":2500,"title":{},"body":{"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"interfaces/Position.html":{}}}],["firstlettercapital",{"_index":2279,"title":{},"body":{"pipes/NamePipe.html":{}}}],["firstlettercapital.length",{"_index":2282,"title":{},"body":{"pipes/NamePipe.html":{}}}],["firstlettercapital.substring(0",{"_index":2286,"title":{},"body":{"pipes/NamePipe.html":{}}}],["fit",{"_index":1668,"title":{},"body":{"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/UserInfoComponent.html":{}}}],["fkto",{"_index":645,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["flag",{"_index":649,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["flex",{"_index":101,"title":{},"body":{"components/AboutPage.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["fn",{"_index":2430,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["focused",{"_index":147,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["fondo",{"_index":2218,"title":{},"body":{"components/LoginPage.html":{},"components/UsersAdminPage.html":{}}}],["font",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["footer",{"_index":2635,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/SettingsPage.html":{}}}],["form",{"_index":1794,"title":{},"body":{"components/GamesPage.html":{},"injectables/HttpClientWebProvider.html":{},"components/LoginFormComponent.html":{},"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{},"miscellaneous/variables.html":{}}}],["form'},{'name",{"_index":179,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["form.component",{"_index":3043,"title":{},"body":{"modules/SharedModule.html":{}}}],["form.component.html",{"_index":2103,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.scss",{"_index":2102,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts",{"_index":2101,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:15",{"_index":2112,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:18",{"_index":2922,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:22",{"_index":2113,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:23",{"_index":2921,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:27",{"_index":2121,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:32",{"_index":2109,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:45",{"_index":2923,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:49",{"_index":2117,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:51",{"_index":2924,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:54",{"_index":2119,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:62",{"_index":2928,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form/login",{"_index":2100,"title":{},"body":{"components/LoginFormComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["form/register",{"_index":2919,"title":{},"body":{"components/RegisterFormComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["formarray",{"_index":2584,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["formarray).push(new",{"_index":2598,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["format",{"_index":944,"title":{},"body":{"injectables/CsvService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["formats",{"_index":1584,"title":{"interfaces/Formats.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["formattedgames",{"_index":1880,"title":{},"body":{"components/GamesPage.html":{}}}],["formattedgames.foreach(game",{"_index":1898,"title":{},"body":{"components/GamesPage.html":{}}}],["formattedplayers",{"_index":2705,"title":{},"body":{"components/PlayersPage.html":{}}}],["formattedteams",{"_index":3257,"title":{},"body":{"components/TeamsPage.html":{}}}],["formattedteams.foreach(team",{"_index":3266,"title":{},"body":{"components/TeamsPage.html":{}}}],["formbuilder",{"_index":2108,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["formcontrol",{"_index":2317,"title":{},"body":{"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"components/PlayerDetailComponent.html":{}}}],["formcontrol(position",{"_index":2599,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["formcontrol(positionid",{"_index":2613,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["formcontrolname",{"_index":2312,"title":{},"body":{"classes/NumericValidator.html":{}}}],["formdata",{"_index":2050,"title":{},"body":{"injectables/HttpClientWebProvider.html":{},"classes/StrapiMediaService.html":{}}}],["formdata).pipe(map((response",{"_index":3133,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["formdata.append('files",{"_index":3131,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["formgroup",{"_index":2120,"title":{},"body":{"components/LoginFormComponent.html":{},"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["formgroup.get('confirmpassword')?.value",{"_index":2937,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["formgroup.get('password')?.value",{"_index":2936,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["forms",{"_index":2296,"title":{},"body":{"classes/NumericValidator.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["formsmodule",{"_index":237,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/GamesPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersAdminPageModule.html":{}}}],["formwithuuid",{"_index":2616,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["forwardref",{"_index":2453,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PositionSelectorComponent.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":2754,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["framework",{"_index":3537,"title":{},"body":{"properties.html":{}}}],["freeconnection",{"_index":1304,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["from(this.firebasesvc.createdocument(\"games",{"_index":1737,"title":{},"body":{"injectables/GameService.html":{}}}],["from(this.firebasesvc.createdocument(\"players",{"_index":2767,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["from(this.firebasesvc.createdocument(\"teams",{"_index":3200,"title":{},"body":{"injectables/TeamService.html":{}}}],["from(this.firebasesvc.createdocument(\"users",{"_index":3360,"title":{},"body":{"injectables/UsersService.html":{}}}],["from(this.firebasesvc.createdocumentwithid('users",{"_index":1145,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["from(this.firebasesvc.deletedocument(\"games",{"_index":1755,"title":{},"body":{"injectables/GameService.html":{}}}],["from(this.firebasesvc.deletedocument(\"players",{"_index":2781,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["from(this.firebasesvc.deletedocument(\"teams",{"_index":3224,"title":{},"body":{"injectables/TeamService.html":{}}}],["from(this.firebasesvc.deletedocument(\"users",{"_index":3364,"title":{},"body":{"injectables/UsersService.html":{}}}],["from(this.firebasesvc.getdocument(\"games",{"_index":1712,"title":{},"body":{"injectables/GameService.html":{}}}],["from(this.firebasesvc.getdocument(\"players",{"_index":2774,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["from(this.firebasesvc.getdocument(\"teams",{"_index":3183,"title":{},"body":{"injectables/TeamService.html":{}}}],["from(this.firebasesvc.getdocument(\"users",{"_index":3361,"title":{},"body":{"injectables/UsersService.html":{}}}],["from(this.firebasesvc.getdocument('users",{"_index":1149,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["from(this.firebasesvc.getdocuments(\"games\")).pipe",{"_index":1729,"title":{},"body":{"injectables/GameService.html":{}}}],["from(this.firebasesvc.getdocuments(\"players\")).pipe",{"_index":2769,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["from(this.firebasesvc.signout(false",{"_index":1161,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["from(this.firebasesvc.updatedocument(\"games",{"_index":1747,"title":{},"body":{"injectables/GameService.html":{}}}],["from(this.firebasesvc.updatedocument(\"users",{"_index":3362,"title":{},"body":{"injectables/UsersService.html":{}}}],["from(this.firebasesvc.updatedocument('users",{"_index":1163,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["from(this.firebasesvc.updatedocumentfield(\"teams",{"_index":3207,"title":{},"body":{"injectables/TeamService.html":{}}}],["fromobject",{"_index":2045,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["fue",{"_index":3486,"title":{},"body":{"index.html":{}}}],["fuente",{"_index":697,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["full",{"_index":536,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fullmodal",{"_index":1845,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["function",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"components/PositionSelectorComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/playerNotFoundException.html":{}}}],["functions",{"_index":3467,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1752,"title":{},"body":{"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["g.uuid",{"_index":1751,"title":{},"body":{"injectables/GameService.html":{},"components/GamesPage.html":{}}}],["game",{"_index":169,"title":{"interfaces/Game.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"interfaces/Game.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["game)).pipe",{"_index":1738,"title":{},"body":{"injectables/GameService.html":{}}}],["game.gamedate",{"_index":1882,"title":{},"body":{"components/GamesPage.html":{}}}],["game.local",{"_index":1487,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{}}}],["game.localruns",{"_index":1883,"title":{},"body":{"components/GamesPage.html":{}}}],["game.uuid",{"_index":1740,"title":{},"body":{"injectables/GameService.html":{},"components/GamesPage.html":{}}}],["game.uuid)).pipe",{"_index":1748,"title":{},"body":{"injectables/GameService.html":{}}}],["game.uuid)).subscribe",{"_index":1756,"title":{},"body":{"injectables/GameService.html":{}}}],["game.visitor",{"_index":1490,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{}}}],["game.visitorruns",{"_index":1884,"title":{},"body":{"components/GamesPage.html":{}}}],["game?.gamedate",{"_index":1662,"title":{},"body":{"components/GameInfoComponent.html":{}}}],["game?.local?.name|name:8",{"_index":1656,"title":{},"body":{"components/GameInfoComponent.html":{}}}],["game?.localruns",{"_index":1659,"title":{},"body":{"components/GameInfoComponent.html":{}}}],["game?.visitor?.name|name:8",{"_index":1658,"title":{},"body":{"components/GameInfoComponent.html":{}}}],["game?.visitorruns",{"_index":1660,"title":{},"body":{"components/GameInfoComponent.html":{}}}],["gamedata",{"_index":1483,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{}}}],["gamedata.local",{"_index":1885,"title":{},"body":{"components/GamesPage.html":{}}}],["gamedata.local.imageurl",{"_index":1890,"title":{},"body":{"components/GamesPage.html":{}}}],["gamedata.local.name",{"_index":1888,"title":{},"body":{"components/GamesPage.html":{}}}],["gamedata.local.story",{"_index":1891,"title":{},"body":{"components/GamesPage.html":{}}}],["gamedata.local.uuid",{"_index":1887,"title":{},"body":{"components/GamesPage.html":{}}}],["gamedata.uuid",{"_index":1484,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{}}}],["gamedata.visitor",{"_index":1892,"title":{},"body":{"components/GamesPage.html":{}}}],["gamedata.visitor.imageurl",{"_index":1896,"title":{},"body":{"components/GamesPage.html":{}}}],["gamedata.visitor.name",{"_index":1895,"title":{},"body":{"components/GamesPage.html":{}}}],["gamedata.visitor.story",{"_index":1897,"title":{},"body":{"components/GamesPage.html":{}}}],["gamedata.visitor.uuid",{"_index":1894,"title":{},"body":{"components/GamesPage.html":{}}}],["gamedata['local",{"_index":1886,"title":{},"body":{"components/GamesPage.html":{}}}],["gamedata['visitor",{"_index":1893,"title":{},"body":{"components/GamesPage.html":{}}}],["gamedate",{"_index":1625,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{}}}],["gamedetailcomponent",{"_index":168,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["gamedocuments.map(doc",{"_index":1732,"title":{},"body":{"injectables/GameService.html":{}}}],["gameid",{"_index":3373,"title":{},"body":{"injectables/VoteService.html":{}}}],["gameinfocomponent",{"_index":171,"title":{"components/GameInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["gameobservables",{"_index":1731,"title":{},"body":{"injectables/GameService.html":{}}}],["games",{"_index":553,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"modules/GamesPageModule.html":{},"components/HomePage.html":{}}}],["games'},{'name",{"_index":174,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["games.csv",{"_index":1902,"title":{},"body":{"components/GamesPage.html":{}}}],["games.date",{"_index":1661,"title":{},"body":{"components/GameInfoComponent.html":{}}}],["games.downloadgamescsv",{"_index":1904,"title":{},"body":{"components/GamesPage.html":{}}}],["games.downloadvotescsv",{"_index":1903,"title":{},"body":{"components/GamesPage.html":{}}}],["games.find(g",{"_index":1865,"title":{},"body":{"components/GamesPage.html":{}}}],["games.foreach(game",{"_index":1486,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["games.map(game",{"_index":1881,"title":{},"body":{"components/GamesPage.html":{}}}],["games.page",{"_index":1918,"title":{},"body":{"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{}}}],["games.page.html",{"_index":1764,"title":{},"body":{"components/GamesPage.html":{}}}],["games.page.scss",{"_index":1763,"title":{},"body":{"components/GamesPage.html":{}}}],["gameservice",{"_index":1684,"title":{"injectables/GameService.html":{}},"body":{"injectables/GameService.html":{},"components/GamesPage.html":{},"coverage.html":{}}}],["gamespage",{"_index":173,"title":{"components/GamesPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["gamespagemodule",{"_index":1912,"title":{"modules/GamesPageModule.html":{}},"body":{"modules/GamesPageModule.html":{},"modules.html":{},"overview.html":{}}}],["gamespageroutingmodule",{"_index":1916,"title":{"modules/GamesPageRoutingModule.html":{}},"body":{"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["gamesref",{"_index":1480,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["generate",{"_index":1780,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["generic",{"_index":1597,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"components/PlayerInfoComponent.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["gestiona",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["get(key",{"_index":995,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["get(path",{"_index":284,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(resource",{"_index":1033,"title":{},"body":{"injectables/DataService.html":{},"classes/StrapiDataService.html":{}}}],["get(url",{"_index":2002,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getall",{"_index":1689,"title":{},"body":{"injectables/GameService.html":{},"injectables/PlayersService.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["getapp",{"_index":1189,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getauth",{"_index":1113,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["getdatafromurl",{"_index":259,"title":{},"body":{"injectables/ApiService.html":{}}}],["getdatafromurl(url",{"_index":287,"title":{},"body":{"injectables/ApiService.html":{}}}],["getdoc",{"_index":1198,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdoc(docref",{"_index":1352,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs",{"_index":1200,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs(collection(this._db",{"_index":1346,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs(q",{"_index":1365,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocument(collectionname",{"_index":1350,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocuments(collectionname",{"_index":1344,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocumentsby(collectionname",{"_index":1361,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdownloadurl",{"_index":1206,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdownloadurl(storageref).then(async",{"_index":1313,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getfirestore",{"_index":1192,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getfirestore(this._app",{"_index":1255,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getgame",{"_index":1690,"title":{},"body":{"injectables/GameService.html":{}}}],["getgame(uuid",{"_index":1702,"title":{},"body":{"injectables/GameService.html":{}}}],["getheader",{"_index":260,"title":{},"body":{"injectables/ApiService.html":{}}}],["getheader(url",{"_index":290,"title":{},"body":{"injectables/ApiService.html":{}}}],["getimage",{"_index":261,"title":{},"body":{"injectables/ApiService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getimage(url",{"_index":296,"title":{},"body":{"injectables/ApiService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getisformdirty",{"_index":2581,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/SettingsPage.html":{}}}],["getlang",{"_index":987,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["getplayer",{"_index":2727,"title":{},"body":{"injectables/PlayersService.html":{}}}],["getplayer(uuid",{"_index":2739,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["getplayerurl",{"_index":1506,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["getplayerurl(id",{"_index":1520,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["getpositionimageurl",{"_index":2658,"title":{},"body":{"components/PlayerInfoComponent.html":{}}}],["getpositionimageurl(positionid",{"_index":2665,"title":{},"body":{"components/PlayerInfoComponent.html":{}}}],["gets",{"_index":286,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CustomTranslateService.html":{},"components/PlayerInfoComponent.html":{},"classes/StrapiDataService.html":{},"injectables/VoteService.html":{}}}],["getstorage",{"_index":1204,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getstorage(this._app",{"_index":1257,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getteam",{"_index":3166,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteam(uuid",{"_index":3173,"title":{},"body":{"injectables/TeamService.html":{}}}],["getting",{"_index":3479,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":2063,"title":{},"body":{"injectables/JwtService.html":{}}}],["getuser",{"_index":3347,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuser(uuid",{"_index":3354,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserurl",{"_index":1507,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"classes/StrapiMappingService.html":{}}}],["getuserurl(id",{"_index":1522,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"classes/StrapiMappingService.html":{}}}],["getvotesforgame",{"_index":3367,"title":{},"body":{"injectables/VoteService.html":{}}}],["getvotesforgame(gameid",{"_index":3375,"title":{},"body":{"injectables/VoteService.html":{}}}],["github",{"_index":58,"title":{},"body":{"components/AboutPage.html":{}}}],["given",{"_index":289,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"classes/StrapiDataService.html":{}}}],["gotoabout",{"_index":588,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["gotogames",{"_index":589,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/HomePage.html":{}}}],["gotologinpage",{"_index":2953,"title":{},"body":{"components/RegisterPage.html":{}}}],["gotoplayers",{"_index":590,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/HomePage.html":{}}}],["gotoregisterpage",{"_index":2157,"title":{},"body":{"components/LoginPage.html":{}}}],["gotosettings",{"_index":591,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["gototeams",{"_index":592,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/HomePage.html":{}}}],["gotousersadmin",{"_index":593,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["gran",{"_index":3495,"title":{},"body":{"index.html":{}}}],["graph",{"_index":3525,"title":{},"body":{"modules.html":{}}}],["group",{"_index":2122,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["groups",{"_index":2110,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{}}}],["guard",{"_index":704,"title":{"guards/AuthGuard.html":{},"guards/OwnerGuard.html":{}},"body":{"guards/AuthGuard.html":{},"guards/OwnerGuard.html":{},"coverage.html":{}}}],["guards",{"_index":705,"title":{},"body":{"guards/AuthGuard.html":{},"guards/OwnerGuard.html":{},"overview.html":{}}}],["h3",{"_index":3156,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["hace",{"_index":890,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["hacemos",{"_index":902,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["hacer",{"_index":3492,"title":{},"body":{"index.html":{}}}],["handle",{"_index":711,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{},"classes/playerNotFoundException.html":{}}}],["handler",{"_index":3145,"title":{},"body":{"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["handles",{"_index":256,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["handling",{"_index":272,"title":{},"body":{"injectables/ApiService.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/HttpClientProvider.html":{},"components/LoginPage.html":{},"injectables/MediaService.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["haptics",{"_index":1804,"title":{},"body":{"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["haptics.notification",{"_index":1827,"title":{},"body":{"components/GamesPage.html":{},"components/LoginPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["haptics.vibrate(options",{"_index":1951,"title":{},"body":{"components/HomePage.html":{}}}],["haserror",{"_index":2519,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["haserror(control",{"_index":2540,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["hash",{"_index":1611,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["hasvalue",{"_index":2400,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["header",{"_index":295,"title":{},"body":{"injectables/ApiService.html":{},"components/ErrorModalComponent.html":{},"components/PlayerDetailComponent.html":{}}}],["header.languages",{"_index":3023,"title":{},"body":{"components/SettingsPage.html":{}}}],["header['accept",{"_index":314,"title":{},"body":{"injectables/ApiService.html":{}}}],["header['authorization",{"_index":317,"title":{},"body":{"injectables/ApiService.html":{}}}],["header['content",{"_index":315,"title":{},"body":{"injectables/ApiService.html":{}}}],["headers",{"_index":294,"title":{},"body":{"injectables/ApiService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["height",{"_index":109,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"interfaces/Formats.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/MediaFormat.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["height:100",{"_index":1961,"title":{},"body":{"components/HomePage.html":{},"components/SplashPage.html":{}}}],["here",{"_index":53,"title":{},"body":{"components/AboutPage.html":{},"components/PlayerInfoComponent.html":{}}}],["hidden",{"_index":584,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/CsvService.html":{},"components/HomePage.html":{},"components/PlayerDetailComponent.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["historia",{"_index":3503,"title":{},"body":{"index.html":{}}}],["hold",{"_index":648,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["home",{"_index":518,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"directives/PositionImageDirective.html":{},"components/SplashPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":176,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["home.page",{"_index":1991,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":1923,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":1922,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":175,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{},"properties.html":{}}}],["homepagemodule",{"_index":1984,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["homepageroutingmodule",{"_index":1989,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["hook",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["host",{"_index":1677,"title":{},"body":{"components/GameInfoComponent.html":{}}}],["hosting",{"_index":3556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hover",{"_index":144,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["html",{"_index":155,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["htmlinputelement",{"_index":2423,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["http",{"_index":40,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["http/http",{"_index":309,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclient",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"injectables/HttpClientWebProvider.html":{},"modules/SharedModule.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientprovider",{"_index":32,"title":{"injectables/HttpClientProvider.html":{}},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httpclientprovider:105",{"_index":2033,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:117",{"_index":2041,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:27",{"_index":2036,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:41",{"_index":2035,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:57",{"_index":2039,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:72",{"_index":2040,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:87",{"_index":2038,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientwebprovider",{"_index":457,"title":{"injectables/HttpClientWebProvider.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["httpclientwebprovider(http",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":2032,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpheaders(headers",{"_index":2054,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpparams",{"_index":2029,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpproviderfactory",{"_index":504,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httpproviderfactory(http",{"_index":3473,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://firebasestorage.googleapis.com/v0/b/home",{"_index":2812,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["https://homeslam",{"_index":3550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://ionicframework.com",{"_index":3535,"title":{},"body":{"properties.html":{}}}],["https://youre.outof.cards/media/uploads/c2/6b/c26b2af3",{"_index":2448,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["icon",{"_index":136,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["id",{"_index":931,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"injectables/MappingService.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":854,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"interfaces/Player.html":{},"interfaces/Position.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifiers",{"_index":1594,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["identify",{"_index":3568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["idioma",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["ids",{"_index":2498,"title":{},"body":{"interfaces/Player.html":{},"interfaces/Position.html":{},"classes/StrapiMediaService.html":{}}}],["if(team.uuid",{"_index":3218,"title":{},"body":{"injectables/TeamService.html":{}}}],["igual",{"_index":2193,"title":{},"body":{"components/LoginPage.html":{}}}],["image",{"_index":107,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/SettingsPage.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{}}}],["image's",{"_index":1317,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["image.directive",{"_index":3057,"title":{},"body":{"modules/SharedModule.html":{}}}],["image.directive.ts",{"_index":2787,"title":{},"body":{"directives/PositionImageDirective.html":{},"coverage.html":{}}}],["image.directive.ts:11",{"_index":2806,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["image.directive.ts:18",{"_index":2799,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["image.directive.ts:20",{"_index":2794,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["image.directive.ts:39",{"_index":2805,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["image.directive.ts:84",{"_index":2802,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["image/jpeg",{"_index":1320,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["imagen",{"_index":1968,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["imagenes",{"_index":3502,"title":{},"body":{"index.html":{}}}],["images",{"_index":1321,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["imageupload(blob",{"_index":1318,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["imageurl",{"_index":1889,"title":{},"body":{"components/GamesPage.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"interfaces/Team.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"classes/playerNotFoundException.html":{}}}],["img",{"_index":1666,"title":{},"body":{"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["imgs",{"_index":1579,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["imgs.push(media",{"_index":1581,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["impactstyle",{"_index":1944,"title":{},"body":{"components/HomePage.html":{}}}],["implement",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{}}}],["implementation",{"_index":2429,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["implemented",{"_index":501,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseMappingService.html":{},"injectables/PlayersService.html":{},"interfaces/Trainer.html":{},"classes/playerNotFoundException.html":{}}}],["implementing",{"_index":2391,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["implements",{"_index":15,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"pipes/NamePipe.html":{},"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["import",{"_index":76,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Game.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/User.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["import('./pages/about/about.module').then(m",{"_index":549,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/games/games.module').then(m",{"_index":554,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/home/home.module').then(m",{"_index":529,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/login/login.module').then(m",{"_index":539,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/players/players.module').then(m",{"_index":544,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/register/register.module').then(m",{"_index":541,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/settings/settings.module').then",{"_index":561,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/splash/splash.module').then(m",{"_index":551,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/teams/teams.module').then(m",{"_index":547,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/users",{"_index":556,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":2490,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["imports",{"_index":233,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{}}}],["include",{"_index":955,"title":{},"body":{"injectables/CsvService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["includes",{"_index":1225,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["including",{"_index":1228,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PlayerDetailComponent.html":{}}}],["incluye",{"_index":402,"title":{},"body":{"components/AppComponent.html":{}}}],["incongruencias",{"_index":3506,"title":{},"body":{"index.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"injectables/MappingService.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexeddblocalpersistence",{"_index":1215,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["indicate",{"_index":2123,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["indicates",{"_index":1803,"title":{},"body":{"components/GamesPage.html":{},"components/HomePage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{},"interfaces/User.html":{},"components/UsersAdminPage.html":{}}}],["indicating",{"_index":1385,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"injectables/MappingService.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["info'},{'name",{"_index":172,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["info.component",{"_index":3046,"title":{},"body":{"modules/SharedModule.html":{}}}],["info.component.html",{"_index":1637,"title":{},"body":{"components/GameInfoComponent.html":{},"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.scss",{"_index":1636,"title":{},"body":{"components/GameInfoComponent.html":{},"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.ts",{"_index":1635,"title":{},"body":{"components/GameInfoComponent.html":{},"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:15",{"_index":2662,"title":{},"body":{"components/PlayerInfoComponent.html":{}}}],["info.component.ts:17",{"_index":1644,"title":{},"body":{"components/GameInfoComponent.html":{}}}],["info.component.ts:18",{"_index":3141,"title":{},"body":{"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.ts:20",{"_index":2663,"title":{},"body":{"components/PlayerInfoComponent.html":{}}}],["info.component.ts:22",{"_index":1645,"title":{},"body":{"components/GameInfoComponent.html":{}}}],["info.component.ts:23",{"_index":3140,"title":{},"body":{"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.ts:25",{"_index":2664,"title":{},"body":{"components/PlayerInfoComponent.html":{}}}],["info.component.ts:27",{"_index":1642,"title":{},"body":{"components/GameInfoComponent.html":{}}}],["info.component.ts:28",{"_index":3142,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["info.component.ts:30",{"_index":2661,"title":{},"body":{"components/PlayerInfoComponent.html":{}}}],["info.component.ts:33",{"_index":3139,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["info.component.ts:35",{"_index":3304,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:37",{"_index":1648,"title":{},"body":{"components/GameInfoComponent.html":{},"components/PlayerInfoComponent.html":{}}}],["info.component.ts:42",{"_index":2667,"title":{},"body":{"components/PlayerInfoComponent.html":{}}}],["info.component.ts:43",{"_index":3143,"title":{},"body":{"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.ts:46",{"_index":1651,"title":{},"body":{"components/GameInfoComponent.html":{}}}],["info.component.ts:48",{"_index":3144,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["info.component.ts:51",{"_index":2668,"title":{},"body":{"components/PlayerInfoComponent.html":{}}}],["info.component.ts:58",{"_index":3146,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["info.component.ts:62",{"_index":2666,"title":{},"body":{"components/PlayerInfoComponent.html":{}}}],["info.data.name",{"_index":2696,"title":{},"body":{"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["info.email",{"_index":873,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["info.name",{"_index":879,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["info.nickname",{"_index":874,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["info.password",{"_index":875,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["info.password).then((credentials",{"_index":1138,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["info.picture",{"_index":1147,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["info.role",{"_index":1817,"title":{},"body":{"components/GamesPage.html":{},"components/TeamsPage.html":{}}}],["info.surname",{"_index":881,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["info.ts",{"_index":3323,"title":{},"body":{"interfaces/UserRegisterInfo.html":{},"coverage.html":{}}}],["info.uuid",{"_index":1144,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["info/game",{"_index":1634,"title":{},"body":{"components/GameInfoComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["info/player",{"_index":2657,"title":{},"body":{"components/PlayerInfoComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["info/team",{"_index":3049,"title":{},"body":{"modules/SharedModule.html":{},"components/TeamInfoComponent.html":{},"coverage.html":{}}}],["info/user",{"_index":3064,"title":{},"body":{"modules/SharedModule.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["información",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{}}}],["information",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/Formats.html":{},"components/GameInfoComponent.html":{},"interfaces/MediaFormat.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{}}}],["ingresar",{"_index":3500,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":813,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{}}}],["inicializar",{"_index":3211,"title":{},"body":{"injectables/TeamService.html":{}}}],["inicio",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["init",{"_index":988,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["init(firebaseconfig",{"_index":1251,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initial",{"_index":1797,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["initialization",{"_index":2118,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["initialize",{"_index":1473,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PlayerDetailComponent.html":{}}}],["initializeapp",{"_index":1188,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeapp(firebaseconfig",{"_index":1253,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeauth",{"_index":1214,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeauth(getapp",{"_index":1259,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initialized",{"_index":52,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["initializes",{"_index":992,"title":{},"body":{"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{}}}],["initialselectedpositions",{"_index":2516,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["inject",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthStrapiService.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/SplashPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{}}}],["inject('firebase",{"_index":1248,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["injectable",{"_index":252,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"injectables/GameService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{}},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"guards/OwnerGuard.html":{},"injectables/PlayersService.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"coverage.html":{},"classes/playerNotFoundException.html":{}}}],["injectables",{"_index":254,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"injectables/GameService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"overview.html":{}}}],["injected",{"_index":41,"title":{},"body":{"components/AboutPage.html":{},"components/UserInfoComponent.html":{}}}],["inline",{"_index":3158,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["inner",{"_index":2493,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["input",{"_index":663,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["input('username",{"_index":2126,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["inputpositions",{"_index":2882,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["inputs",{"_index":596,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["instance",{"_index":269,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"guards/OwnerGuard.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"miscellaneous/functions.html":{},"classes/playerNotFoundException.html":{}}}],["instanceof",{"_index":670,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/HttpClientWebProvider.html":{},"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{}}}],["instancia",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["integration",{"_index":2393,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["intensity",{"_index":1948,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["interact",{"_index":1093,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"classes/FirebaseMediaService.html":{},"injectables/GameService.html":{},"injectables/PlayersService.html":{},"directives/PositionImageDirective.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["interactions",{"_index":1227,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["interface",{"_index":1170,"title":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Player.html":{},"interfaces/Position.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{}},"body":{"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"injectables/MappingService.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/Position.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{}}}],["interfaces",{"_index":1172,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Player.html":{},"interfaces/Position.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{},"overview.html":{}}}],["interfaces/data",{"_index":1051,"title":{},"body":{"injectables/DataService.html":{},"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{}}}],["interfaces/game",{"_index":1708,"title":{},"body":{"injectables/GameService.html":{}}}],["interfaces/player",{"_index":2750,"title":{},"body":{"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{}}}],["interfaces/strapi",{"_index":841,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseMappingService.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{}}}],["interfaces/team",{"_index":3179,"title":{},"body":{"injectables/TeamService.html":{}}}],["interfaces/user",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"injectables/PlayersService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"classes/playerNotFoundException.html":{}}}],["invalid",{"_index":1406,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ion",{"_index":117,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["ionic",{"_index":3533,"title":{},"body":{"properties.html":{}}}],["ionic/angular",{"_index":240,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorModalComponent.html":{},"components/GamesPage.html":{},"modules/GamesPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"modules/PlayersPageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":239,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/GamesPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersAdminPageModule.html":{}}}],["ionicmodule.forroot",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicons",{"_index":3460,"title":{},"body":{"dependencies.html":{}}}],["ionicroutestrategy",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["ionmenu",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["isadmin",{"_index":736,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/StrapiMappingService.html":{},"interfaces/User.html":{},"components/UserInfoComponent.html":{}}}],["isdisabled",{"_index":2401,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["isformdirty",{"_index":2526,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/SettingsPage.html":{}}}],["islogged",{"_index":737,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["isowner",{"_index":585,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"guards/OwnerGuard.html":{},"classes/StrapiMappingService.html":{},"interfaces/User.html":{}}}],["ispositionselected",{"_index":2520,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["ispositionselected(positionid",{"_index":2542,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["isuserconnected",{"_index":1386,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["isuserconnectedanonymously",{"_index":1389,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["item",{"_index":2627,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/SettingsPage.html":{}}}],["items",{"_index":105,"title":{},"body":{"components/AboutPage.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["items:center",{"_index":3081,"title":{},"body":{"components/SplashPage.html":{}}}],["izquierda",{"_index":2224,"title":{},"body":{"components/LoginPage.html":{}}}],["join",{"_index":969,"title":{},"body":{"injectables/CsvService.html":{}}}],["jpg",{"_index":1322,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["json",{"_index":1016,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["json.parse(ret.value",{"_index":2087,"title":{},"body":{"injectables/JwtService.html":{}}}],["json.stringify(token",{"_index":2094,"title":{},"body":{"injectables/JwtService.html":{}}}],["json.stringify(value",{"_index":968,"title":{},"body":{"injectables/CsvService.html":{}}}],["jugadores",{"_index":3185,"title":{},"body":{"injectables/TeamService.html":{}}}],["justify",{"_index":126,"title":{},"body":{"components/AboutPage.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{}}}],["jwt",{"_index":265,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"injectables/JwtService.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"miscellaneous/functions.html":{}}}],["jwt.service",{"_index":310,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"classes/StrapiMediaService.html":{}}}],["jwtservice",{"_index":266,"title":{"injectables/JwtService.html":{}},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/JwtService.html":{},"classes/StrapiMediaService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["jwtsvc",{"_index":812,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["jwttoken",{"_index":2073,"title":{},"body":{"injectables/JwtService.html":{},"miscellaneous/typealiases.html":{}}}],["key",{"_index":997,"title":{},"body":{"injectables/CustomTranslateService.html":{},"injectables/JwtService.html":{},"miscellaneous/variables.html":{}}}],["key.startswith('player')).sort((a",{"_index":3269,"title":{},"body":{"components/TeamsPage.html":{}}}],["keys",{"_index":950,"title":{},"body":{"injectables/CsvService.html":{},"components/GamesPage.html":{},"injectables/VoteService.html":{}}}],["keys.join",{"_index":970,"title":{},"body":{"injectables/CsvService.html":{}}}],["keys.map(key",{"_index":965,"title":{},"body":{"injectables/CsvService.html":{}}}],["kuza",{"_index":94,"title":{},"body":{"components/AboutPage.html":{}}}],["kuzafkto",{"_index":92,"title":{},"body":{"components/AboutPage.html":{}}}],["la",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"pipes/NamePipe.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{},"injectables/TeamService.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["label",{"_index":1975,"title":{},"body":{"components/HomePage.html":{},"components/UserInfoComponent.html":{}}}],["lang",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"injectables/CustomTranslateService.html":{},"components/SettingsPage.html":{}}}],["lang.touppercase",{"_index":3005,"title":{},"body":{"components/SettingsPage.html":{}}}],["language",{"_index":614,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/CustomTranslateService.html":{},"components/SettingsPage.html":{}}}],["languagechange",{"_index":985,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["languagechangesubject",{"_index":986,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["languages",{"_index":597,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/CustomTranslateService.html":{},"components/SettingsPage.html":{}}}],["languageselected",{"_index":598,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/SettingsPage.html":{}}}],["large",{"_index":1587,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["las",{"_index":568,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["last",{"_index":1620,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["lastvaluefrom",{"_index":830,"title":{},"body":{"injectables/AuthStrapiService.html":{},"classes/StrapiMediaService.html":{}}}],["lastvaluefrom(this.apisvc.post(\"/extended",{"_index":886,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["lastvaluefrom(this.jwtsvc.savetoken(data.jwt",{"_index":861,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["lastvaluefrom(this.me",{"_index":863,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["lateral",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["le",{"_index":901,"title":{},"body":{"injectables/AuthStrapiService.html":{},"components/RegisterPage.html":{}}}],["left",{"_index":1082,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["leftfield",{"_index":2506,"title":{},"body":{"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"interfaces/Position.html":{}}}],["legacy",{"_index":2016,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["legend",{"_index":154,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"modules/GamesPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"modules/PlayersPageModule.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"overview.html":{}}}],["letra",{"_index":2261,"title":{},"body":{"pipes/NamePipe.html":{}}}],["letter",{"_index":2369,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["lifecycle",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["ligeros",{"_index":3497,"title":{},"body":{"index.html":{}}}],["light",{"_index":1075,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["limit",{"_index":2267,"title":{},"body":{"pipes/NamePipe.html":{}}}],["line",{"_index":2647,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["link",{"_index":66,"title":{},"body":{"components/AboutPage.html":{},"injectables/CsvService.html":{}}}],["link.click",{"_index":982,"title":{},"body":{"injectables/CsvService.html":{}}}],["link.setattribute('download",{"_index":979,"title":{},"body":{"injectables/CsvService.html":{}}}],["link.setattribute('href",{"_index":978,"title":{},"body":{"injectables/CsvService.html":{}}}],["link.style.visibility",{"_index":980,"title":{},"body":{"injectables/CsvService.html":{}}}],["linkedin",{"_index":96,"title":{},"body":{"components/AboutPage.html":{}}}],["list",{"_index":609,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/FirebaseMappingService.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"injectables/MappingService.html":{},"components/PlayerDetailComponent.html":{},"injectables/PlayersService.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["listeners",{"_index":2749,"title":{},"body":{"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{}}}],["literal",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{}}}],["llamada",{"_index":900,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["lo",{"_index":888,"title":{},"body":{"injectables/AuthStrapiService.html":{},"components/LoginPage.html":{}}}],["load",{"_index":2059,"title":{},"body":{"injectables/JwtService.html":{}}}],["loadchildren",{"_index":528,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":2076,"title":{},"body":{"injectables/JwtService.html":{}}}],["loader",{"_index":511,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["loading",{"_index":1765,"title":{},"body":{"components/GamesPage.html":{},"components/HomePage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["loads",{"_index":2075,"title":{},"body":{"injectables/JwtService.html":{}}}],["loadtoken",{"_index":2064,"title":{},"body":{"injectables/JwtService.html":{}}}],["local",{"_index":1626,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{}}}],["localruns",{"_index":1627,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{}}}],["localstorage.removeitem('capacitorstorage.jwttoken",{"_index":2097,"title":{},"body":{"injectables/JwtService.html":{}}}],["localteam",{"_index":1724,"title":{},"body":{"injectables/GameService.html":{}}}],["localteamuuid",{"_index":1715,"title":{},"body":{"injectables/GameService.html":{}}}],["logged",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/SplashPage.html":{}}}],["logic",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"classes/NumericValidator.html":{}}}],["login",{"_index":178,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/Formats.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"interfaces/MediaFormat.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"index.html":{}}}],["login'},{'name",{"_index":181,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["login(credentials",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["login.access",{"_index":2189,"title":{},"body":{"components/LoginPage.html":{}}}],["login.noaccount",{"_index":2190,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page",{"_index":2239,"title":{},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{}}}],["login.page.html",{"_index":2155,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":2154,"title":{},"body":{"components/LoginPage.html":{}}}],["login.pwd",{"_index":2138,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["login.pwderror",{"_index":2140,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["login.submit",{"_index":2139,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["login.submiterror",{"_index":2142,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["login.user",{"_index":2137,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["login.usererror",{"_index":2141,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginformcomponent",{"_index":177,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["loginpage",{"_index":180,"title":{"components/LoginPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["loginpagemodule",{"_index":2233,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules.html":{},"overview.html":{}}}],["loginpageroutingmodule",{"_index":2237,"title":{"modules/LoginPageRoutingModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["logo",{"_index":2210,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["logout",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["logs",{"_index":638,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/HomePage.html":{}}}],["long",{"_index":2370,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["los",{"_index":917,"title":{},"body":{"injectables/AuthStrapiService.html":{},"components/RegisterPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"index.html":{}}}],["lowercase",{"_index":2368,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["luego",{"_index":700,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["límite",{"_index":2264,"title":{},"body":{"pipes/NamePipe.html":{}}}],["lógica",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["m",{"_index":562,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.aboutpagemodule",{"_index":550,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.gamespagemodule",{"_index":555,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":530,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.loginpagemodule",{"_index":540,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.playerspagemodule",{"_index":545,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.registerpagemodule",{"_index":542,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.settingspagemodule",{"_index":563,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.splashpagemodule",{"_index":552,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.teamspagemodule",{"_index":548,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.usersadminpagemodule",{"_index":559,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":2648,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/SettingsPage.html":{},"components/UsersAdminPage.html":{}}}],["make",{"_index":54,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthStrapiService.html":{},"injectables/HttpClientProvider.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{}}}],["making",{"_index":43,"title":{},"body":{"components/AboutPage.html":{},"injectables/HttpClientWebProvider.html":{}}}],["manage",{"_index":1775,"title":{},"body":{"components/GamesPage.html":{},"components/HomePage.html":{},"components/PlayersPage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["management",{"_index":1027,"title":{},"body":{"injectables/DataService.html":{}}}],["managing",{"_index":1762,"title":{},"body":{"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/JwtService.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["manipulate",{"_index":2796,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["manten",{"_index":1967,"title":{},"body":{"components/HomePage.html":{}}}],["mantener",{"_index":3320,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["map",{"_index":668,"title":{},"body":{"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"guards/OwnerGuard.html":{},"injectables/PlayersService.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["map(([islogged",{"_index":735,"title":{},"body":{"guards/AuthGuard.html":{}}}],["map(([votes",{"_index":1859,"title":{},"body":{"components/GamesPage.html":{}}}],["map((allplayers",{"_index":3192,"title":{},"body":{"injectables/TeamService.html":{}}}],["map((documents",{"_index":2770,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["map(createddocid",{"_index":1739,"title":{},"body":{"injectables/GameService.html":{}}}],["map(extended_user_response",{"_index":906,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["map(games",{"_index":1735,"title":{},"body":{"injectables/GameService.html":{}}}],["map(mapfunction",{"_index":1376,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["map(teams",{"_index":3389,"title":{},"body":{"injectables/VoteService.html":{}}}],["map(visitorteam",{"_index":1722,"title":{},"body":{"injectables/GameService.html":{}}}],["map(votes",{"_index":3382,"title":{},"body":{"injectables/VoteService.html":{}}}],["mapeamos",{"_index":916,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["mapear",{"_index":891,"title":{},"body":{"injectables/AuthStrapiService.html":{},"components/TeamsPage.html":{}}}],["mapearemos",{"_index":895,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["mapeo",{"_index":908,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["mapeos",{"_index":3504,"title":{},"body":{"index.html":{}}}],["mapfunction",{"_index":1370,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["mapfunction(doc.data",{"_index":1446,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["mapped",{"_index":1431,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/MappingService.html":{},"injectables/PlayersService.html":{},"classes/StrapiMappingService.html":{},"classes/playerNotFoundException.html":{}}}],["mapping",{"_index":1501,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"classes/StrapiMappingService.html":{}}}],["mapping.service",{"_index":1536,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["mapping.service.ts",{"_index":1500,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{},"coverage.html":{}}}],["mapping.service.ts:10",{"_index":3116,"title":{},"body":{"classes/StrapiMappingService.html":{}}}],["mapping.service.ts:100",{"_index":1521,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["mapping.service.ts:110",{"_index":1532,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["mapping.service.ts:120",{"_index":1517,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["mapping.service.ts:35",{"_index":1514,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["mapping.service.ts:90",{"_index":1529,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["mappingservice",{"_index":475,"title":{"injectables/MappingService.html":{}},"body":{"modules/AppModule.html":{},"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"classes/StrapiMappingService.html":{},"coverage.html":{}}}],["mappingservice:23",{"_index":1528,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["mappingservice:24",{"_index":3121,"title":{},"body":{"classes/StrapiMappingService.html":{}}}],["mappingservice:33",{"_index":1525,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["mappingservice:34",{"_index":3118,"title":{},"body":{"classes/StrapiMappingService.html":{}}}],["mappingservice:44",{"_index":3122,"title":{},"body":{"classes/StrapiMappingService.html":{}}}],["mappingservice:49",{"_index":1530,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["mappingservice:54",{"_index":3117,"title":{},"body":{"classes/StrapiMappingService.html":{}}}],["mappingservice:59",{"_index":1523,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["mappingservice:64",{"_index":3120,"title":{},"body":{"classes/StrapiMappingService.html":{}}}],["mappingservice:69",{"_index":1534,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["mappingservice:79",{"_index":1519,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["mappingservice:94",{"_index":3119,"title":{},"body":{"classes/StrapiMappingService.html":{}}}],["mapplayers",{"_index":2728,"title":{},"body":{"injectables/PlayersService.html":{}}}],["mapplayers(data",{"_index":1543,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["mapplayers(doc",{"_index":2741,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["maps",{"_index":1430,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/MappingService.html":{},"injectables/PlayersService.html":{},"classes/StrapiMappingService.html":{},"classes/playerNotFoundException.html":{}}}],["mapuser",{"_index":1508,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"classes/StrapiMappingService.html":{}}}],["mapuser(data",{"_index":1524,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"classes/StrapiMappingService.html":{}}}],["mapuser(doc",{"_index":1432,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["mapusers",{"_index":1509,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"classes/StrapiMappingService.html":{}}}],["mapusers(data",{"_index":1527,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"classes/StrapiMappingService.html":{}}}],["margin",{"_index":122,"title":{},"body":{"components/AboutPage.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["margin:0.5",{"_index":3026,"title":{},"body":{"components/SettingsPage.html":{}}}],["margin:2",{"_index":108,"title":{},"body":{"components/AboutPage.html":{},"components/PlayersPage.html":{}}}],["mark",{"_index":2632,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["mas",{"_index":3512,"title":{},"body":{"index.html":{}}}],["match",{"_index":1358,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{}}}],["matching",{"_index":215,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"injectables/MappingService.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/playerNotFoundException.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1979,"title":{},"body":{"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{}}}],["mayoría",{"_index":3485,"title":{},"body":{"index.html":{}}}],["measurement",{"_index":3573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["measurementid",{"_index":3578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":1571,"title":{"interfaces/Media.html":{}},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"interfaces/Player.html":{},"components/PlayersPage.html":{},"interfaces/Position.html":{},"interfaces/ProviderMetadata.html":{},"components/SettingsPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamsPage.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["media.id",{"_index":3135,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["media.service",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"classes/StrapiMediaService.html":{}}}],["media.service.ts",{"_index":1570,"title":{},"body":{"classes/FirebaseMediaService.html":{},"classes/StrapiMediaService.html":{},"coverage.html":{}}}],["media.service.ts:10",{"_index":1573,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["media.service.ts:15",{"_index":3129,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["media[0",{"_index":1854,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["media[0].url_medium",{"_index":3013,"title":{},"body":{"components/SettingsPage.html":{}}}],["mediaformat",{"_index":1591,"title":{"interfaces/MediaFormat.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["mediaservice",{"_index":470,"title":{"injectables/MediaService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"components/GamesPage.html":{},"injectables/MediaService.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"classes/StrapiMediaService.html":{},"components/TeamsPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mediaservice:29",{"_index":1575,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["mediaservice:34",{"_index":3130,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["mediaservicefactory",{"_index":494,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mediaservicefactory(backend",{"_index":3474,"title":{},"body":{"miscellaneous/functions.html":{}}}],["medium",{"_index":1588,"title":{},"body":{"interfaces/Formats.html":{},"components/LoginPage.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["mediumendcalltoaction",{"_index":143,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["meets",{"_index":2362,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["men",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["menu",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.close",{"_index":432,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.games'|translate",{"_index":1956,"title":{},"body":{"components/HomePage.html":{}}}],["menu.games\\'|translate",{"_index":1982,"title":{},"body":{"components/HomePage.html":{}}}],["menu.players'|translate",{"_index":1955,"title":{},"body":{"components/HomePage.html":{}}}],["menu.players\\'|translate",{"_index":1981,"title":{},"body":{"components/HomePage.html":{}}}],["menu.teams'|translate",{"_index":1957,"title":{},"body":{"components/HomePage.html":{}}}],["menu.teams\\'|translate",{"_index":1983,"title":{},"body":{"components/HomePage.html":{}}}],["message",{"_index":740,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorModalComponent.html":{},"components/GamesPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PlayersPage.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["messages",{"_index":1055,"title":{},"body":{"components/ErrorModalComponent.html":{},"miscellaneous/variables.html":{}}}],["messaging",{"_index":3565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messagingsenderid",{"_index":3569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meta",{"_index":1601,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["metadata",{"_index":17,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/MediaFormat.html":{},"pipes/NamePipe.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["method",{"_index":2001,"title":{},"body":{"injectables/HttpClientProvider.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/SplashPage.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["milliseconds",{"_index":1947,"title":{},"body":{"components/HomePage.html":{}}}],["mime",{"_index":1292,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["mimetype",{"_index":1291,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["min",{"_index":2201,"title":{},"body":{"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{}}}],["mini",{"_index":1976,"title":{},"body":{"components/HomePage.html":{}}}],["miscellaneous",{"_index":3466,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":2929,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["mitt",{"_index":2825,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["modal",{"_index":1056,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/GamesPage.html":{},"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["modal'},{'name",{"_index":167,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["modal.auto",{"_index":2491,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["modal.component",{"_index":2341,"title":{},"body":{"guards/OwnerGuard.html":{},"modules/SharedModule.html":{}}}],["modal.component.html",{"_index":1058,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modal.component.scss",{"_index":1057,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modal.component.ts",{"_index":1054,"title":{},"body":{"components/ErrorModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:17",{"_index":1068,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modal.component.ts:22",{"_index":1062,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modal.component.ts:34",{"_index":1069,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modal.ondiddismiss",{"_index":1847,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["modal.present",{"_index":1846,"title":{},"body":{"components/GamesPage.html":{},"guards/OwnerGuard.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["modal/error",{"_index":1053,"title":{},"body":{"components/ErrorModalComponent.html":{},"guards/OwnerGuard.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["modalcontroller",{"_index":1061,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/RegisterPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["modals",{"_index":2339,"title":{},"body":{"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{}}}],["mode",{"_index":2019,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/PlayerDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":1503,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["modified",{"_index":1835,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["modifying",{"_index":1836,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{}}}],["module",{"_index":216,"title":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/GamesPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersAdminPageModule.html":{},"overview.html":{}}}],["modules",{"_index":218,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["ms",{"_index":426,"title":{},"body":{"components/AppComponent.html":{}}}],["msg",{"_index":1302,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["multi",{"_index":2459,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PositionSelectorComponent.html":{},"miscellaneous/variables.html":{}}}],["nada",{"_index":3483,"title":{},"body":{"index.html":{}}}],["name",{"_index":37,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"injectables/MappingService.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"miscellaneous/functions.html":{},"classes/playerNotFoundException.html":{}}}],["name.charat(0).touppercase",{"_index":2280,"title":{},"body":{"pipes/NamePipe.html":{}}}],["name.slice(1",{"_index":2281,"title":{},"body":{"pipes/NamePipe.html":{}}}],["name:12",{"_index":3150,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["name:8",{"_index":3152,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["namepipe",{"_index":2254,"title":{"pipes/NamePipe.html":{}},"body":{"pipes/NamePipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["names",{"_index":3374,"title":{},"body":{"injectables/VoteService.html":{}}}],["native",{"_index":2489,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["navega",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":713,"title":{},"body":{"guards/AuthGuard.html":{},"components/SplashPage.html":{}}}],["navigates",{"_index":627,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["navigating",{"_index":2161,"title":{},"body":{"components/LoginPage.html":{}}}],["navigation",{"_index":604,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/HomePage.html":{},"components/PlayersPage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["navigationend",{"_index":665,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["necesario",{"_index":2275,"title":{},"body":{"pipes/NamePipe.html":{}}}],["need",{"_index":2327,"title":{},"body":{"classes/NumericValidator.html":{}}}],["needed",{"_index":1102,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"components/UsersAdminPage.html":{}}}],["needs",{"_index":1109,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["negative",{"_index":2308,"title":{},"body":{"classes/NumericValidator.html":{}}}],["negro",{"_index":3336,"title":{},"body":{"components/UsersAdminPage.html":{}}}],["new",{"_index":67,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/AppToolbarComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMediaService.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/playerNotFoundException.html":{}}}],["next",{"_index":860,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/LoginPage.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"classes/playerNotFoundException.html":{}}}],["ng_value_accessor",{"_index":2454,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PositionSelectorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":234,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{}}}],["ngondestroy",{"_index":2405,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ngoninit",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["ngx",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nickname",{"_index":586,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UsersService.html":{}}}],["nocheck",{"_index":2014,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["nomas",{"_index":2966,"title":{},"body":{"components/RegisterPage.html":{}}}],["nombre",{"_index":2258,"title":{},"body":{"pipes/NamePipe.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["none",{"_index":2203,"title":{},"body":{"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{}}}],["note",{"_index":805,"title":{},"body":{"injectables/AuthStrapiService.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{}}}],["notification",{"_index":2173,"title":{},"body":{"components/LoginPage.html":{},"components/SettingsPage.html":{}}}],["notifications",{"_index":1778,"title":{},"body":{"components/GamesPage.html":{},"components/LoginPage.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["now",{"_index":2670,"title":{},"body":{"components/PlayerInfoComponent.html":{}}}],["nowrap",{"_index":3160,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["nueva",{"_index":699,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["nuevo",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"injectables/TeamService.html":{}}}],["null",{"_index":85,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"injectables/CsvService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"classes/playerNotFoundException.html":{}}}],["null).subscribe((result",{"_index":1945,"title":{},"body":{"components/HomePage.html":{}}}],["number",{"_index":1516,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"components/GamesPage.html":{},"injectables/MappingService.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"components/TeamsPage.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"injectables/VoteService.html":{}}}],["numbers",{"_index":1419,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/NumericValidator.html":{}}}],["numbersymbol",{"_index":2499,"title":{},"body":{"interfaces/Player.html":{},"interfaces/Position.html":{}}}],["numeric",{"_index":2294,"title":{},"body":{"classes/NumericValidator.html":{}}}],["numericproto",{"_index":2298,"title":{},"body":{"classes/NumericValidator.html":{}}}],["numericproto(formcontrolname",{"_index":2299,"title":{},"body":{"classes/NumericValidator.html":{}}}],["numericvalidator",{"_index":2292,"title":{"classes/NumericValidator.html":{}},"body":{"classes/NumericValidator.html":{},"coverage.html":{}}}],["o",{"_index":2288,"title":{},"body":{"pipes/NamePipe.html":{}}}],["obj",{"_index":2440,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["object",{"_index":276,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/CsvService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/GameInfoComponent.html":{},"components/HomePage.html":{},"interfaces/MediaFormat.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerInfoComponent.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{},"miscellaneous/variables.html":{}}}],["object).pipe(map((response",{"_index":3111,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["object.assign(errors",{"_index":2384,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["object.keys(game).foreach(key",{"_index":1899,"title":{},"body":{"components/GamesPage.html":{}}}],["object.keys(team).foreach(key",{"_index":3267,"title":{},"body":{"components/TeamsPage.html":{}}}],["object.keys(vote).foreach(key",{"_index":1873,"title":{},"body":{"components/GamesPage.html":{}}}],["objects",{"_index":953,"title":{},"body":{"injectables/CsvService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["objeto",{"_index":928,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/TeamService.html":{}}}],["obs.complete",{"_index":865,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/GameService.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{}}}],["obs.error(err",{"_index":869,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["obs.error(error",{"_index":867,"title":{},"body":{"injectables/AuthStrapiService.html":{},"classes/FirebaseMediaService.html":{},"injectables/GameService.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{}}}],["obs.error(new",{"_index":1754,"title":{},"body":{"injectables/GameService.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{}}}],["obs.next(game",{"_index":1757,"title":{},"body":{"injectables/GameService.html":{}}}],["obs.next(imgs",{"_index":1582,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["obs.next(player",{"_index":2779,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["obs.next(playeruuids",{"_index":3216,"title":{},"body":{"injectables/TeamService.html":{}}}],["obs.next(team",{"_index":3226,"title":{},"body":{"injectables/TeamService.html":{}}}],["obs.next(user",{"_index":864,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["observable",{"_index":282,"title":{},"body":{"injectables/ApiService.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"injectables/MediaService.html":{},"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{},"injectables/PlayersService.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["observable(obs",{"_index":852,"title":{},"body":{"injectables/AuthStrapiService.html":{},"classes/FirebaseMediaService.html":{},"injectables/GameService.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{}}}],["observable(observer",{"_index":2082,"title":{},"body":{"injectables/JwtService.html":{},"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["observable(player",{"_index":2776,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["observable(subscr",{"_index":1127,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["observer.complete",{"_index":2090,"title":{},"body":{"injectables/JwtService.html":{},"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["observer.error(error",{"_index":2096,"title":{},"body":{"injectables/JwtService.html":{}}}],["observer.next",{"_index":2088,"title":{},"body":{"injectables/JwtService.html":{},"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["observer.next(error",{"_index":2092,"title":{},"body":{"injectables/JwtService.html":{}}}],["observer.next(this.token",{"_index":2089,"title":{},"body":{"injectables/JwtService.html":{}}}],["obtener",{"_index":3184,"title":{},"body":{"injectables/TeamService.html":{}}}],["obteniendo",{"_index":893,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["obtiene",{"_index":887,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["occurs",{"_index":1759,"title":{},"body":{"injectables/GameService.html":{}}}],["ocurra",{"_index":3230,"title":{},"body":{"injectables/TeamService.html":{}}}],["of('').pipe",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["of('').pipe(delay(2000)).subscribe",{"_index":3073,"title":{},"body":{"components/SplashPage.html":{}}}],["ok",{"_index":1818,"title":{},"body":{"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["oncancel",{"_index":2521,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["oncardclick",{"_index":1638,"title":{},"body":{"components/GameInfoComponent.html":{},"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{}}}],["oncardclicked",{"_index":1640,"title":{},"body":{"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{}}}],["oncardclicked(game",{"_index":1784,"title":{},"body":{"components/GamesPage.html":{}}}],["oncardclicked(player",{"_index":2686,"title":{},"body":{"components/PlayersPage.html":{}}}],["oncardclicked(team",{"_index":3242,"title":{},"body":{"components/TeamsPage.html":{}}}],["onchangecb",{"_index":2877,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["onchangepicture",{"_index":2406,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchangepicture(event",{"_index":2421,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondelete",{"_index":2522,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["ondeleteclick",{"_index":1639,"title":{},"body":{"components/GameInfoComponent.html":{},"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{}}}],["ondeleteclick(event",{"_index":1650,"title":{},"body":{"components/GameInfoComponent.html":{},"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{}}}],["ondeleteclicked",{"_index":1641,"title":{},"body":{"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{}}}],["ondeleteclicked(game",{"_index":1786,"title":{},"body":{"components/GamesPage.html":{}}}],["ondeleteclicked(player",{"_index":2688,"title":{},"body":{"components/PlayersPage.html":{}}}],["ondeleteclicked(team",{"_index":3244,"title":{},"body":{"components/TeamsPage.html":{}}}],["ondeletepicture",{"_index":2407,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture(event",{"_index":2425,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondestroy",{"_index":2394,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondismiss",{"_index":1791,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["ondismiss(result",{"_index":1851,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["one",{"_index":2366,"title":{},"body":{"classes/PasswordValidation.html":{},"components/PlayerDetailComponent.html":{}}}],["onimagechange",{"_index":2523,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["onimagechange(event",{"_index":2551,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["oninit",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["onisadminchange",{"_index":3301,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["onisadminchange(event",{"_index":3305,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["onlang",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["onlang(lang",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["onlanguage",{"_index":600,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["onlanguagechange",{"_index":989,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["onlanguagechange(lang",{"_index":1004,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["onlogin",{"_index":2158,"title":{},"body":{"components/LoginPage.html":{}}}],["onlogin(credentials",{"_index":2167,"title":{},"body":{"components/LoginPage.html":{}}}],["onlogout",{"_index":594,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/HomePage.html":{}}}],["onnewgame",{"_index":1768,"title":{},"body":{"components/GamesPage.html":{}}}],["onnewplayer",{"_index":2682,"title":{},"body":{"components/PlayersPage.html":{}}}],["onnewteam",{"_index":3237,"title":{},"body":{"components/TeamsPage.html":{}}}],["onprofile",{"_index":601,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["onregister",{"_index":2954,"title":{},"body":{"components/RegisterPage.html":{}}}],["onregister(registerinfo",{"_index":2958,"title":{},"body":{"components/RegisterPage.html":{}}}],["onsignout",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{}}}],["onsignout(menu",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["onsnapshot",{"_index":1197,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["onsnapshot(collection(this._db",{"_index":1374,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["onsnapshot(gamesref",{"_index":1482,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["onsnapshot(playersref",{"_index":1443,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["onsnapshot(teamsref",{"_index":1460,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["onsnapshot(userdocref",{"_index":1283,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["onsnapshot(usersref",{"_index":1453,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["onsnapshot(votesref",{"_index":1495,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["onsubmit",{"_index":2105,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterFormComponent.html":{}}}],["ontouchedcb",{"_index":2878,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["opacity",{"_index":2643,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["open",{"_index":71,"title":{},"body":{"components/AboutPage.html":{}}}],["openlink",{"_index":29,"title":{},"body":{"components/AboutPage.html":{}}}],["openlink(link",{"_index":62,"title":{},"body":{"components/AboutPage.html":{}}}],["opens",{"_index":65,"title":{},"body":{"components/AboutPage.html":{}}}],["operation",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["operations",{"_index":606,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/HomePage.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"injectables/PlayersService.html":{},"components/SettingsPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["optional",{"_index":39,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"injectables/MappingService.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"interfaces/User.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1820,"title":{},"body":{"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["orderedkeys",{"_index":1900,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["otherwise",{"_index":2539,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["otra",{"_index":698,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["otro",{"_index":2225,"title":{},"body":{"components/LoginPage.html":{}}}],["out",{"_index":231,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"components/AppToolbarComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules/GamesPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"components/PlayerDetailComponent.html":{},"modules/PlayersPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersAdminPageModule.html":{},"overview.html":{}}}],["outer",{"_index":3024,"title":{},"body":{"components/SettingsPage.html":{}}}],["output",{"_index":664,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/GameInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PlayerInfoComponent.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["outputs",{"_index":599,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/GameInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/TeamInfoComponent.html":{}}}],["overflow",{"_index":1963,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["override",{"_index":843,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["overview",{"_index":3526,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwriting",{"_index":1746,"title":{},"body":{"injectables/GameService.html":{}}}],["owner",{"_index":655,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/User.html":{}}}],["ownerguard",{"_index":526,"title":{"guards/OwnerGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/OwnerGuard.html":{},"coverage.html":{}}}],["ownership",{"_index":2337,"title":{},"body":{"guards/OwnerGuard.html":{}}}],["p",{"_index":730,"title":{},"body":{"guards/AuthGuard.html":{}}}],["p.id",{"_index":921,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["package",{"_index":3440,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":130,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/RegisterPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["page",{"_index":628,"title":{},"body":{"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Formats.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayersPage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["pagecount",{"_index":1603,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["pages",{"_index":2347,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{}}}],["pagesize",{"_index":1602,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["paginated",{"_index":1049,"title":{},"body":{"injectables/DataService.html":{},"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["paginateddata",{"_index":1050,"title":{"interfaces/PaginatedData.html":{}},"body":{"injectables/DataService.html":{},"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["paginatedusers",{"_index":3297,"title":{},"body":{"interfaces/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["pagination",{"_index":1558,"title":{"interfaces/Pagination.html":{}},"body":{"injectables/FirebaseMappingService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["panel",{"_index":3335,"title":{},"body":{"components/UsersAdminPage.html":{}}}],["para",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthStrapiService.html":{},"pipes/NamePipe.html":{},"injectables/TeamService.html":{},"components/UserInfoComponent.html":{}}}],["param",{"_index":82,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["parameters",{"_index":35,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":275,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"classes/StrapiDataService.html":{}}}],["params).pipe(map((response",{"_index":3103,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["params['error",{"_index":2176,"title":{},"body":{"components/LoginPage.html":{}}}],["parecido",{"_index":2965,"title":{},"body":{"components/RegisterPage.html":{}}}],["parent",{"_index":2447,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["parseint(amatch[1",{"_index":3281,"title":{},"body":{"components/TeamsPage.html":{}}}],["parseint(bmatch[1",{"_index":3282,"title":{},"body":{"components/TeamsPage.html":{}}}],["parte",{"_index":3496,"title":{},"body":{"index.html":{}}}],["partidos",{"_index":3514,"title":{},"body":{"index.html":{}}}],["paso",{"_index":430,"title":{},"body":{"components/AppComponent.html":{}}}],["passed",{"_index":2324,"title":{},"body":{"classes/NumericValidator.html":{}}}],["password",{"_index":856,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/LoginFormComponent.html":{},"interfaces/MediaFormat.html":{},"classes/PasswordValidation.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{}}}],["password.match(/^(?=.*\\d)(?=.*[a",{"_index":2375,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordcontrolname",{"_index":2359,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordmatch",{"_index":2353,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordmatch(passwordcontrolname",{"_index":2355,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordmatchvalidator",{"_index":2920,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["passwordmatchvalidator(formgroup",{"_index":2927,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["passwordproto",{"_index":2354,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordproto(controlname",{"_index":2360,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwords",{"_index":2352,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation",{"_index":2348,"title":{"classes/PasswordValidation.html":{}},"body":{"classes/PasswordValidation.html":{},"coverage.html":{}}}],["patch",{"_index":262,"title":{},"body":{"injectables/ApiService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["patch(path",{"_index":298,"title":{},"body":{"injectables/ApiService.html":{}}}],["patch(url",{"_index":2005,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["path",{"_index":250,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"modules/GamesPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/MediaFormat.html":{},"modules/PlayersPageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"miscellaneous/functions.html":{}}}],["pathmatch",{"_index":535,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":2374,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["payload",{"_index":1592,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"injectables/PlayersService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{}}}],["per",{"_index":2346,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{}}}],["perform",{"_index":2702,"title":{},"body":{"components/PlayersPage.html":{}}}],["permissions",{"_index":1593,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["pero",{"_index":2195,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["persistence",{"_index":1260,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["personal",{"_index":2511,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["personalizado",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["picture",{"_index":183,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/MediaFormat.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"interfaces/User.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["picture_selectable_value_accessor",{"_index":2395,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picturemodal",{"_index":2414,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["pictureselectablecomponent",{"_index":182,"title":{"components/PictureSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pinned",{"_index":2015,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["pipe",{"_index":734,"title":{"pipes/NamePipe.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthStrapiService.html":{},"components/GamesPage.html":{},"pipes/NamePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(map((response",{"_index":3113,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["pipes",{"_index":2255,"title":{},"body":{"pipes/NamePipe.html":{},"modules/SharedModule.html":{}}}],["pipes/name.pipe",{"_index":3055,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":2276,"title":{},"body":{"pipes/NamePipe.html":{}}}],["pitcher",{"_index":2503,"title":{},"body":{"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{}}}],["places",{"_index":2311,"title":{},"body":{"classes/NumericValidator.html":{}}}],["platform",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["play",{"_index":2497,"title":{},"body":{"interfaces/Player.html":{},"interfaces/Position.html":{}}}],["player",{"_index":186,"title":{"interfaces/Player.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/Formats.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/MediaFormat.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"interfaces/User.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"classes/playerNotFoundException.html":{}}}],["player's",{"_index":1465,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Player.html":{},"interfaces/Position.html":{}}}],["player(_player",{"_index":2585,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["player)).pipe",{"_index":2768,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["player.imageurl",{"_index":2709,"title":{},"body":{"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["player.name",{"_index":2708,"title":{},"body":{"components/PlayersPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{}}}],["player.next(payload",{"_index":2777,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["player.positions.join",{"_index":2710,"title":{},"body":{"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["player.service",{"_index":3180,"title":{},"body":{"injectables/TeamService.html":{}}}],["player.uuid",{"_index":2707,"title":{},"body":{"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"classes/playerNotFoundException.html":{}}}],["player.uuid)).pipe",{"_index":2782,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["player?.name|name:12",{"_index":2672,"title":{},"body":{"components/PlayerInfoComponent.html":{}}}],["playerdata",{"_index":1445,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["playerdata.uuid",{"_index":1447,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["playerdetailcomponent",{"_index":185,"title":{"components/PlayerDetailComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["playerinfocomponent",{"_index":187,"title":{"components/PlayerInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["playernotfoundexception",{"_index":2755,"title":{"classes/playerNotFoundException.html":{}},"body":{"injectables/PlayersService.html":{},"coverage.html":{},"classes/playerNotFoundException.html":{}}}],["players",{"_index":543,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"injectables/AuthStrapiService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"interfaces/MediaFormat.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"modules/PlayersPageModule.html":{},"injectables/PlayersService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"classes/playerNotFoundException.html":{}}}],["players'},{'name",{"_index":189,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["players.csv",{"_index":2712,"title":{},"body":{"components/PlayersPage.html":{}}}],["players.downloadplayerscsv",{"_index":2713,"title":{},"body":{"components/PlayersPage.html":{}}}],["players.filter(player",{"_index":1470,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["players.map(player",{"_index":2706,"title":{},"body":{"components/PlayersPage.html":{}}}],["players.name",{"_index":2633,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["players.page",{"_index":2721,"title":{},"body":{"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{}}}],["players.page.html",{"_index":2680,"title":{},"body":{"components/PlayersPage.html":{}}}],["players.page.scss",{"_index":2679,"title":{},"body":{"components/PlayersPage.html":{}}}],["players.submit",{"_index":2634,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["players/${id",{"_index":1542,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["players/${id}/?populate=picture&sort=id",{"_index":1541,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["players?populate=picture&sort=id",{"_index":1540,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["playerspage",{"_index":188,"title":{"components/PlayersPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["playerspagemodule",{"_index":2715,"title":{"modules/PlayersPageModule.html":{}},"body":{"modules/PlayersPageModule.html":{},"modules.html":{},"overview.html":{}}}],["playerspageroutingmodule",{"_index":2719,"title":{"modules/PlayersPageRoutingModule.html":{}},"body":{"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["playersref",{"_index":1441,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["playersservice",{"_index":1926,"title":{"injectables/PlayersService.html":{}},"body":{"components/HomePage.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"coverage.html":{},"classes/playerNotFoundException.html":{}}}],["playerssubject",{"_index":1456,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["playerssubject.pipe(take(1)).subscribe(players",{"_index":1466,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["playeruuids",{"_index":3187,"title":{},"body":{"injectables/TeamService.html":{}}}],["playeruuids)).pipe",{"_index":3208,"title":{},"body":{"injectables/TeamService.html":{}}}],["playeruuids.includes(player.uuid",{"_index":3195,"title":{},"body":{"injectables/TeamService.html":{}}}],["playeruuids.push(player.uuid",{"_index":3204,"title":{},"body":{"injectables/TeamService.html":{}}}],["please",{"_index":2186,"title":{},"body":{"components/LoginPage.html":{}}}],["podría",{"_index":694,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["pointer",{"_index":1679,"title":{},"body":{"components/GameInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["pone",{"_index":2221,"title":{},"body":{"components/LoginPage.html":{}}}],["populate",{"_index":1798,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["por",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"index.html":{}}}],["pos",{"_index":2808,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["posicion",{"_index":2219,"title":{},"body":{"components/LoginPage.html":{}}}],["posición",{"_index":912,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["position",{"_index":191,"title":{"interfaces/Position.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{}}}],["position.name",{"_index":2914,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["positionid",{"_index":2544,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{}}}],["positionimage",{"_index":212,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["positionimagedirective",{"_index":211,"title":{"directives/PositionImageDirective.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["positioning",{"_index":3153,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["positionname",{"_index":2789,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["positionname(pos",{"_index":2809,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["positions",{"_index":2496,"title":{},"body":{"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"components/PositionSelectorComponent.html":{},"components/TeamsPage.html":{},"classes/playerNotFoundException.html":{}}}],["positions'].indexof(amatch[2",{"_index":3279,"title":{},"body":{"components/TeamsPage.html":{}}}],["positions'].indexof(bmatch[2",{"_index":3280,"title":{},"body":{"components/TeamsPage.html":{}}}],["positionsarray",{"_index":2607,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["positionsarray.controls.findindex(control",{"_index":2608,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["positionsarray.push(new",{"_index":2612,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["positionsarray.removeat(index",{"_index":2610,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["positionschange",{"_index":2883,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["positionselectorcomponent",{"_index":190,"title":{"components/PositionSelectorComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["positionsselected",{"_index":2879,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["positionurl",{"_index":2811,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["positive",{"_index":2307,"title":{},"body":{"classes/NumericValidator.html":{}}}],["possible",{"_index":2568,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["post",{"_index":263,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"classes/StrapiDataService.html":{}}}],["post(path",{"_index":302,"title":{},"body":{"injectables/ApiService.html":{}}}],["post(resource",{"_index":1036,"title":{},"body":{"injectables/DataService.html":{},"classes/StrapiDataService.html":{}}}],["post(url",{"_index":2009,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["posted",{"_index":3098,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["postregister",{"_index":1088,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["postregister(info",{"_index":1097,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["posts",{"_index":3097,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["pq",{"_index":1969,"title":{},"body":{"components/HomePage.html":{}}}],["precarga",{"_index":571,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preferences",{"_index":2080,"title":{},"body":{"injectables/JwtService.html":{}}}],["preferences.get",{"_index":2083,"title":{},"body":{"injectables/JwtService.html":{}}}],["preferences.set",{"_index":2093,"title":{},"body":{"injectables/JwtService.html":{}}}],["prefix",{"_index":1293,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["preloadallmodules",{"_index":523,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":565,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presentform",{"_index":1769,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["presentform(data",{"_index":1790,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["presents",{"_index":1793,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["prevenir",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["preview",{"_index":1613,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["previewurl",{"_index":1614,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["previous",{"_index":2699,"title":{},"body":{"components/PlayersPage.html":{}}}],["primary",{"_index":1074,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["primarygreen",{"_index":135,"title":{},"body":{"components/AboutPage.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["primera",{"_index":2260,"title":{},"body":{"pipes/NamePipe.html":{}}}],["principal",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":313,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/LoginPage.html":{},"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"directives/PositionImageDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["proceso",{"_index":3232,"title":{},"body":{"injectables/TeamService.html":{}}}],["process",{"_index":1760,"title":{},"body":{"injectables/GameService.html":{},"components/UsersAdminPage.html":{}}}],["production",{"_index":3548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profe",{"_index":2194,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["profile",{"_index":623,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/FirebaseAuthService.html":{}}}],["project",{"_index":3534,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["projectid",{"_index":3560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":1295,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["promise((resolve",{"_index":1325,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["promise(async",{"_index":1299,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["propagar",{"_index":3228,"title":{},"body":{"injectables/TeamService.html":{}}}],["propagate",{"_index":1758,"title":{},"body":{"injectables/GameService.html":{},"components/PictureSelectableComponent.html":{}}}],["propagatechange",{"_index":2402,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["propagating",{"_index":3148,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["properties",{"_index":25,"title":{"properties.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{},"properties.html":{}}}],["property",{"_index":1475,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{}}}],["propietario",{"_index":1066,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["protect",{"_index":707,"title":{},"body":{"guards/AuthGuard.html":{},"guards/OwnerGuard.html":{}}}],["protected",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"classes/StrapiDataService.html":{}}}],["protege",{"_index":532,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["provide",{"_index":512,"title":{},"body":{"modules/AppModule.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectorComponent.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":815,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["providedin",{"_index":311,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"guards/OwnerGuard.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["provider",{"_index":271,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Formats.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["provider_metadata",{"_index":1615,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["providermetadata",{"_index":1616,"title":{"interfaces/ProviderMetadata.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["providers",{"_index":222,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/GamesPageModule.html":{},"modules/HomePageModule.html":{},"injectables/HttpClientProvider.html":{},"modules/LoginPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/PlayersPageModule.html":{},"components/PositionSelectorComponent.html":{},"modules/RegisterPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersAdminPageModule.html":{},"overview.html":{}}}],["provides",{"_index":1995,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/JwtService.html":{},"classes/PasswordValidation.html":{}}}],["providing",{"_index":2456,"title":{},"body":{"components/PictureSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["proyecto",{"_index":3494,"title":{},"body":{"index.html":{}}}],["public",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/MappingService.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["public_id",{"_index":1622,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["pueden",{"_index":3499,"title":{},"body":{"index.html":{}}}],["pull",{"_index":3493,"title":{},"body":{"index.html":{}}}],["put",{"_index":264,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"classes/StrapiDataService.html":{}}}],["put(path",{"_index":304,"title":{},"body":{"injectables/ApiService.html":{}}}],["put(resource",{"_index":1039,"title":{},"body":{"injectables/DataService.html":{},"classes/StrapiDataService.html":{}}}],["put(url",{"_index":2011,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["página",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorModalComponent.html":{}}}],["q",{"_index":1362,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["que",{"_index":573,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthStrapiService.html":{},"components/LoginPage.html":{},"pipes/NamePipe.html":{},"injectables/TeamService.html":{},"index.html":{}}}],["queries",{"_index":1047,"title":{},"body":{"injectables/DataService.html":{},"classes/StrapiDataService.html":{}}}],["query",{"_index":281,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginPage.html":{},"injectables/MappingService.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{}}}],["query(collection(this._db",{"_index":1363,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["query(resource",{"_index":1045,"title":{},"body":{"injectables/DataService.html":{},"classes/StrapiDataService.html":{}}}],["queryparams",{"_index":739,"title":{},"body":{"guards/AuthGuard.html":{}}}],["queryplayersurl",{"_index":1510,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["querysnapshot",{"_index":1345,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["queryusersurl",{"_index":1511,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"classes/StrapiMappingService.html":{}}}],["radius",{"_index":1671,"title":{},"body":{"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/RegisterPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["reactive",{"_index":2987,"title":{},"body":{"components/SettingsPage.html":{}}}],["reactiveformsmodule",{"_index":3035,"title":{},"body":{"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{}}}],["reader",{"_index":2472,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onerror",{"_index":2476,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onload",{"_index":2474,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.readasdataurl(file",{"_index":2478,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["readonly",{"_index":2042,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["realiza",{"_index":898,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["realizadas",{"_index":3482,"title":{},"body":{"index.html":{}}}],["realizado",{"_index":3487,"title":{},"body":{"index.html":{}}}],["realizar",{"_index":3490,"title":{},"body":{"index.html":{}}}],["recorrer",{"_index":3213,"title":{},"body":{"injectables/TeamService.html":{}}}],["red",{"_index":1076,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/RegisterFormComponent.html":{}}}],["redirect",{"_index":714,"title":{},"body":{"guards/AuthGuard.html":{},"components/SplashPage.html":{}}}],["redirectto",{"_index":534,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecturl",{"_index":727,"title":{},"body":{"guards/AuthGuard.html":{},"components/SplashPage.html":{}}}],["redirige",{"_index":537,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ref",{"_index":1205,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ref(this._webstorage",{"_index":1310,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reference",{"_index":1219,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"directives/PositionImageDirective.html":{}}}],["regex",{"_index":2332,"title":{},"body":{"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"components/TeamsPage.html":{}}}],["regex.test(value",{"_index":2335,"title":{},"body":{"classes/NumericValidator.html":{}}}],["register",{"_index":194,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"classes/StrapiMediaService.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersAdminPage.html":{},"coverage.html":{}}}],["register'},{'name",{"_index":196,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["register(info",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["register.access'|translate",{"_index":2963,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.access\\'|translate",{"_index":2970,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.confirmpwd",{"_index":2941,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["register.confirmpwderror",{"_index":2948,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["register.email",{"_index":2938,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["register.emailerror",{"_index":2944,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["register.login'|translate",{"_index":2964,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.login\\'|translate",{"_index":2971,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.name",{"_index":2939,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["register.nameerror",{"_index":2945,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["register.nickerror",{"_index":2947,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["register.nickname",{"_index":2942,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["register.page",{"_index":2978,"title":{},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{}}}],["register.page.html",{"_index":2952,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page.scss",{"_index":2951,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.passworderror",{"_index":2946,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["register.pwd",{"_index":2940,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["register.submit",{"_index":2943,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["registered",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{}}}],["registerformcomponent",{"_index":193,"title":{"components/RegisterFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["registerinfo",{"_index":2960,"title":{},"body":{"components/RegisterPage.html":{}}}],["registeronchange",{"_index":2408,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["registeronchange(fn",{"_index":2427,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["registerontouched",{"_index":2409,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["registerontouched(fn",{"_index":2431,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["registerpage",{"_index":195,"title":{"components/RegisterPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["registerpagemodule",{"_index":2972,"title":{"modules/RegisterPageModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules.html":{},"overview.html":{}}}],["registerpageroutingmodule",{"_index":2976,"title":{"modules/RegisterPageRoutingModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["registers",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/PositionSelectorComponent.html":{}}}],["registration",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/Formats.html":{},"components/LoginPage.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/UserRegisterInfo.html":{},"miscellaneous/typealiases.html":{}}}],["regular",{"_index":2329,"title":{},"body":{"classes/NumericValidator.html":{}}}],["reject",{"_index":1301,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject('document",{"_index":1356,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject(err",{"_index":1331,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject(error",{"_index":1307,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["relación",{"_index":3321,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["related",{"_index":1686,"title":{},"body":{"injectables/GameService.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["relative",{"_index":1674,"title":{},"body":{"components/GameInfoComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/RegisterPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["remove",{"_index":1744,"title":{},"body":{"injectables/GameService.html":{},"components/PositionSelectorComponent.html":{}}}],["removes",{"_index":2889,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["removing",{"_index":2069,"title":{},"body":{"injectables/JwtService.html":{}}}],["renderer",{"_index":2792,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["renderer2",{"_index":2793,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["repeat",{"_index":2232,"title":{},"body":{"components/LoginPage.html":{},"directives/PositionImageDirective.html":{},"components/RegisterPage.html":{}}}],["repo",{"_index":95,"title":{},"body":{"components/AboutPage.html":{}}}],["represented",{"_index":1598,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/Player.html":{},"interfaces/Position.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["representing",{"_index":1174,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Player.html":{},"interfaces/Position.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{}}}],["represents",{"_index":1182,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["request",{"_index":55,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["requests",{"_index":44,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"injectables/AuthStrapiService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":2326,"title":{},"body":{"classes/NumericValidator.html":{},"interfaces/UserRegisterInfo.html":{}}}],["requirements",{"_index":2363,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["reset",{"_index":230,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/GamesPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersAdminPageModule.html":{},"overview.html":{}}}],["resize",{"_index":2653,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["resolve",{"_index":1300,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve()).catch((err",{"_index":1338,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve()).catch(err",{"_index":1342,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(await",{"_index":1367,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(deleteuser(this._user",{"_index":1423,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(docref.id)).catch(err",{"_index":1330,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(false",{"_index":1387,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(null",{"_index":1398,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(querysnapshot.docs.map(doc",{"_index":1347,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(this._auth!.currentuser",{"_index":1388,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolves",{"_index":722,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"guards/OwnerGuard.html":{}}}],["resource",{"_index":1031,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["resource_type",{"_index":1623,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["resources",{"_index":3101,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["response",{"_index":283,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"miscellaneous/typealiases.html":{}}}],["response.data",{"_index":914,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["response.data.attributes",{"_index":3109,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["response.data.id",{"_index":3108,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["response.data.map(data",{"_index":3104,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["response.map(media",{"_index":3134,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["response.meta.pagination",{"_index":3106,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["responsetype",{"_index":2044,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["resto",{"_index":576,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["result",{"_index":817,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/GamesPage.html":{},"classes/NumericValidator.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["result.data",{"_index":1848,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["result.data.imageurl",{"_index":1849,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["result.data.imageurl.url_medium",{"_index":1855,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["result.items[0].avatar_url",{"_index":89,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{}}}],["resultado",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{}}}],["resulting",{"_index":3478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["results",{"_index":214,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"injectables/MappingService.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/playerNotFoundException.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":929,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["ret['value",{"_index":2085,"title":{},"body":{"injectables/JwtService.html":{}}}],["retraso",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["retrieve",{"_index":1035,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/JwtService.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":1349,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["retrieves",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"injectables/JwtService.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["return",{"_index":320,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"classes/PasswordValidation.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["returned",{"_index":1221,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["returns",{"_index":60,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["rgba(0",{"_index":1681,"title":{},"body":{"components/GameInfoComponent.html":{},"components/LoginFormComponent.html":{}}}],["right",{"_index":1083,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PositionSelectorComponent.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["rightfield",{"_index":2508,"title":{},"body":{"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"interfaces/Position.html":{}}}],["roles",{"_index":1107,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["root",{"_index":312,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"guards/OwnerGuard.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["root'},{'name",{"_index":162,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["round",{"_index":2714,"title":{},"body":{"components/PlayersPage.html":{},"components/UsersAdminPage.html":{}}}],["rounde",{"_index":1905,"title":{},"body":{"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["rounded",{"_index":1960,"title":{},"body":{"components/HomePage.html":{}}}],["route",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginPage.html":{},"guards/OwnerGuard.html":{},"components/SplashPage.html":{}}}],["route.url.reduce((p",{"_index":728,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routeinclude",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["routeinclude(path",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthStrapiService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"guards/OwnerGuard.html":{},"components/PlayersPage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["routereusestrategy",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":247,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/GamesPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersAdminPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":251,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/GamesPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersAdminPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":564,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":717,"title":{},"body":{"guards/AuthGuard.html":{},"guards/OwnerGuard.html":{}}}],["routes",{"_index":246,"title":{"routes.html":{}},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/GamesPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"guards/OwnerGuard.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":241,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/GamesPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SplashPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersAdminPageModule.html":{}}}],["routing.module.ts",{"_index":245,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/GamesPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersAdminPageRoutingModule.html":{}}}],["row",{"_index":2638,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["running",{"_index":3547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["runs",{"_index":49,"title":{},"body":{"components/AboutPage.html":{},"interfaces/Game.html":{},"components/GameInfoComponent.html":{}}}],["ruta",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["rutas",{"_index":569,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rxjs",{"_index":306,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"injectables/MediaService.html":{},"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{},"injectables/PlayersService.html":{},"components/SplashPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"dependencies.html":{},"classes/playerNotFoundException.html":{}}}],["rxjs/operators",{"_index":725,"title":{},"body":{"guards/AuthGuard.html":{},"components/GamesPage.html":{},"guards/OwnerGuard.html":{},"components/PlayersPage.html":{},"components/SplashPage.html":{},"components/TeamsPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{}}}],["same",{"_index":2701,"title":{},"body":{"components/PlayersPage.html":{}}}],["sans",{"_index":2676,"title":{},"body":{"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["save",{"_index":2060,"title":{},"body":{"injectables/JwtService.html":{}}}],["saved",{"_index":1100,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"injectables/JwtService.html":{}}}],["saves",{"_index":2079,"title":{},"body":{"injectables/JwtService.html":{},"components/PlayerDetailComponent.html":{}}}],["savetoken",{"_index":2065,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken(token",{"_index":2077,"title":{},"body":{"injectables/JwtService.html":{}}}],["saving",{"_index":2549,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["scored",{"_index":1631,"title":{},"body":{"interfaces/Game.html":{}}}],["screen",{"_index":1978,"title":{},"body":{"components/HomePage.html":{},"components/SplashPage.html":{}}}],["se",{"_index":693,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"index.html":{}}}],["second",{"_index":2538,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["secondarygreen",{"_index":1683,"title":{},"body":{"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PositionSelectorComponent.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["secondbase",{"_index":2501,"title":{},"body":{"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"interfaces/Position.html":{}}}],["segunda",{"_index":899,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["segundo",{"_index":3488,"title":{},"body":{"index.html":{}}}],["selectable",{"_index":2396,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable'},{'name",{"_index":184,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["selectable.component",{"_index":3061,"title":{},"body":{"modules/SharedModule.html":{}}}],["selectable.component.html",{"_index":2398,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.scss",{"_index":2397,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts",{"_index":2389,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable.component.ts:102",{"_index":2432,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:109",{"_index":2435,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:118",{"_index":2416,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:130",{"_index":2424,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:153",{"_index":2426,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:161",{"_index":2417,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:30",{"_index":2441,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:35",{"_index":2445,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:40",{"_index":2443,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:45",{"_index":2442,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:50",{"_index":2413,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:62",{"_index":2418,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:69",{"_index":2420,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:74",{"_index":2446,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:81",{"_index":2438,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:93",{"_index":2428,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable/picture",{"_index":2388,"title":{},"body":{"components/PictureSelectableComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":613,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PositionSelectorComponent.html":{},"components/SettingsPage.html":{}}}],["selected:hover",{"_index":2916,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["selectedpositions",{"_index":2517,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["selecting",{"_index":2390,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selection",{"_index":2558,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["selector",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["selector'},{'name",{"_index":192,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["selector.component",{"_index":3054,"title":{},"body":{"modules/SharedModule.html":{}}}],["selector.component.html",{"_index":2876,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["selector.component.scss",{"_index":2875,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["selector.component.ts",{"_index":2874,"title":{},"body":{"components/PositionSelectorComponent.html":{},"coverage.html":{}}}],["selector.component.ts:107",{"_index":2890,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["selector.component.ts:116",{"_index":2891,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["selector.component.ts:22",{"_index":2885,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["selector.component.ts:27",{"_index":2886,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["selector.component.ts:32",{"_index":2900,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["selector.component.ts:37",{"_index":2902,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["selector.component.ts:42",{"_index":2897,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["selector.component.ts:47",{"_index":2898,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["selector.component.ts:52",{"_index":2896,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["selector.component.ts:62",{"_index":2884,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["selector.component.ts:71",{"_index":2888,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["selector.component.ts:98",{"_index":2893,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["selector/position",{"_index":2873,"title":{},"body":{"components/PositionSelectorComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["self",{"_index":2485,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["sender",{"_index":3566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sends",{"_index":2034,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["separacion",{"_index":1977,"title":{},"body":{"components/HomePage.html":{}}}],["separately",{"_index":2328,"title":{},"body":{"classes/NumericValidator.html":{}}}],["serif",{"_index":2677,"title":{},"body":{"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["server",{"_index":2020,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["service",{"_index":42,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/JwtService.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"guards/OwnerGuard.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["service.onrender.com/api",{"_index":3551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/MappingService.html":{},"injectables/MediaService.html":{},"miscellaneous/variables.html":{}}}],["services/api/auth.service",{"_index":726,"title":{},"body":{"guards/AuthGuard.html":{},"guards/OwnerGuard.html":{}}}],["servicio",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["sesión",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["set",{"_index":87,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"injectables/HttpClientProvider.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["set(this.selectedpositions",{"_index":2601,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["seta",{"_index":2535,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["seta.size",{"_index":2625,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["setb",{"_index":2532,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["setb.has(item",{"_index":2628,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["setb.size",{"_index":2626,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["setchecker",{"_index":2880,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["setdisabledstate",{"_index":2410,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":2434,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":2464,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["setdoc",{"_index":1199,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["setdoc(docref",{"_index":1336,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["setlanguage",{"_index":595,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/SettingsPage.html":{}}}],["setlanguage(lang",{"_index":640,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/SettingsPage.html":{}}}],["setplayer(_player",{"_index":2579,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["setpositionname(pos",{"_index":2807,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["sets",{"_index":642,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/HttpClientWebProvider.html":{},"components/PlayerDetailComponent.html":{},"directives/PositionImageDirective.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{}}}],["setservertrustmode",{"_index":1998,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["setservertrustmode(mode",{"_index":2013,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["setter",{"_index":2800,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["settimeout",{"_index":2784,"title":{},"body":{"injectables/PlayersService.html":{},"components/UsersAdminPage.html":{},"classes/playerNotFoundException.html":{}}}],["setting",{"_index":1003,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["settings",{"_index":560,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":198,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["settings.language",{"_index":3022,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.nickname",{"_index":3020,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.page",{"_index":3036,"title":{},"body":{"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{}}}],["settings.page.html",{"_index":2982,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.page.scss",{"_index":2981,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.update",{"_index":3021,"title":{},"body":{"components/SettingsPage.html":{}}}],["settingspage",{"_index":197,"title":{"components/SettingsPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["settingspagemodule",{"_index":3029,"title":{"modules/SettingsPageModule.html":{}},"body":{"modules/SettingsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["settingspageroutingmodule",{"_index":3033,"title":{"modules/SettingsPageRoutingModule.html":{}},"body":{"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["setusername(value",{"_index":2124,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["shadow",{"_index":150,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["shared/shared.module",{"_index":243,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/RegisterPageModule.html":{}}}],["sharedmodule",{"_index":228,"title":{"modules/SharedModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/GamesPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersAdminPageModule.html":{},"modules.html":{},"overview.html":{}}}],["shortstop",{"_index":2505,"title":{},"body":{"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"interfaces/Position.html":{},"components/PositionSelectorComponent.html":{}}}],["show",{"_index":1777,"title":{},"body":{"components/GamesPage.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["showdeletebutton",{"_index":2659,"title":{},"body":{"components/PlayerInfoComponent.html":{}}}],["showtoast",{"_index":2159,"title":{},"body":{"components/LoginPage.html":{},"components/SettingsPage.html":{}}}],["showtoast(message",{"_index":2170,"title":{},"body":{"components/LoginPage.html":{},"components/SettingsPage.html":{}}}],["si",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"pipes/NamePipe.html":{},"injectables/TeamService.html":{}}}],["sign",{"_index":1223,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signed",{"_index":1381,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanon",{"_index":1378,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously",{"_index":1212,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously(this._auth",{"_index":1306,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously(this._auth!).catch(error",{"_index":1395,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signing",{"_index":1380,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinwithemailandpassword",{"_index":1213,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinwithemailandpassword(this._auth",{"_index":1422,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout",{"_index":625,"title":{},"body":{"components/AppToolbarComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout(signinanon",{"_index":1382,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout(this._auth",{"_index":1315,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signs",{"_index":1377,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["siguiente",{"_index":429,"title":{},"body":{"components/AppComponent.html":{}}}],["simplificar",{"_index":907,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["simulate",{"_index":3332,"title":{},"body":{"components/UsersAdminPage.html":{}}}],["single",{"_index":1526,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"interfaces/Formats.html":{},"injectables/MappingService.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["sino",{"_index":1970,"title":{},"body":{"components/HomePage.html":{}}}],["sistema",{"_index":3517,"title":{},"body":{"index.html":{}}}],["size",{"_index":113,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"interfaces/Formats.html":{},"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/MediaFormat.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["sized",{"_index":2250,"title":{},"body":{"interfaces/Media.html":{}}}],["slam",{"_index":687,"title":{},"body":{"components/AppToolbarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["slam.appspot.com",{"_index":3564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slam.appspot.com/o/catcher%20logo.png?alt=media&token=bd536903",{"_index":2820,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["slam.appspot.com/o/noun",{"_index":2813,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["slam.appspot.com/o/rightfield.png?alt=media&token=68854fa0",{"_index":2857,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["slam.appspot.com/o/shortstop.png?alt=media&token=f05da330",{"_index":2842,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["slam.appspot.com/o/unknown.png?alt=media&token=756b782e",{"_index":2863,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["slam.firebaseapp.com",{"_index":3559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["small",{"_index":1589,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"guards/OwnerGuard.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["snapshot",{"_index":721,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"guards/OwnerGuard.html":{}}}],["snapshot.docs.map(doc",{"_index":1444,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["solid",{"_index":2205,"title":{},"body":{"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterPage.html":{}}}],["son",{"_index":3516,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"modules/GamesPageModule.html":{},"modules/GamesPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"injectables/MappingService.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["space",{"_index":1959,"title":{},"body":{"components/HomePage.html":{},"components/TeamInfoComponent.html":{}}}],["special",{"_index":1418,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["specific",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"injectables/MappingService.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"components/PlayerDetailComponent.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/VoteService.html":{},"miscellaneous/functions.html":{}}}],["specified",{"_index":1048,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"components/LoginPage.html":{},"classes/PasswordValidation.html":{},"components/PlayerDetailComponent.html":{},"directives/PositionImageDirective.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{}}}],["splash",{"_index":520,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{}}}],["splash'},{'name",{"_index":200,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["splash.page",{"_index":3088,"title":{},"body":{"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{}}}],["splash.page.html",{"_index":3069,"title":{},"body":{"components/SplashPage.html":{}}}],["splash.page.scss",{"_index":3068,"title":{},"body":{"components/SplashPage.html":{}}}],["splashpage",{"_index":199,"title":{"components/SplashPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["splashpagemodule",{"_index":3082,"title":{"modules/SplashPageModule.html":{}},"body":{"modules/SplashPageModule.html":{},"modules.html":{},"overview.html":{}}}],["splashpageroutingmodule",{"_index":3086,"title":{"modules/SplashPageRoutingModule.html":{}},"body":{"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["src/.../app.module.ts",{"_index":3468,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../blob.ts",{"_index":3470,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../custom",{"_index":3469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":3544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":3545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt.service.ts",{"_index":3540,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../picture",{"_index":3546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../strapi.ts",{"_index":3542,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.ts",{"_index":3541,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":522,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:43",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:54",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:79",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":706,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:13",{"_index":710,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:32",{"_index":718,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/owner.guard.ts",{"_index":2336,"title":{},"body":{"guards/OwnerGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/owner.guard.ts:15",{"_index":2338,"title":{},"body":{"guards/OwnerGuard.html":{}}}],["src/app/core/guards/owner.guard.ts:34",{"_index":2340,"title":{},"body":{"guards/OwnerGuard.html":{}}}],["src/app/core/helpers/blob",{"_index":1814,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["src/app/core/helpers/blob.ts",{"_index":3401,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/interfaces/data.ts",{"_index":2345,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"coverage.html":{}}}],["src/app/core/interfaces/game",{"_index":1652,"title":{},"body":{"components/GameInfoComponent.html":{},"components/GamesPage.html":{}}}],["src/app/core/interfaces/game.ts",{"_index":1624,"title":{},"body":{"interfaces/Game.html":{},"coverage.html":{}}}],["src/app/core/interfaces/media",{"_index":1577,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["src/app/core/interfaces/media.ts",{"_index":2249,"title":{},"body":{"interfaces/Media.html":{},"coverage.html":{}}}],["src/app/core/interfaces/player",{"_index":1535,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"components/HomePage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/TeamInfoComponent.html":{}}}],["src/app/core/interfaces/player.ts",{"_index":2495,"title":{},"body":{"interfaces/Player.html":{},"interfaces/Position.html":{},"coverage.html":{}}}],["src/app/core/interfaces/strapi.ts",{"_index":1585,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/interfaces/team",{"_index":1943,"title":{},"body":{"components/HomePage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{}}}],["src/app/core/interfaces/team.ts",{"_index":3136,"title":{},"body":{"interfaces/Team.html":{},"coverage.html":{}}}],["src/app/core/interfaces/trainer.ts",{"_index":3294,"title":{},"body":{"interfaces/Trainer.html":{},"coverage.html":{}}}],["src/app/core/interfaces/user",{"_index":1941,"title":{},"body":{"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/SettingsPage.html":{},"interfaces/UserCredentials.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/core/interfaces/user.ts",{"_index":3296,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/api/api.service",{"_index":2669,"title":{},"body":{"components/PlayerInfoComponent.html":{},"directives/PositionImageDirective.html":{}}}],["src/app/core/services/api/api.service.ts",{"_index":255,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/core/services/api/api.service.ts:100",{"_index":303,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/api.service.ts:112",{"_index":300,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/api.service.ts:124",{"_index":277,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/api.service.ts:14",{"_index":267,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/api.service.ts:34",{"_index":293,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/api.service.ts:54",{"_index":297,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/api.service.ts:64",{"_index":288,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/api.service.ts:75",{"_index":285,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/api.service.ts:87",{"_index":305,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/auth.service",{"_index":667,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{}}}],["src/app/core/services/api/auth.service.ts",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/api/auth.service.ts:21",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:27",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:32",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:37",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:42",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:47",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:52",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:57",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:62",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:67",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:74",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:81",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:87",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:93",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/csv.service",{"_index":1815,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["src/app/core/services/api/csv.service.ts",{"_index":941,"title":{},"body":{"injectables/CsvService.html":{},"coverage.html":{}}}],["src/app/core/services/api/csv.service.ts:18",{"_index":951,"title":{},"body":{"injectables/CsvService.html":{}}}],["src/app/core/services/api/csv.service.ts:40",{"_index":958,"title":{},"body":{"injectables/CsvService.html":{}}}],["src/app/core/services/api/data.service.ts",{"_index":1026,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/core/services/api/data.service.ts:21",{"_index":1046,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/api/data.service.ts:29",{"_index":1034,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/api/data.service.ts:38",{"_index":1037,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/api/data.service.ts:48",{"_index":1041,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/api/data.service.ts:56",{"_index":1029,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/api/firebase/firebase",{"_index":1086,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"coverage.html":{}}}],["src/app/core/services/api/game.service",{"_index":1808,"title":{},"body":{"components/GamesPage.html":{}}}],["src/app/core/services/api/game.service.ts",{"_index":1685,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["src/app/core/services/api/game.service.ts:114",{"_index":1705,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/services/api/game.service.ts:136",{"_index":1700,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/services/api/game.service.ts:18",{"_index":1706,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/services/api/game.service.ts:23",{"_index":1694,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/services/api/game.service.ts:44",{"_index":1703,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/services/api/game.service.ts:77",{"_index":1701,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/services/api/game.service.ts:99",{"_index":1696,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/services/api/mapping.service.ts",{"_index":2241,"title":{},"body":{"injectables/MappingService.html":{},"coverage.html":{}}}],["src/app/core/services/api/mapping.service.ts:18",{"_index":2247,"title":{},"body":{"injectables/MappingService.html":{}}}],["src/app/core/services/api/mapping.service.ts:26",{"_index":2244,"title":{},"body":{"injectables/MappingService.html":{}}}],["src/app/core/services/api/mapping.service.ts:34",{"_index":2248,"title":{},"body":{"injectables/MappingService.html":{}}}],["src/app/core/services/api/mapping.service.ts:42",{"_index":2243,"title":{},"body":{"injectables/MappingService.html":{}}}],["src/app/core/services/api/mapping.service.ts:50",{"_index":2246,"title":{},"body":{"injectables/MappingService.html":{}}}],["src/app/core/services/api/mapping.service.ts:58",{"_index":2245,"title":{},"body":{"injectables/MappingService.html":{}}}],["src/app/core/services/api/media.service",{"_index":1807,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["src/app/core/services/api/media.service.ts",{"_index":2252,"title":{},"body":{"injectables/MediaService.html":{},"coverage.html":{}}}],["src/app/core/services/api/media.service.ts:18",{"_index":2253,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/core/services/api/player.service",{"_index":1937,"title":{},"body":{"components/HomePage.html":{},"components/PlayersPage.html":{}}}],["src/app/core/services/api/player.service.ts",{"_index":2723,"title":{},"body":{"injectables/PlayersService.html":{},"coverage.html":{},"classes/playerNotFoundException.html":{}}}],["src/app/core/services/api/player.service.ts:117",{"_index":2740,"title":{},"body":{"injectables/PlayersService.html":{}}}],["src/app/core/services/api/player.service.ts:137",{"_index":2744,"title":{},"body":{"injectables/PlayersService.html":{}}}],["src/app/core/services/api/player.service.ts:154",{"_index":2737,"title":{},"body":{"injectables/PlayersService.html":{}}}],["src/app/core/services/api/player.service.ts:182",{"_index":2735,"title":{},"body":{"injectables/PlayersService.html":{}}}],["src/app/core/services/api/player.service.ts:23",{"_index":2746,"title":{},"body":{"injectables/PlayersService.html":{}}}],["src/app/core/services/api/player.service.ts:30",{"_index":2747,"title":{},"body":{"injectables/PlayersService.html":{}}}],["src/app/core/services/api/player.service.ts:35",{"_index":2748,"title":{},"body":{"injectables/PlayersService.html":{}}}],["src/app/core/services/api/player.service.ts:40",{"_index":2732,"title":{},"body":{"injectables/PlayersService.html":{}}}],["src/app/core/services/api/player.service.ts:62",{"_index":2742,"title":{},"body":{"injectables/PlayersService.html":{}}}],["src/app/core/services/api/player.service.ts:82",{"_index":2734,"title":{},"body":{"injectables/PlayersService.html":{}}}],["src/app/core/services/api/player.service.ts:93",{"_index":2738,"title":{},"body":{"injectables/PlayersService.html":{}}}],["src/app/core/services/api/strapi/auth",{"_index":802,"title":{},"body":{"injectables/AuthStrapiService.html":{},"components/HomePage.html":{},"coverage.html":{}}}],["src/app/core/services/api/strapi/strapi",{"_index":3090,"title":{},"body":{"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{},"coverage.html":{}}}],["src/app/core/services/api/team.service",{"_index":1810,"title":{},"body":{"components/GamesPage.html":{},"components/HomePage.html":{},"components/TeamsPage.html":{}}}],["src/app/core/services/api/team.service.ts",{"_index":3163,"title":{},"body":{"injectables/TeamService.html":{},"coverage.html":{}}}],["src/app/core/services/api/team.service.ts:124",{"_index":3176,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.service.ts:166",{"_index":3172,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.service.ts:23",{"_index":3177,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.service.ts:28",{"_index":3178,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.service.ts:33",{"_index":3168,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.service.ts:60",{"_index":3174,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.service.ts:97",{"_index":3170,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/users.service",{"_index":1940,"title":{},"body":{"components/HomePage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["src/app/core/services/api/users.service.ts",{"_index":3345,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/core/services/api/users.service.ts:17",{"_index":3357,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/users.service.ts:22",{"_index":3348,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/users.service.ts:41",{"_index":3350,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/users.service.ts:53",{"_index":3353,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/users.service.ts:63",{"_index":3355,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/users.service.ts:73",{"_index":3356,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/users.service.ts:87",{"_index":3352,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/vote.service",{"_index":1809,"title":{},"body":{"components/GamesPage.html":{}}}],["src/app/core/services/api/vote.service.ts",{"_index":3365,"title":{},"body":{"injectables/VoteService.html":{},"coverage.html":{}}}],["src/app/core/services/api/vote.service.ts:16",{"_index":3377,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/app/core/services/api/vote.service.ts:21",{"_index":3369,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/app/core/services/api/vote.service.ts:39",{"_index":3376,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/app/core/services/api/vote.service.ts:51",{"_index":3371,"title":{},"body":{"injectables/VoteService.html":{}}}],["src/app/core/services/custom",{"_index":666,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/CustomTranslateService.html":{},"components/SettingsPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/services/firebase/firebase.service",{"_index":1942,"title":{},"body":{"components/HomePage.html":{},"components/PlayerDetailComponent.html":{},"components/SettingsPage.html":{}}}],["src/app/core/services/firebase/firebase.service.ts",{"_index":1173,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["src/app/core/services/http/http",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["src/app/core/services/jwt.service.ts",{"_index":2058,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/jwt.service.ts:13",{"_index":2066,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/services/jwt.service.ts:22",{"_index":2074,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/services/jwt.service.ts:46",{"_index":2072,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/services/jwt.service.ts:56",{"_index":2078,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/services/jwt.service.ts:76",{"_index":2067,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/validators/numeric.ts",{"_index":2293,"title":{},"body":{"classes/NumericValidator.html":{},"coverage.html":{}}}],["src/app/core/validators/numeric.ts:15",{"_index":2300,"title":{},"body":{"classes/NumericValidator.html":{}}}],["src/app/core/validators/password.ts",{"_index":2349,"title":{},"body":{"classes/PasswordValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/password.ts:17",{"_index":2361,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["src/app/core/validators/password.ts:43",{"_index":2357,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["src/app/pages/about/about",{"_index":244,"title":{},"body":{"modules/AboutPageRoutingModule.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":232,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/about/about.page.ts:17",{"_index":34,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:30",{"_index":45,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:44",{"_index":64,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/games/games",{"_index":1920,"title":{},"body":{"modules/GamesPageRoutingModule.html":{}}}],["src/app/pages/games/games.module.ts",{"_index":1917,"title":{},"body":{"modules/GamesPageModule.html":{}}}],["src/app/pages/games/games.page.ts",{"_index":1761,"title":{},"body":{"components/GamesPage.html":{},"coverage.html":{}}}],["src/app/pages/games/games.page.ts:107",{"_index":1785,"title":{},"body":{"components/GamesPage.html":{}}}],["src/app/pages/games/games.page.ts:173",{"_index":1787,"title":{},"body":{"components/GamesPage.html":{}}}],["src/app/pages/games/games.page.ts:211",{"_index":1792,"title":{},"body":{"components/GamesPage.html":{}}}],["src/app/pages/games/games.page.ts:257",{"_index":1782,"title":{},"body":{"components/GamesPage.html":{}}}],["src/app/pages/games/games.page.ts:28",{"_index":1802,"title":{},"body":{"components/GamesPage.html":{}}}],["src/app/pages/games/games.page.ts:290",{"_index":1781,"title":{},"body":{"components/GamesPage.html":{}}}],["src/app/pages/games/games.page.ts:33",{"_index":1774,"title":{},"body":{"components/GamesPage.html":{}}}],["src/app/pages/games/games.page.ts:59",{"_index":1783,"title":{},"body":{"components/GamesPage.html":{}}}],["src/app/pages/games/games.page.ts:66",{"_index":1789,"title":{},"body":{"components/GamesPage.html":{}}}],["src/app/pages/home/home",{"_index":1993,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":1990,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":1921,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:102",{"_index":1928,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:31",{"_index":1936,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:36",{"_index":1927,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:62",{"_index":1934,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:72",{"_index":1932,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:79",{"_index":1931,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:86",{"_index":1933,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:94",{"_index":1935,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/login/login",{"_index":2240,"title":{},"body":{"modules/LoginPageRoutingModule.html":{}}}],["src/app/pages/login/login.module.ts",{"_index":2238,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["src/app/pages/login/login.page.ts",{"_index":2153,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/pages/login/login.page.ts:21",{"_index":2160,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:42",{"_index":2166,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:51",{"_index":2163,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:69",{"_index":2171,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:83",{"_index":2168,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:99",{"_index":2165,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/players/players",{"_index":2722,"title":{},"body":{"modules/PlayersPageRoutingModule.html":{}}}],["src/app/pages/players/players.module.ts",{"_index":2720,"title":{},"body":{"modules/PlayersPageModule.html":{}}}],["src/app/pages/players/players.page.ts",{"_index":2678,"title":{},"body":{"components/PlayersPage.html":{},"coverage.html":{}}}],["src/app/pages/players/players.page.ts:164",{"_index":2691,"title":{},"body":{"components/PlayersPage.html":{}}}],["src/app/pages/players/players.page.ts:213",{"_index":2690,"title":{},"body":{"components/PlayersPage.html":{}}}],["src/app/pages/players/players.page.ts:252",{"_index":2684,"title":{},"body":{"components/PlayersPage.html":{}}}],["src/app/pages/players/players.page.ts:26",{"_index":2683,"title":{},"body":{"components/PlayersPage.html":{}}}],["src/app/pages/players/players.page.ts:41",{"_index":2692,"title":{},"body":{"components/PlayersPage.html":{}}}],["src/app/pages/players/players.page.ts:50",{"_index":2685,"title":{},"body":{"components/PlayersPage.html":{}}}],["src/app/pages/players/players.page.ts:60",{"_index":2689,"title":{},"body":{"components/PlayersPage.html":{}}}],["src/app/pages/players/players.page.ts:97",{"_index":2687,"title":{},"body":{"components/PlayersPage.html":{}}}],["src/app/pages/register/register",{"_index":2979,"title":{},"body":{"modules/RegisterPageRoutingModule.html":{}}}],["src/app/pages/register/register.module.ts",{"_index":2977,"title":{},"body":{"modules/RegisterPageModule.html":{}}}],["src/app/pages/register/register.page.ts",{"_index":2950,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{}}}],["src/app/pages/register/register.page.ts:15",{"_index":2955,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:31",{"_index":2957,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:39",{"_index":2959,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:54",{"_index":2956,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/settings/settings",{"_index":3037,"title":{},"body":{"modules/SettingsPageRoutingModule.html":{}}}],["src/app/pages/settings/settings.module.ts",{"_index":3034,"title":{},"body":{"modules/SettingsPageModule.html":{}}}],["src/app/pages/settings/settings.page.ts",{"_index":2980,"title":{},"body":{"components/SettingsPage.html":{},"coverage.html":{}}}],["src/app/pages/settings/settings.page.ts:106",{"_index":2991,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:134",{"_index":2996,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:21",{"_index":2993,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:26",{"_index":2994,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:31",{"_index":2995,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:36",{"_index":2986,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:67",{"_index":2988,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:82",{"_index":2989,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:93",{"_index":2990,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/splash/splash",{"_index":3089,"title":{},"body":{"modules/SplashPageRoutingModule.html":{}}}],["src/app/pages/splash/splash.module.ts",{"_index":3087,"title":{},"body":{"modules/SplashPageModule.html":{}}}],["src/app/pages/splash/splash.page.ts",{"_index":3067,"title":{},"body":{"components/SplashPage.html":{},"coverage.html":{}}}],["src/app/pages/splash/splash.page.ts:15",{"_index":3071,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:34",{"_index":3072,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/teams/teams",{"_index":3293,"title":{},"body":{"modules/TeamsPageRoutingModule.html":{}}}],["src/app/pages/teams/teams.module.ts",{"_index":3291,"title":{},"body":{"modules/TeamsPageModule.html":{}}}],["src/app/pages/teams/teams.page.ts",{"_index":3233,"title":{},"body":{"components/TeamsPage.html":{},"coverage.html":{}}}],["src/app/pages/teams/teams.page.ts:124",{"_index":3245,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:151",{"_index":3247,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:187",{"_index":3240,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:25",{"_index":3239,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:37",{"_index":3248,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:47",{"_index":3241,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:54",{"_index":3246,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:81",{"_index":3243,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/users",{"_index":3324,"title":{},"body":{"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/shared/components/app",{"_index":577,"title":{},"body":{"components/AppToolbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/error",{"_index":1052,"title":{},"body":{"components/ErrorModalComponent.html":{},"guards/OwnerGuard.html":{},"coverage.html":{}}}],["src/app/shared/components/game",{"_index":1633,"title":{},"body":{"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"coverage.html":{}}}],["src/app/shared/components/login",{"_index":2099,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/picture",{"_index":2387,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/player",{"_index":1938,"title":{},"body":{"components/HomePage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"coverage.html":{}}}],["src/app/shared/components/position",{"_index":2872,"title":{},"body":{"components/PositionSelectorComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/register",{"_index":2918,"title":{},"body":{"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/team",{"_index":3138,"title":{},"body":{"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"coverage.html":{}}}],["src/app/shared/components/user",{"_index":3299,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["src/app/shared/directives/position",{"_index":2786,"title":{},"body":{"directives/PositionImageDirective.html":{},"coverage.html":{}}}],["src/app/shared/pipes/name.pipe.ts",{"_index":2256,"title":{},"body":{"pipes/NamePipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/name.pipe.ts:18",{"_index":2268,"title":{},"body":{"pipes/NamePipe.html":{}}}],["src/app/shared/shared.module",{"_index":1919,"title":{},"body":{"modules/GamesPageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersAdminPageModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":3041,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":308,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":3436,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":3437,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":2487,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/TeamInfoComponent.html":{}}}],["started",{"_index":3480,"title":{"index.html":{}},"body":{}}],["state",{"_index":712,"title":{},"body":{"guards/AuthGuard.html":{},"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{}}}],["statements",{"_index":3396,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1235,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["static",{"_index":2297,"title":{},"body":{"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{}}}],["status",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserInfoComponent.html":{}}}],["stop",{"_index":1371,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stops",{"_index":3147,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["storage",{"_index":1217,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/JwtService.html":{},"miscellaneous/variables.html":{}}}],["storagebucket",{"_index":3563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageref",{"_index":1309,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["store",{"_index":3562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":1179,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["story",{"_index":1628,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"interfaces/Team.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{}}}],["strapi",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["strapi.service",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"components/HomePage.html":{}}}],["strapi.service.ts",{"_index":803,"title":{},"body":{"injectables/AuthStrapiService.html":{},"coverage.html":{}}}],["strapi.service.ts:23",{"_index":811,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["strapi_data",{"_index":1544,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["strapi_data.data.map(player",{"_index":1545,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["strapi_data.data.map(user",{"_index":3123,"title":{},"body":{"classes/StrapiMappingService.html":{}}}],["strapiarrayresponse",{"_index":832,"title":{"interfaces/StrapiArrayResponse.html":{}},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapidata",{"_index":1599,"title":{"interfaces/StrapiData.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapidataservice",{"_index":463,"title":{"classes/StrapiDataService.html":{}},"body":{"modules/AppModule.html":{},"classes/StrapiDataService.html":{},"coverage.html":{}}}],["strapidataservice(api",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["strapiextendeduser",{"_index":833,"title":{"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{}},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapiloginpayload",{"_index":834,"title":{"interfaces/StrapiLoginPayload.html":{}},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapiloginresponse",{"_index":835,"title":{"interfaces/StrapiLoginResponse.html":{}},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["strapimappingservice",{"_index":3115,"title":{"classes/StrapiMappingService.html":{}},"body":{"classes/StrapiMappingService.html":{},"coverage.html":{}}}],["strapime",{"_index":836,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"miscellaneous/typealiases.html":{}}}],["strapimedia",{"_index":1607,"title":{"interfaces/StrapiMedia.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["strapimediaservice",{"_index":472,"title":{"classes/StrapiMediaService.html":{}},"body":{"modules/AppModule.html":{},"classes/StrapiMediaService.html":{},"coverage.html":{}}}],["strapimediaservice(api",{"_index":497,"title":{},"body":{"modules/AppModule.html":{}}}],["strapiregisterpayload",{"_index":837,"title":{"interfaces/StrapiRegisterPayload.html":{}},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapiregisterresponse",{"_index":838,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"miscellaneous/typealiases.html":{}}}],["strapiresponse",{"_index":839,"title":{"interfaces/StrapiResponse.html":{}},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{}}}],["strapiuploadresponse",{"_index":1606,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"miscellaneous/typealiases.html":{}}}],["strapiuser",{"_index":840,"title":{"interfaces/StrapiUser.html":{}},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["string",{"_index":63,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppToolbarComponent.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"injectables/MappingService.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"interfaces/ProviderMetadata.html":{},"components/SettingsPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"injectables/TeamService.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"miscellaneous/functions.html":{},"classes/playerNotFoundException.html":{},"miscellaneous/typealiases.html":{}}}],["strong",{"_index":1413,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["structure",{"_index":1178,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["style",{"_index":2798,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["styleurls",{"_index":20,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["subject",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subject.next(games",{"_index":1491,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subject.next(players",{"_index":1448,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subject.next(snapshot.docs.map(doc",{"_index":1375,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subject.next(teams",{"_index":1477,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subject.next(users",{"_index":1455,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subject.next(votes",{"_index":1498,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["submission",{"_index":2116,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["submit",{"_index":2554,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/SettingsPage.html":{}}}],["submitbutton",{"_index":2143,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["submitbutton:hover",{"_index":2148,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["submitted",{"_index":2104,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["subscr.complete",{"_index":1136,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["subscr.error('cannot",{"_index":1133,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["subscr.next(_info",{"_index":1143,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["subscr.next(data",{"_index":1135,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["subscribe",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"injectables/PlayersService.html":{},"components/SplashPage.html":{},"injectables/TeamService.html":{},"components/UserInfoComponent.html":{},"classes/playerNotFoundException.html":{}}}],["subscribe((result",{"_index":86,"title":{},"body":{"components/AboutPage.html":{}}}],["subscribes",{"_index":1369,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginPage.html":{}}}],["subscribetocollection(collectionname",{"_index":1373,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribetogames(subject",{"_index":1479,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribetoplayers(subject",{"_index":1440,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribetoteams(subject",{"_index":1457,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribetousers(subject",{"_index":1450,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribetovotes(subject",{"_index":1492,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscription",{"_index":1372,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["successful",{"_index":1222,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/RegisterPage.html":{}}}],["successfully",{"_index":1953,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/SettingsPage.html":{}}}],["super",{"_index":844,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{}}}],["superior",{"_index":2223,"title":{},"body":{"components/LoginPage.html":{}}}],["support",{"_index":3522,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":610,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["supporting",{"_index":2319,"title":{},"body":{"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{}}}],["supports",{"_index":2305,"title":{},"body":{"classes/NumericValidator.html":{}}}],["surname",{"_index":880,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Trainer.html":{},"interfaces/UserRegisterInfo.html":{}}}],["sus",{"_index":3215,"title":{},"body":{"injectables/TeamService.html":{}}}],["suscribe",{"_index":1117,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["svg",{"_index":3523,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":495,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"directives/PositionImageDirective.html":{},"components/TeamsPage.html":{}}}],["switch(info.role",{"_index":2694,"title":{},"body":{"components/PlayersPage.html":{}}}],["switchmap",{"_index":831,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"guards/OwnerGuard.html":{},"injectables/PlayersService.html":{},"components/SplashPage.html":{},"injectables/TeamService.html":{},"injectables/VoteService.html":{},"classes/playerNotFoundException.html":{}}}],["switchmap((createddocid",{"_index":3202,"title":{},"body":{"injectables/TeamService.html":{}}}],["switchmap((doc",{"_index":1714,"title":{},"body":{"injectables/GameService.html":{},"injectables/TeamService.html":{}}}],["switchmap((gamedocuments",{"_index":1730,"title":{},"body":{"injectables/GameService.html":{}}}],["switchmap((user",{"_index":897,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["switchmap(async",{"_index":2343,"title":{},"body":{"guards/OwnerGuard.html":{}}}],["switchmap(localteam",{"_index":1720,"title":{},"body":{"injectables/GameService.html":{}}}],["switchmap(logged",{"_index":3075,"title":{},"body":{"components/SplashPage.html":{}}}],["switchmap(votes",{"_index":3387,"title":{},"body":{"injectables/VoteService.html":{}}}],["t",{"_index":1030,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Formats.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["t.id",{"_index":924,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["t.uuid",{"_index":1863,"title":{},"body":{"components/GamesPage.html":{},"injectables/VoteService.html":{}}}],["tab",{"_index":69,"title":{},"body":{"components/AboutPage.html":{}}}],["table",{"_index":3439,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3438,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1186,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["también",{"_index":894,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["tap",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"classes/StrapiMediaService.html":{}}}],["tap(_",{"_index":431,"title":{},"body":{"components/AppComponent.html":{}}}],["tap(updateduser",{"_index":1168,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["tareas",{"_index":3481,"title":{},"body":{"index.html":{}}}],["te",{"_index":1971,"title":{},"body":{"components/HomePage.html":{}}}],["team",{"_index":202,"title":{"interfaces/Team.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/MediaFormat.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["team's",{"_index":3137,"title":{},"body":{"interfaces/Team.html":{}}}],["team)).pipe",{"_index":3201,"title":{},"body":{"injectables/TeamService.html":{}}}],["team.imageurl",{"_index":3259,"title":{},"body":{"components/TeamsPage.html":{}}}],["team.name",{"_index":1868,"title":{},"body":{"components/GamesPage.html":{},"components/TeamsPage.html":{},"injectables/VoteService.html":{}}}],["team.players",{"_index":1472,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["team.players.foreach((player",{"_index":3261,"title":{},"body":{"components/TeamsPage.html":{}}}],["team.players.foreach(player",{"_index":3203,"title":{},"body":{"injectables/TeamService.html":{}}}],["team.players.includes(player.uuid",{"_index":1471,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["team.service",{"_index":1709,"title":{},"body":{"injectables/GameService.html":{}}}],["team.story",{"_index":3260,"title":{},"body":{"components/TeamsPage.html":{}}}],["team.uuid",{"_index":1489,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{}}}],["team.uuid)).subscribe",{"_index":3225,"title":{},"body":{"injectables/TeamService.html":{}}}],["team?.name",{"_index":3149,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["teamdata",{"_index":1461,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/TeamsPage.html":{}}}],["teamdata.players",{"_index":3263,"title":{},"body":{"components/TeamsPage.html":{}}}],["teamdata.uuid",{"_index":1462,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["teamdata[`player",{"_index":3262,"title":{},"body":{"components/TeamsPage.html":{}}}],["teamdetailcomponent",{"_index":201,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["teaminfocomponent",{"_index":203,"title":{"components/TeamInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["teamname",{"_index":3391,"title":{},"body":{"injectables/VoteService.html":{}}}],["teamplayers",{"_index":1469,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/TeamService.html":{}}}],["teams",{"_index":546,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"injectables/AuthStrapiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"injectables/VoteService.html":{}}}],["teams'},{'name",{"_index":205,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["teams.csv",{"_index":3284,"title":{},"body":{"components/TeamsPage.html":{}}}],["teams.downloadteamscsv",{"_index":3285,"title":{},"body":{"components/TeamsPage.html":{}}}],["teams.find(t",{"_index":1862,"title":{},"body":{"components/GamesPage.html":{},"injectables/VoteService.html":{}}}],["teams.find(team",{"_index":1488,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["teams.foreach(team",{"_index":1467,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["teams.map(team",{"_index":3258,"title":{},"body":{"components/TeamsPage.html":{}}}],["teams.page",{"_index":3292,"title":{},"body":{"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{}}}],["teams.page.html",{"_index":3235,"title":{},"body":{"components/TeamsPage.html":{}}}],["teams.page.scss",{"_index":3234,"title":{},"body":{"components/TeamsPage.html":{}}}],["teams.players",{"_index":3151,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["teamservice",{"_index":1693,"title":{"injectables/TeamService.html":{}},"body":{"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"coverage.html":{}}}],["teamspage",{"_index":204,"title":{"components/TeamsPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["teamspagemodule",{"_index":3286,"title":{"modules/TeamsPageModule.html":{}},"body":{"modules/TeamsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["teamspageroutingmodule",{"_index":3290,"title":{"modules/TeamsPageRoutingModule.html":{}},"body":{"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["teamsref",{"_index":1458,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["teamsservice",{"_index":1692,"title":{},"body":{"injectables/GameService.html":{}}}],["teamssubject",{"_index":1478,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["teamssubject.pipe(take(1)).subscribe(teams",{"_index":1485,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"interfaces/Formats.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["tengo",{"_index":2214,"title":{},"body":{"components/LoginPage.html":{}}}],["tertiary",{"_index":1823,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["test",{"_index":2403,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["text",{"_index":120,"title":{},"body":{"components/AboutPage.html":{},"components/ErrorModalComponent.html":{},"interfaces/Formats.html":{},"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/MediaFormat.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["text.player",{"_index":3159,"title":{},"body":{"components/TeamInfoComponent.html":{}}}],["text/csv;charset=utf",{"_index":974,"title":{},"body":{"injectables/CsvService.html":{}}}],["textarea",{"_index":2651,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["textcolor",{"_index":118,"title":{},"body":{"components/AboutPage.html":{},"components/GameInfoComponent.html":{},"components/HomePage.html":{},"components/PlayerDetailComponent.html":{},"components/PositionSelectorComponent.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["textcolordark",{"_index":138,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["texto",{"_index":2216,"title":{},"body":{"components/LoginPage.html":{},"pipes/NamePipe.html":{},"components/PlayerInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["then((_",{"_index":2095,"title":{},"body":{"injectables/JwtService.html":{}}}],["then((ret",{"_index":2084,"title":{},"body":{"injectables/JwtService.html":{}}}],["third",{"_index":2895,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["thirdbase",{"_index":2502,"title":{},"body":{"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"interfaces/Position.html":{}}}],["this._app",{"_index":1252,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth",{"_index":1258,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth!.currentuser.isanonymous",{"_index":1390,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.currentuser",{"_index":1305,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.onauthstatechanged(async",{"_index":1261,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.signout",{"_index":1383,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._db",{"_index":1254,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._games.asobservable",{"_index":1243,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{}}}],["this._games.next(games",{"_index":1736,"title":{},"body":{"injectables/GameService.html":{}}}],["this._games.next(updatedgames",{"_index":1753,"title":{},"body":{"injectables/GameService.html":{}}}],["this._games.value.map(g",{"_index":1750,"title":{},"body":{"injectables/GameService.html":{}}}],["this._isadmin.asobservable",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._isadmin.next(false",{"_index":1123,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._isadmin.next(user.isadmin",{"_index":1125,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this._isadmin.next(userdata[\"isadmin",{"_index":1287,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.asobservable",{"_index":1237,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.next(false",{"_index":1276,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.next(true",{"_index":1264,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._isowner.asobservable",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._isowner.next(false",{"_index":1124,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._isowner.next(user.isowner",{"_index":1126,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this._isowner.next(userdata[\"isowner",{"_index":1288,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._logged.asobservable",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["this._logged.next(false",{"_index":850,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["this._logged.next(true",{"_index":848,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["this._modal.dismiss(formwithuuid",{"_index":2619,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this._modal.dismiss(null",{"_index":2615,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this._modal.dismiss(this.form.value",{"_index":2620,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this._picture.asobservable",{"_index":2444,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.complete",{"_index":2460,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(obj",{"_index":2462,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(picture",{"_index":2466,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._players",{"_index":1269,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._players.asobservable",{"_index":1239,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["this._players.next",{"_index":2785,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["this._players.next(players",{"_index":2773,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["this._teams",{"_index":1271,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._teams.asobservable",{"_index":1241,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/TeamService.html":{}}}],["this._user",{"_index":1262,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._user.asobservable",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["this._user.next(_info",{"_index":1142,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this._user.next(data",{"_index":1120,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this._user.next(null",{"_index":851,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["this._user.next(updateduser",{"_index":1169,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this._user.next(user",{"_index":849,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["this._username.asobservable",{"_index":661,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["this._username.next(user.name",{"_index":675,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["this._users.asobservable",{"_index":1247,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["this._votes.asobservable",{"_index":1245,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._webstorage",{"_index":1256,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.api.delete(`/${resource}`).pipe(map((response",{"_index":3114,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["this.api.get(`/${resource",{"_index":3102,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["this.api.get(`/${resource}`).pipe(map((response",{"_index":3107,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["this.api.post(`/${resource",{"_index":3110,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["this.api.put(`/${resource",{"_index":3112,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["this.apisvc.get('/users/me').pipe",{"_index":896,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["this.apisvc.get(`/extended",{"_index":904,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["this.apisvc.post(\"/auth/local",{"_index":858,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["this.apisvc.post(\"/auth/local/register",{"_index":876,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["this.apisvc.post('/upload",{"_index":3132,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["this.applybackgroundimage(positionurl",{"_index":2868,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["this.aresetsequal(this.selectedpositions",{"_index":2623,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.auth.isadmin",{"_index":733,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.auth.islogged",{"_index":732,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.auth.isowner",{"_index":652,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["this.auth.isowner$.pipe",{"_index":2342,"title":{},"body":{"guards/OwnerGuard.html":{}}}],["this.auth.login(credentials).subscribe",{"_index":2181,"title":{},"body":{"components/LoginPage.html":{}}}],["this.auth.logout",{"_index":684,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/HomePage.html":{}}}],["this.auth.logout().subscribe(async",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.me().subscribe((user",{"_index":674,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["this.auth.register(registerinfo).subscribe",{"_index":2961,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.auth.user$.pipe(map(user",{"_index":656,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["this.authservice.islogged$.pipe",{"_index":3074,"title":{},"body":{"components/SplashPage.html":{}}}],["this.authservice.me().subscribe(user",{"_index":3000,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.authservice.updateuser(updateduser).subscribe(async",{"_index":3014,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.changepicture",{"_index":2480,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.changepicture(reader.result",{"_index":2475,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.checkuserstatus(user.uid",{"_index":1275,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.connectanonymously",{"_index":1384,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.createbody(body",{"_index":2048,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.createheaders(headers",{"_index":2046,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.csvservice.converttocsv(formattedgames",{"_index":1901,"title":{},"body":{"components/GamesPage.html":{}}}],["this.csvservice.converttocsv(formattedplayers",{"_index":2711,"title":{},"body":{"components/PlayersPage.html":{}}}],["this.csvservice.converttocsv(formattedteams",{"_index":3283,"title":{},"body":{"components/TeamsPage.html":{}}}],["this.csvservice.converttocsv(voteswithdetails",{"_index":1876,"title":{},"body":{"components/GamesPage.html":{}}}],["this.csvservice.downloadfile(csvdata",{"_index":1877,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["this.errormessage",{"_index":2175,"title":{},"body":{"components/LoginPage.html":{}}}],["this.fb.group",{"_index":2999,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.fileupload(blob",{"_index":1319,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.firebase.imageupload(blob).then(data",{"_index":1578,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["this.firebaseauth.me",{"_index":2783,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["this.firebaseauth.user$.subscribe(user",{"_index":2762,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["this.firebaseservice.imageupload(file).then((url",{"_index":2630,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.firebaseservice.teams",{"_index":3380,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.firebaseservice.votes",{"_index":3379,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.firebasesvc.connectuserwithemailandpassword(credentials.username",{"_index":1128,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.firebasesvc.createuserwithemailandpassword(info.email",{"_index":1137,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.firebasesvc.games",{"_index":1711,"title":{},"body":{"injectables/GameService.html":{}}}],["this.firebasesvc.islogged$.subscribe(logged",{"_index":1118,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.firebasesvc.players",{"_index":2760,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["this.firebasesvc.teams",{"_index":3182,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.firebasesvc.updatedocument(\"players",{"_index":2778,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["this.firebasesvc.updatedocumentfield(\"teams\",team.uuid,\"imageurl\",team.imageurl",{"_index":3221,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.firebasesvc.updatedocumentfield(\"teams\",team.uuid,\"name\",team.name",{"_index":3219,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.firebasesvc.updatedocumentfield(\"teams\",team.uuid,\"story\",team.story",{"_index":3220,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.firebasesvc.user.uid)).pipe(map(data",{"_index":1150,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.firebasesvc.user?.uid",{"_index":1140,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.firebasesvc.users",{"_index":3359,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.form",{"_index":2129,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.form.controls['imageurl'].setvalue(_player.imageurl",{"_index":2589,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.form.controls['imageurl'].setvalue(url",{"_index":2631,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.form.controls['name'].setvalue(_player.name",{"_index":2587,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.form.controls[control].errors",{"_index":2621,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.form.get('imageurl')?.value",{"_index":2624,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.form.get('name')?.value",{"_index":2605,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.form.get('positions",{"_index":2597,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.form.value",{"_index":2617,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.form?.controls['confirmpassword'].setvalue",{"_index":2935,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.form?.controls['password'].setvalue",{"_index":2934,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.form?.controls['username'].setvalue(value",{"_index":2128,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form?.valid",{"_index":2135,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.formbuilder.array",{"_index":2603,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.formbuilder.group",{"_index":2130,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.games",{"_index":1710,"title":{},"body":{"injectables/GameService.html":{}}}],["this.games$.pipe(take(1)).subscribe((games",{"_index":1879,"title":{},"body":{"components/GamesPage.html":{}}}],["this.gameservice.addgame(info.data).subscribe(async",{"_index":1819,"title":{},"body":{"components/GamesPage.html":{}}}],["this.gameservice.deletegame(_game).subscribe",{"_index":1841,"title":{},"body":{"components/GamesPage.html":{}}}],["this.gameservice.deletegame(info.data).subscribe(async",{"_index":1837,"title":{},"body":{"components/GamesPage.html":{}}}],["this.gameservice.games",{"_index":1801,"title":{},"body":{"components/GamesPage.html":{}}}],["this.gameservice.updategame(info.data).subscribe(async",{"_index":1834,"title":{},"body":{"components/GamesPage.html":{}}}],["this.getgame(doc.id",{"_index":1733,"title":{},"body":{"injectables/GameService.html":{}}}],["this.getheader(url",{"_index":323,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.getvotesforgame(gameid).pipe",{"_index":3386,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.hasvalue",{"_index":2461,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.hidden",{"_index":673,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["this.http.delete(url",{"_index":328,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(\"https://api.github.com/search/users?q=kuzafkto+in%3ausername",{"_index":84,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{}}}],["this.http.get(url",{"_index":322,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.getimage(url",{"_index":321,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.patch(url",{"_index":327,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(url",{"_index":326,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.put(url",{"_index":325,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.httpclient.delete(url",{"_index":2052,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.get(url",{"_index":2043,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.patch(url",{"_index":2051,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.post(url",{"_index":2047,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.put(url",{"_index":2049,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.imageurl",{"_index":2590,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.init",{"_index":1017,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.init(config",{"_index":1249,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.initialselectedpositions",{"_index":2600,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.inputpositions",{"_index":2901,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["this.isdisabled",{"_index":2465,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.isuserconnected",{"_index":1393,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.isuserconnectedanonymously",{"_index":1394,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.jwt.gettoken",{"_index":319,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.jwtsvc.destroytoken().pipe(map(_",{"_index":870,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["this.jwtsvc.loadtoken().subscribe(token",{"_index":845,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["this.lang",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["this.lang.languagechange$.subscribe((language",{"_index":677,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["this.lang.onlanguagechange(lang",{"_index":686,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["this.languagechangesubject.asobservable",{"_index":1007,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.languagechangesubject.next(lang",{"_index":1024,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.languagechangesubject.value",{"_index":1020,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.languageselected",{"_index":678,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/SettingsPage.html":{}}}],["this.loading",{"_index":1816,"title":{},"body":{"components/GamesPage.html":{},"components/HomePage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["this.mapplayers",{"_index":2757,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["this.mapplayers.bind(this",{"_index":2758,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["this.mapuser",{"_index":1274,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.me",{"_index":1167,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.me().subscribe",{"_index":1119,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.me().subscribe(data",{"_index":1134,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.me().subscribe(user",{"_index":847,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["this.media.upload(blob).subscribe((media",{"_index":1853,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["this.mediaservice.upload(blob).subscribe((media",{"_index":3012,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.modal.create",{"_index":1843,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["this.modalcontroller.create",{"_index":2344,"title":{},"body":{"guards/OwnerGuard.html":{}}}],["this.modalcontroller.dismiss",{"_index":1071,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["this.mode",{"_index":2586,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.name",{"_index":2604,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.oncardclicked.emit",{"_index":1653,"title":{},"body":{"components/GameInfoComponent.html":{},"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{}}}],["this.onchangecb",{"_index":2910,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["this.onchangecb(position",{"_index":2911,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["this.ondeleteclicked.emit",{"_index":1654,"title":{},"body":{"components/GameInfoComponent.html":{},"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{}}}],["this.onsubmit.emit(this.form?.value",{"_index":2136,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.ontouchedcb",{"_index":2913,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["this.passwordmatchvalidator",{"_index":2933,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.picturemodal?.dismiss",{"_index":2481,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.players",{"_index":2759,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["this.players.addplayer(info.data).subscribe(async",{"_index":2703,"title":{},"body":{"components/PlayersPage.html":{}}}],["this.players.deleteplayer(_player).subscribe",{"_index":2693,"title":{},"body":{"components/PlayersPage.html":{}}}],["this.players.deleteplayer(info.data).subscribe(async",{"_index":2697,"title":{},"body":{"components/PlayersPage.html":{}}}],["this.players.getall().pipe",{"_index":3191,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.players.players$.pipe(take(1)).subscribe((players",{"_index":2704,"title":{},"body":{"components/PlayersPage.html":{}}}],["this.players.updateplayer(info.data).subscribe(async",{"_index":2695,"title":{},"body":{"components/PlayersPage.html":{}}}],["this.position",{"_index":2810,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["this.positionschange.emit(this.setchecker",{"_index":2909,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["this.positionsselected",{"_index":2912,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["this.positionsselected.indexof(position.id",{"_index":2905,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["this.positionsselected.splice(index",{"_index":2906,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["this.positionsselected?.length",{"_index":2907,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["this.postregister(_info).subscribe(data",{"_index":1141,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.presentform(game",{"_index":1839,"title":{},"body":{"components/GamesPage.html":{}}}],["this.presentform(null",{"_index":1833,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["this.presentform(player",{"_index":2698,"title":{},"body":{"components/PlayersPage.html":{}}}],["this.presentform(team",{"_index":3252,"title":{},"body":{"components/TeamsPage.html":{}}}],["this.propagatechange",{"_index":2463,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.propagatechange(picture",{"_index":2467,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.renderer.setstyle(this.el.nativeelement",{"_index":2869,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":2174,"title":{},"body":{"components/LoginPage.html":{}}}],["this.route.snapshot.queryparams['redirecturl",{"_index":3076,"title":{},"body":{"components/SplashPage.html":{}}}],["this.router.createurltree(['/login",{"_index":741,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.createurltree(['/splash",{"_index":738,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.events.subscribe((event",{"_index":669,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["this.router.navigate(['/about",{"_index":680,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["this.router.navigate(['/games",{"_index":682,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/HomePage.html":{}}}],["this.router.navigate(['/home",{"_index":2182,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigate(['/login",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/HomePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["this.router.navigate(['/players",{"_index":679,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/HomePage.html":{}}}],["this.router.navigate(['/register",{"_index":2188,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigate(['/settings",{"_index":683,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["this.router.navigate(['/teams",{"_index":681,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/HomePage.html":{}}}],["this.router.navigate(['/users",{"_index":685,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["this.router.navigate(['home",{"_index":2962,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.router.navigatebyurl(redirecturl",{"_index":3077,"title":{},"body":{"components/SplashPage.html":{}}}],["this.router.url",{"_index":672,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["this.router.url.includes(path",{"_index":438,"title":{},"body":{"components/AppComponent.html":{}}}],["this.savetoken(this.token",{"_index":2098,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.selectedpositions",{"_index":2622,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.selectedpositions.add(position",{"_index":2596,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.selectedpositions.add(positionid",{"_index":2614,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.selectedpositions.clear",{"_index":2594,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.selectedpositions.delete(positionid",{"_index":2611,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.selectedpositions.has(positionid",{"_index":2606,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.setchecker.add(pos",{"_index":2908,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["this.setchecker.clear",{"_index":2904,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["this.showtoast('error",{"_index":3016,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.showtoast('login",{"_index":2184,"title":{},"body":{"components/LoginPage.html":{}}}],["this.showtoast('user",{"_index":3015,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.showtoast(`language",{"_index":3004,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.submitted",{"_index":2134,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.subscribetogames(this._games",{"_index":1270,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.subscribetoplayers(this._players",{"_index":1267,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.subscribetoteams(this._teams",{"_index":1268,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.subscribetousers(this._users",{"_index":1273,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.subscribetovotes(this._votes",{"_index":1272,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.teams",{"_index":3181,"title":{},"body":{"injectables/TeamService.html":{},"injectables/VoteService.html":{}}}],["this.teams$.pipe",{"_index":3388,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.teams.addteam(info.data).subscribe(async",{"_index":3249,"title":{},"body":{"components/TeamsPage.html":{}}}],["this.teams.deleteteam(_team).subscribe",{"_index":3254,"title":{},"body":{"components/TeamsPage.html":{}}}],["this.teams.deleteteam(info.data).subscribe(async",{"_index":3251,"title":{},"body":{"components/TeamsPage.html":{}}}],["this.teams.teams$.pipe(take(1)).subscribe((teams",{"_index":3256,"title":{},"body":{"components/TeamsPage.html":{}}}],["this.teams.updateteam(info.data).subscribe(async",{"_index":3250,"title":{},"body":{"components/TeamsPage.html":{}}}],["this.teamservice.teams",{"_index":1858,"title":{},"body":{"components/GamesPage.html":{}}}],["this.teamsservice.getteam(localteamuuid).pipe",{"_index":1719,"title":{},"body":{"injectables/GameService.html":{}}}],["this.teamsservice.getteam(visitorteamuuid).pipe",{"_index":1721,"title":{},"body":{"injectables/GameService.html":{}}}],["this.toast.create(options",{"_index":1825,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{}}}],["this.toast.create(options).then((toast",{"_index":3255,"title":{},"body":{"components/TeamsPage.html":{}}}],["this.toast.create(options).then(toast",{"_index":1829,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{}}}],["this.toastcontroller.create",{"_index":2179,"title":{},"body":{"components/LoginPage.html":{},"components/SettingsPage.html":{}}}],["this.token",{"_index":2086,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.translate.addlangs(['es",{"_index":1018,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.get(key",{"_index":1025,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.onlanguagechange(this.lang",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.setdefaultlang(defaultlang",{"_index":1021,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.use(defaultlang",{"_index":1022,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.use(lang).subscribe",{"_index":1023,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translateservice.getlang",{"_index":2997,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.translateservice.onlanguagechange(lang",{"_index":3003,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.updateuserstatus(data",{"_index":1121,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.user",{"_index":3001,"title":{},"body":{"components/SettingsPage.html":{},"components/UserInfoComponent.html":{}}}],["this.user.uuid",{"_index":3307,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.user?.name",{"_index":3311,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.user?.nickname",{"_index":3018,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.user?.picture",{"_index":3010,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.userform",{"_index":2998,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.userform.get('nickname')?.value",{"_index":3017,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.userform.get('picture')?.value",{"_index":3019,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.userform.patchvalue",{"_index":3002,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.userform.valid",{"_index":3006,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.userform.value",{"_index":3008,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.users",{"_index":3358,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.updateuser",{"_index":3309,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.userurl",{"_index":88,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{}}}],["this.uuid",{"_index":2593,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["this.votes",{"_index":3378,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.votes$.pipe",{"_index":3381,"title":{},"body":{"injectables/VoteService.html":{}}}],["this.voteservice.votes",{"_index":1857,"title":{},"body":{"components/GamesPage.html":{}}}],["throw",{"_index":499,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"injectables/PlayersService.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["throwerror",{"_index":1707,"title":{},"body":{"injectables/GameService.html":{}}}],["throwerror(new",{"_index":1742,"title":{},"body":{"injectables/GameService.html":{}}}],["thrown",{"_index":2753,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["thumbnail",{"_index":1590,"title":{},"body":{"interfaces/Formats.html":{},"components/LoginPage.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["tiene",{"_index":2196,"title":{},"body":{"components/LoginPage.html":{}}}],["tienes",{"_index":1064,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["timeout",{"_index":3334,"title":{},"body":{"components/UsersAdminPage.html":{}}}],["tipo",{"_index":3511,"title":{},"body":{"index.html":{}}}],["tipos",{"_index":3507,"title":{},"body":{"index.html":{}}}],["title",{"_index":111,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/PlayerDetailComponent.html":{},"components/SettingsPage.html":{}}}],["title.modal",{"_index":1078,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["titlesfont",{"_index":2675,"title":{},"body":{"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["titulo",{"_index":2199,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["toarray",{"_index":1187,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["toast",{"_index":1772,"title":{},"body":{"components/GamesPage.html":{},"components/LoginPage.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["toast.present",{"_index":1826,"title":{},"body":{"components/GamesPage.html":{},"components/LoginPage.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["toastcontroller",{"_index":1773,"title":{},"body":{"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["toastoptions",{"_index":1806,"title":{},"body":{"components/GamesPage.html":{},"components/HomePage.html":{},"components/PlayersPage.html":{},"components/TeamsPage.html":{},"components/UsersAdminPage.html":{}}}],["toda",{"_index":939,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["todo",{"_index":1973,"title":{},"body":{"components/HomePage.html":{}}}],["todos",{"_index":3189,"title":{},"body":{"injectables/TeamService.html":{},"index.html":{}}}],["toggle",{"_index":2557,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["toggleposition",{"_index":2524,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["toggleposition(positionid",{"_index":2555,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["token",{"_index":846,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"injectables/JwtService.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["tokens",{"_index":273,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthStrapiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/JwtService.html":{}}}],["toolbar",{"_index":580,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/PlayerDetailComponent.html":{}}}],["toolbar'},{'name",{"_index":164,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["toolbar.component",{"_index":3059,"title":{},"body":{"modules/SharedModule.html":{}}}],["toolbar.component.html",{"_index":582,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":581,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":579,"title":{},"body":{"components/AppToolbarComponent.html":{},"coverage.html":{}}}],["toolbar.component.ts:103",{"_index":630,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:110",{"_index":626,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:117",{"_index":632,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:124",{"_index":629,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:131",{"_index":631,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:138",{"_index":637,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:146",{"_index":633,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:155",{"_index":641,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:16",{"_index":608,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:21",{"_index":611,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:26",{"_index":624,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:31",{"_index":622,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:36",{"_index":616,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:41",{"_index":646,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:46",{"_index":662,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:51",{"_index":658,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:56",{"_index":653,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:61",{"_index":603,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:79",{"_index":634,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar/app",{"_index":578,"title":{},"body":{"components/AppToolbarComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["top",{"_index":123,"title":{},"body":{"components/AboutPage.html":{},"components/GameInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["total",{"_index":1604,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["touched",{"_index":2433,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["track",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/PlayerDetailComponent.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["traducción",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["traer",{"_index":3519,"title":{},"body":{"index.html":{}}}],["trainer",{"_index":1596,"title":{"interfaces/Trainer.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"interfaces/Trainer.html":{},"coverage.html":{}}}],["trainer.uuid",{"_index":3199,"title":{},"body":{"injectables/TeamService.html":{}}}],["trainers",{"_index":885,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"injectables/TeamService.html":{}}}],["transform",{"_index":1079,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/LoginPage.html":{},"pipes/NamePipe.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{}}}],["transform(name",{"_index":2266,"title":{},"body":{"pipes/NamePipe.html":{}}}],["transforma",{"_index":2257,"title":{},"body":{"pipes/NamePipe.html":{}}}],["transformado",{"_index":2272,"title":{},"body":{"pipes/NamePipe.html":{}}}],["transformar",{"_index":2269,"title":{},"body":{"pipes/NamePipe.html":{}}}],["transition",{"_index":148,"title":{},"body":{"components/AboutPage.html":{},"components/AppToolbarComponent.html":{},"components/GamesPage.html":{},"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["translate",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{}}}],["translate.service",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppToolbarComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{}}}],["translate.service.ts",{"_index":984,"title":{},"body":{"injectables/CustomTranslateService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["translate.service.ts:24",{"_index":1010,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translate.service.ts:29",{"_index":991,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translate.service.ts:44",{"_index":1001,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translate.service.ts:56",{"_index":1005,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translate.service.ts:68",{"_index":996,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translate.service.ts:77",{"_index":999,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translate/core",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":1012,"title":{},"body":{"injectables/CustomTranslateService.html":{},"dependencies.html":{}}}],["translated",{"_index":998,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translatehttploader",{"_index":1011,"title":{},"body":{"injectables/CustomTranslateService.html":{},"miscellaneous/functions.html":{}}}],["translatehttploader(http",{"_index":1014,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translateloader",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":3066,"title":{},"body":{"modules/SharedModule.html":{}}}],["translatemodule.forroot",{"_index":510,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":990,"title":{},"body":{"injectables/CustomTranslateService.html":{},"components/SettingsPage.html":{}}}],["translation",{"_index":993,"title":{},"body":{"injectables/CustomTranslateService.html":{},"miscellaneous/functions.html":{}}}],["translations",{"_index":607,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/SettingsPage.html":{}}}],["tras",{"_index":3491,"title":{},"body":{"index.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["triggered",{"_index":621,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["trimestre",{"_index":3489,"title":{},"body":{"index.html":{}}}],["true",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UsersAdminPage.html":{},"miscellaneous/variables.html":{}}}],["trunca",{"_index":2283,"title":{},"body":{"pipes/NamePipe.html":{}}}],["truncado",{"_index":2274,"title":{},"body":{"pipes/NamePipe.html":{}}}],["truncando",{"_index":2262,"title":{},"body":{"pipes/NamePipe.html":{}}}],["truncar",{"_index":2271,"title":{},"body":{"pipes/NamePipe.html":{}}}],["trust",{"_index":2018,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["try",{"_index":862,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/LoginPage.html":{}}}],["tslib",{"_index":3462,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":97,"title":{},"body":{"components/AboutPage.html":{}}}],["two",{"_index":2309,"title":{},"body":{"classes/NumericValidator.html":{},"components/PlayerDetailComponent.html":{}}}],["type",{"_index":38,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"components/GameInfoComponent.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"injectables/MappingService.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"pipes/NamePipe.html":{},"classes/NumericValidator.html":{},"guards/OwnerGuard.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"injectables/VoteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3538,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":967,"title":{},"body":{"injectables/CsvService.html":{},"classes/PasswordValidation.html":{}}}],["u00d1",{"_index":2378,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["u00f1",{"_index":2377,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["ui",{"_index":3557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["un",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"pipes/NamePipe.html":{},"injectables/TeamService.html":{},"index.html":{}}}],["una",{"_index":2290,"title":{},"body":{"pipes/NamePipe.html":{}}}],["undefined",{"_index":1643,"title":{},"body":{"components/GameInfoComponent.html":{},"pipes/NamePipe.html":{},"interfaces/Player.html":{},"interfaces/Position.html":{},"classes/StrapiMappingService.html":{},"interfaces/Team.html":{},"injectables/TeamService.html":{},"interfaces/User.html":{}}}],["unique",{"_index":1185,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Game.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"interfaces/Player.html":{},"interfaces/Position.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"interfaces/Trainer.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":1869,"title":{},"body":{"components/GamesPage.html":{},"injectables/VoteService.html":{}}}],["unless",{"_index":2325,"title":{},"body":{"classes/NumericValidator.html":{}}}],["unos",{"_index":2197,"title":{},"body":{"components/LoginPage.html":{}}}],["unsubscribe",{"_index":1201,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/PlayersService.html":{},"injectables/TeamService.html":{},"classes/playerNotFoundException.html":{}}}],["unsubscribegames",{"_index":1481,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["unsubscribeplayers",{"_index":1442,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["unsubscribeteams",{"_index":1459,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["unsubscribeusers",{"_index":1452,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["unsubscribevotes",{"_index":1494,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["up",{"_index":1224,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/NumericValidator.html":{},"components/SplashPage.html":{}}}],["update",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"injectables/GameService.html":{},"injectables/MappingService.html":{},"interfaces/MediaFormat.html":{},"components/PlayerDetailComponent.html":{},"injectables/PlayersService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["update(extended",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["updated",{"_index":1044,"title":{},"body":{"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/PlayersService.html":{},"components/SettingsPage.html":{},"classes/StrapiDataService.html":{},"components/UserInfoComponent.html":{},"classes/playerNotFoundException.html":{}}}],["updatedat",{"_index":1621,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["updatedgames",{"_index":1749,"title":{},"body":{"injectables/GameService.html":{}}}],["updatedoc",{"_index":1195,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedoc(doc(collectionref",{"_index":1341,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedoc(documentref",{"_index":1429,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedocument(collectionname",{"_index":1340,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedocumentfield(collectionname",{"_index":1426,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updateduser",{"_index":3007,"title":{},"body":{"components/SettingsPage.html":{}}}],["updateduser.picture",{"_index":3009,"title":{},"body":{"components/SettingsPage.html":{}}}],["updateemail",{"_index":1114,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["updategame",{"_index":1691,"title":{},"body":{"injectables/GameService.html":{}}}],["updategame(game",{"_index":1704,"title":{},"body":{"injectables/GameService.html":{}}}],["updatepassword",{"_index":1115,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["updateplayer",{"_index":2729,"title":{},"body":{"injectables/PlayersService.html":{}}}],["updateplayer(player",{"_index":2743,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["updateplayerurl",{"_index":1512,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["updateplayerurl(id",{"_index":1531,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["updates",{"_index":301,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"injectables/PlayersService.html":{},"components/SettingsPage.html":{},"classes/StrapiDataService.html":{},"injectables/TeamService.html":{},"components/UserInfoComponent.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["updateselected",{"_index":2525,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["updateselected(set",{"_index":2559,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["updateteam",{"_index":3167,"title":{},"body":{"injectables/TeamService.html":{}}}],["updateteam(team",{"_index":3175,"title":{},"body":{"injectables/TeamService.html":{}}}],["updateuser",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"injectables/UsersService.html":{}}}],["updateuser(user",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/UsersService.html":{}}}],["updateuserstatus",{"_index":1089,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["updateuserstatus(user",{"_index":1105,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["updateuserurl",{"_index":1513,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"classes/StrapiMappingService.html":{}}}],["updateuserurl(id",{"_index":1533,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"injectables/MappingService.html":{},"classes/StrapiMappingService.html":{}}}],["updating",{"_index":3312,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["upload",{"_index":1290,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"injectables/MediaService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"miscellaneous/typealiases.html":{}}}],["upload(blob",{"_index":1574,"title":{},"body":{"classes/FirebaseMediaService.html":{},"injectables/MediaService.html":{},"classes/StrapiMediaService.html":{}}}],["uploadbytes",{"_index":1207,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["uploadbytes(storageref",{"_index":1311,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["uploaded",{"_index":1296,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/MediaService.html":{},"classes/StrapiMediaService.html":{}}}],["uploadimage",{"_index":2730,"title":{},"body":{"injectables/PlayersService.html":{}}}],["uploadimage(file",{"_index":2745,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["uploading",{"_index":1856,"title":{},"body":{"components/GamesPage.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{}}}],["uploads",{"_index":1289,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"injectables/MediaService.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/SettingsPage.html":{},"classes/StrapiMediaService.html":{},"components/TeamsPage.html":{}}}],["uppercase",{"_index":1080,"title":{},"body":{"components/ErrorModalComponent.html":{},"classes/PasswordValidation.html":{},"components/SettingsPage.html":{}}}],["url",{"_index":70,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/CsvService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/MappingService.html":{},"interfaces/Media.html":{},"interfaces/MediaFormat.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"interfaces/ProviderMetadata.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{},"components/UserInfoComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["url(${url",{"_index":2870,"title":{},"body":{"directives/PositionImageDirective.html":{}}}],["url('../../../assets/imgs/login",{"_index":2229,"title":{},"body":{"components/LoginPage.html":{}}}],["url('../../../assets/imgs/registerbackground.png",{"_index":2969,"title":{},"body":{"components/RegisterPage.html":{}}}],["url.createobjecturl(blob",{"_index":977,"title":{},"body":{"injectables/CsvService.html":{}}}],["url.includes('auth",{"_index":316,"title":{},"body":{"injectables/ApiService.html":{}}}],["url_large",{"_index":1550,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["url_medium",{"_index":1554,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["url_small",{"_index":1552,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["url_thumbnail",{"_index":1556,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["urlencoded",{"_index":2006,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["urls",{"_index":2700,"title":{},"body":{"components/PlayersPage.html":{}}}],["urltree",{"_index":723,"title":{},"body":{"guards/AuthGuard.html":{}}}],["usage",{"_index":3577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usarlo",{"_index":3194,"title":{},"body":{"injectables/TeamService.html":{}}}],["use",{"_index":491,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PlayerInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["useclass",{"_index":521,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1176,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"directives/PositionImageDirective.html":{},"miscellaneous/variables.html":{}}}],["useexisting",{"_index":2458,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PositionSelectorComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":513,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["useful",{"_index":2314,"title":{},"body":{"classes/NumericValidator.html":{}}}],["user",{"_index":14,"title":{"interfaces/User.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"injectables/MappingService.html":{},"interfaces/MediaFormat.html":{},"guards/OwnerGuard.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"components/PositionSelectorComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"classes/StrapiMappingService.html":{},"interfaces/StrapiMedia.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"components/UserInfoComponent.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/playerNotFoundException.html":{},"miscellaneous/typealiases.html":{}}}],["user's",{"_index":74,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"interfaces/User.html":{},"components/UserInfoComponent.html":{}}}],["user.email",{"_index":937,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/StrapiMappingService.html":{}}}],["user.id",{"_index":936,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["user.isadmin",{"_index":3124,"title":{},"body":{"classes/StrapiMappingService.html":{}}}],["user.isowner",{"_index":3125,"title":{},"body":{"classes/StrapiMappingService.html":{}}}],["user.name",{"_index":1546,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{},"injectables/UsersService.html":{}}}],["user.nickname",{"_index":1164,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"injectables/FirebaseMappingService.html":{},"components/SettingsPage.html":{},"classes/StrapiMappingService.html":{},"injectables/UsersService.html":{}}}],["user.picture",{"_index":1165,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"components/SettingsPage.html":{}}}],["user.picture.data.attributes.formats.large?.url",{"_index":1551,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["user.picture.data.attributes.formats.medium?.url",{"_index":1555,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["user.picture.data.attributes.formats.small?.url",{"_index":1553,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["user.picture.data.attributes.formats.thumbnail?.url",{"_index":1557,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["user.picture.data.id",{"_index":1549,"title":{},"body":{"injectables/FirebaseMappingService.html":{}}}],["user.picture?.data",{"_index":1548,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["user.surname",{"_index":1547,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["user.uid",{"_index":1263,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user.username",{"_index":935,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["user.uuid",{"_index":1162,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"injectables/UsersService.html":{}}}],["user.uuid)).pipe",{"_index":1166,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["user?.email",{"_index":3314,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["user?.name",{"_index":3313,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["user?.nickname",{"_index":657,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/UserInfoComponent.html":{}}}],["user_id",{"_index":882,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["usercredential",{"_index":1216,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["usercredentials",{"_index":798,"title":{"interfaces/UserCredentials.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"classes/StrapiMediaService.html":{},"interfaces/UserCredentials.html":{},"coverage.html":{}}}],["userdata",{"_index":1285,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["userdata.uuid",{"_index":1454,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["userdocref",{"_index":1281,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["userform",{"_index":2983,"title":{},"body":{"components/SettingsPage.html":{}}}],["userid",{"_index":1279,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["userinfocomponent",{"_index":206,"title":{"components/UserInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":587,"title":{},"body":{"components/AppToolbarComponent.html":{},"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"components/LoginFormComponent.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/UserCredentials.html":{}}}],["username(value",{"_index":2127,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["userregisterinfo",{"_index":800,"title":{"interfaces/UserRegisterInfo.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"classes/StrapiMediaService.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{}}}],["users",{"_index":208,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"injectables/AuthStrapiService.html":{},"components/ErrorModalComponent.html":{},"interfaces/FirebaseDocument.html":{},"injectables/FirebaseMappingService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"injectables/MappingService.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"classes/StrapiMappingService.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"interfaces/User.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["users.isadmin",{"_index":3315,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["users/${id",{"_index":1539,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["users/${id}/?populate=picture&sort=id",{"_index":1538,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["users?filters[users_permissions_user]=${user.id}&populate=players&populate=teams&populate=trainers`).pipe",{"_index":905,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["users?populate=picture&sort=id",{"_index":1537,"title":{},"body":{"injectables/FirebaseMappingService.html":{},"classes/StrapiMappingService.html":{}}}],["users_permissions_user",{"_index":884,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/MediaFormat.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{}}}],["usersadminpage",{"_index":207,"title":{"components/UsersAdminPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersadminpagemodule",{"_index":3338,"title":{"modules/UsersAdminPageModule.html":{}},"body":{"modules/UsersAdminPageModule.html":{},"modules.html":{},"overview.html":{}}}],["usersadminpageroutingmodule",{"_index":3342,"title":{"modules/UsersAdminPageRoutingModule.html":{}},"body":{"modules/UsersAdminPageModule.html":{},"modules/UsersAdminPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["userservice",{"_index":3303,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["usersref",{"_index":1451,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["usersservice",{"_index":1925,"title":{"injectables/UsersService.html":{}},"body":{"components/HomePage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userurl",{"_index":26,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{}}}],["usevalue",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":804,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"components/LoginPage.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMediaService.html":{}}}],["usuario",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"index.html":{}}}],["utility",{"_index":2350,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["utilized",{"_index":807,"title":{},"body":{"injectables/AuthStrapiService.html":{},"classes/StrapiDataService.html":{},"classes/StrapiMappingService.html":{},"classes/StrapiMediaService.html":{}}}],["uuid",{"_index":1155,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"interfaces/Player.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"interfaces/Position.html":{},"interfaces/Team.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"classes/playerNotFoundException.html":{}}}],["uuid)).pipe",{"_index":1713,"title":{},"body":{"injectables/GameService.html":{},"injectables/TeamService.html":{}}}],["uuid)).pipe(switchmap((doc",{"_index":2775,"title":{},"body":{"injectables/PlayersService.html":{},"classes/playerNotFoundException.html":{}}}],["uuid|name|imageurl|positions",{"_index":3272,"title":{},"body":{"components/TeamsPage.html":{}}}],["v",{"_index":729,"title":{},"body":{"guards/AuthGuard.html":{}}}],["v.path",{"_index":731,"title":{},"body":{"guards/AuthGuard.html":{}}}],["va",{"_index":1972,"title":{},"body":{"components/HomePage.html":{}}}],["vacía",{"_index":538,"title":{},"body":{"modules/AppRoutingModule.html":{},"pipes/NamePipe.html":{}}}],["vacío",{"_index":2289,"title":{},"body":{"pipes/NamePipe.html":{}}}],["valid",{"_index":2303,"title":{},"body":{"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{}}}],["validate",{"_index":2313,"title":{},"body":{"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{}}}],["validation",{"_index":2295,"title":{},"body":{"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{}}}],["validationerrors",{"_index":2318,"title":{},"body":{"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{}}}],["validator",{"_index":2304,"title":{},"body":{"classes/NumericValidator.html":{},"components/RegisterFormComponent.html":{}}}],["validatorfn",{"_index":2301,"title":{},"body":{"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{}}}],["validators",{"_index":2125,"title":{},"body":{"components/LoginFormComponent.html":{},"classes/PasswordValidation.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["validators.email",{"_index":2932,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["validators.minlength(12",{"_index":2133,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["validators.minlength(2",{"_index":2132,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["validators.required",{"_index":2131,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["valor",{"_index":892,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["value",{"_index":73,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/JwtService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"classes/NumericValidator.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/TeamInfoComponent.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1184,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"classes/PasswordValidation.html":{},"injectables/VoteService.html":{}}}],["var",{"_index":116,"title":{},"body":{"components/AboutPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["variable",{"_index":3427,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3543,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1234,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["verifica",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"pipes/NamePipe.html":{}}}],["verificar",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"injectables/TeamService.html":{}}}],["version",{"_index":2251,"title":{},"body":{"interfaces/Media.html":{},"properties.html":{}}}],["via",{"_index":279,"title":{},"body":{"injectables/ApiService.html":{}}}],["vibration",{"_index":1930,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["view",{"_index":51,"title":{},"body":{"components/AboutPage.html":{}}}],["visibility",{"_index":651,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["visiting",{"_index":1632,"title":{},"body":{"interfaces/Game.html":{}}}],["visitor",{"_index":1629,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{}}}],["visitorruns",{"_index":1630,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GamesPage.html":{}}}],["visitorteam",{"_index":1727,"title":{},"body":{"injectables/GameService.html":{}}}],["visitorteamuuid",{"_index":1717,"title":{},"body":{"injectables/GameService.html":{}}}],["void",{"_index":61,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"injectables/CsvService.html":{},"injectables/CustomTranslateService.html":{},"components/ErrorModalComponent.html":{},"injectables/FirebaseAuthService.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"injectables/PlayersService.html":{},"directives/PositionImageDirective.html":{},"components/PositionSelectorComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SplashPage.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["vote",{"_index":1776,"title":{},"body":{"components/GamesPage.html":{},"injectables/VoteService.html":{}}}],["vote.category",{"_index":3384,"title":{},"body":{"injectables/VoteService.html":{}}}],["vote.game",{"_index":1866,"title":{},"body":{"components/GamesPage.html":{},"injectables/VoteService.html":{}}}],["vote.reference",{"_index":1864,"title":{},"body":{"components/GamesPage.html":{},"injectables/VoteService.html":{}}}],["votedata",{"_index":1496,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["votedata.uuid",{"_index":1497,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["votedteam",{"_index":1867,"title":{},"body":{"components/GamesPage.html":{}}}],["votes",{"_index":1146,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/GamesPage.html":{},"injectables/VoteService.html":{}}}],["votes.csv",{"_index":1878,"title":{},"body":{"components/GamesPage.html":{}}}],["votes.filter(vote",{"_index":3383,"title":{},"body":{"injectables/VoteService.html":{}}}],["votes.map(vote",{"_index":1861,"title":{},"body":{"components/GamesPage.html":{}}}],["votes.reduce((acc",{"_index":3390,"title":{},"body":{"injectables/VoteService.html":{}}}],["voteservice",{"_index":1771,"title":{"injectables/VoteService.html":{}},"body":{"components/GamesPage.html":{},"injectables/VoteService.html":{},"coverage.html":{}}}],["votesref",{"_index":1493,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["voteswithdetails",{"_index":1860,"title":{},"body":{"components/GamesPage.html":{}}}],["voteswithdetails.foreach((vote",{"_index":1872,"title":{},"body":{"components/GamesPage.html":{}}}],["vs",{"_index":1657,"title":{},"body":{"components/GameInfoComponent.html":{}}}],["válido",{"_index":2277,"title":{},"body":{"pipes/NamePipe.html":{}}}],["web.provider",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["web.provider.ts",{"_index":2021,"title":{},"body":{"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["web.provider.ts:10",{"_index":2026,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["web.provider.ts:126",{"_index":2031,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["web.provider.ts:141",{"_index":2028,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["weight",{"_index":139,"title":{},"body":{"components/AboutPage.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/PlayerDetailComponent.html":{},"components/PlayersPage.html":{},"components/PositionSelectorComponent.html":{},"components/SettingsPage.html":{},"components/TeamsPage.html":{}}}],["where(field",{"_index":1364,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["whether",{"_index":720,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"guards/OwnerGuard.html":{},"components/PlayerInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["white",{"_index":1077,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/TeamInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["whose",{"_index":1108,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["width",{"_index":701,"title":{},"body":{"components/AppToolbarComponent.html":{},"interfaces/Formats.html":{},"components/GameInfoComponent.html":{},"components/GamesPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/MediaFormat.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerDetailComponent.html":{},"components/PlayerInfoComponent.html":{},"components/PlayersPage.html":{},"directives/PositionImageDirective.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiExtendedUser-1.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"components/TeamInfoComponent.html":{},"components/TeamsPage.html":{},"components/UserInfoComponent.html":{},"components/UsersAdminPage.html":{}}}],["width:100",{"_index":3079,"title":{},"body":{"components/SplashPage.html":{}}}],["window.open(link",{"_index":90,"title":{},"body":{"components/AboutPage.html":{}}}],["winnerteam",{"_index":3385,"title":{},"body":{"injectables/VoteService.html":{}}}],["without",{"_index":2548,"title":{},"body":{"components/PlayerDetailComponent.html":{}}}],["wrap",{"_index":125,"title":{},"body":{"components/AboutPage.html":{},"components/PlayerDetailComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["wrapper",{"_index":2636,"title":{},"body":{"components/PlayerDetailComponent.html":{},"components/SettingsPage.html":{}}}],["write",{"_index":2439,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["writes",{"_index":2894,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["writevalue",{"_index":2411,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PositionSelectorComponent.html":{}}}],["writevalue(obj",{"_index":2437,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["writevalue(positions",{"_index":2892,"title":{},"body":{"components/PositionSelectorComponent.html":{}}}],["www",{"_index":2057,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["x",{"_index":98,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{}}}],["y",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthStrapiService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"pipes/NamePipe.html":{},"components/PlayerDetailComponent.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"injectables/TeamService.html":{},"index.html":{}}}],["yes",{"_index":1042,"title":{},"body":{"injectables/DataService.html":{},"injectables/HttpClientProvider.html":{}}}],["z",{"_index":2376,"title":{},"body":{"classes/PasswordValidation.html":{},"components/TeamInfoComponent.html":{}}}],["zone.js",{"_index":3464,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":229,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/GamesPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersAdminPageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying information about the user.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClientProvider)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/about/about.page.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor for AboutPage component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClientProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected HttpClientProvider service for making HTTP requests.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:30\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that runs after the component's view has been initialized.\nHere we make an HTTP GET request to fetch user data from GitHub API.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openLink\n                        \n                    \n                \n            \n            \n                \nopenLink(link: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:44\n                        \n                    \n\n\n            \n                \n                        Opens a link in a new browser tab.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                link\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The URL to open.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/about/about.page.ts:17\n                        \n                    \n\n            \n                \n                    URL of the user's avatar.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClientProvider } from 'src/app/core/services/http/http-client.provider';\n\n/**\n * Component for displaying information about the user.\n */\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage implements OnInit {\n\n  /**\n   * URL of the user's avatar.\n   */\n  userUrl = \"\";\n\n  /**\n   * Constructor for AboutPage component.\n   *\n   * @param http Injected HttpClientProvider service for making HTTP requests.\n   */\n  constructor(private http: HttpClientProvider) { }\n\n  /**\n   * Angular lifecycle hook that runs after the component's view has been initialized.\n   * Here we make an HTTP GET request to fetch user data from GitHub API.\n   */\n  ngOnInit() {\n    // Fetch user data from GitHub API\n    this.http.get(\"https://api.github.com/search/users?q=Kuzafkto+in%3Ausername\", null, null)\n      .subscribe((result: any) => {\n        // Set the URL of the user's avatar\n        this.userUrl = result.items[0].avatar_url;\n      });\n  }\n\n  /**\n   * Opens a link in a new browser tab.\n   *\n   * @param link The URL to open.\n   */\n  openLink(link: string) {\n    window.open(link, '_blank');\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      KuzaFkto\n    \n  \n\n  \n    \n    KuzaFkto\n    {{'about.description'|translate}}\n\n    \n      \n        \n          \n          GitHub (Kuza)\n        \n      \n      \n        \n          \n          GitHub (repo)\n        \n      \n      \n        \n          \n          LinkedIn\n        \n      \n\n      \n        \n          \n          Twitter (X)\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                .about-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .about-image {\n    margin:2%;\n    height: 50%; \n  }\n  \n  .about-title {\n    font-size: 2.5rem;\n    color: var(--ion-color-textColor);\n  }\n  \n  .about-description {\n    font-size: 1.5rem;\n    text-align: center;\n    color: var(--ion-color-textColor);\n  }\n  \n  .about-buttons {\n    margin-top: 2%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n  \n  .about-button-col {\n    padding: 0 5px;\n    flex: 1;\n  }\n  \n  \nion-content{\n  --background: var(--ion-color-primaryGreen);\n}\n\nIon-icon {\n  color:var(--ion-color-textColorDark);\n  font-weight: bold;\n}\n\nion-button.button {\nfont-size: 1.2rem;\nmargin: 2%;\ncolor:var(--ion-color-textColorDark);\n--background: var(--ion-color-mediumEndCallToAction);\n--background-hover: var(--ion-color-callToActionGreen);\n--background-activated: var(--ion-color-callToActionGreen);\n--background-focused: var(--ion-color-callToActionGreen);\ntransition: box-shadow 0.3s ease;\nfont-weight: bold;\n}\nion-button.button:hover {\n--background: var(--ion-color-callToActionGreen);\ncolor:var(--ion-color-textColorDark);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    KuzaFkto                KuzaFkto    {{\\'about.description\\'|translate}}                                      GitHub (Kuza)                                                GitHub (repo)                                                LinkedIn                                                Twitter (X)                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAboutPageModule -->\n\nSharedModule->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AboutPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPageRoutingModule } from './about-routing.module';\n\nimport { AboutPage } from './about.page';\nimport { SharedModule } from \"../../shared/shared.module\";\n\n@NgModule({\n    declarations: [AboutPage],\n    imports: [\n        AboutPageRoutingModule,\n        SharedModule\n    ]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageRoutingModule.html":{"url":"modules/AboutPageRoutingModule.html","title":"module - AboutPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AboutPage } from './about.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AboutPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service handles API requests to the backend.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getDataFromUrl\n                            \n                            \n                                getHeader\n                            \n                            \n                                getImage\n                            \n                            \n                                patch\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClientProvider, jwt: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/api.service.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of ApiService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClientProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP client provider.\n\n                                                        \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The JWT service for handling tokens.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(path: string, params: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/api.service.ts:124\n                        \n                    \n\n\n            \n                \n                        Deletes data via a DELETE request to the API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The API endpoint path.\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    The query parameters (optional).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the response.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(path: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/api.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Gets data from the API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The API endpoint path.\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    The query parameters (optional).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataFromUrl\n                        \n                    \n                \n            \n            \n                \ngetDataFromUrl(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/api.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Gets data from a given URL.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The URL to get data from.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeader\n                        \n                    \n                \n            \n            \n                \ngetHeader(url: string, accept: string | null, contentType: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/api.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Gets the headers for an API request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The URL for the request.\n\n                                            \n                                        \n                                        \n                                                accept\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    The Accept header value (optional).\n\n                                            \n                                        \n                                        \n                                                contentType\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    The Content-Type header value (optional).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The headers object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getImage\n                        \n                    \n                \n            \n            \n                \ngetImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/api.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Gets an image from the given URL.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The URL of the image.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the image.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patch\n                        \n                    \n                \n            \n            \n                \npatch(path: string, body: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/api.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Updates data via a PATCH request to the API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The API endpoint path.\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    The request body.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the response.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(path: string, body: Object, contentType: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/api.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Creates data via a POST request to the API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The API endpoint path.\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    The request body.\n\n                                            \n                                        \n                                        \n                                                contentType\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    The Content-Type header value (optional).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the response.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(path: string, body: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/api.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Updates data via a PUT request to the API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The API endpoint path.\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    The request body.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the response.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { HttpClientProvider } from '../http/http-client.provider';\nimport { JwtService } from '../jwt.service';\n\n/**\n * This service handles API requests to the backend.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  /**\n   * Creates an instance of ApiService.\n   * \n   * @param http The HTTP client provider.\n   * @param jwt The JWT service for handling tokens.\n   */\n  constructor(\n    private http: HttpClientProvider,\n    private jwt: JwtService\n  ) {}\n\n  /**\n   * Gets the headers for an API request.\n   * \n   * @param url The URL for the request.\n   * @param accept The Accept header value (optional).\n   * @param contentType The Content-Type header value (optional).\n   * @returns The headers object.\n   */\n  getHeader(url: string, accept: string | null = null, contentType: string | null = null): any {\n    var header: any = {};\n    if (accept) {\n      header['Accept'] = accept;\n    }\n    if (contentType) {\n      header['Content-Type'] = contentType;\n    }\n    if (!url.includes('auth')) {\n      header['Authorization'] = `Bearer ${this.jwt.getToken()}`;\n    }\n    return header;\n  }\n\n  /**\n   * Gets an image from the given URL.\n   * \n   * @param url The URL of the image.\n   * @returns An observable of the image.\n   */\n  getImage(url: string): Observable {\n    return this.http.getImage(url);\n  }\n\n  /**\n   * Gets data from a given URL.\n   * \n   * @param url The URL to get data from.\n   * @returns An observable of the data.\n   */\n  getDataFromUrl(url: string): Observable {\n    return this.http.get(url, {}, this.getHeader(url));\n  }\n\n  /**\n   * Gets data from the API.\n   * \n   * @param path The API endpoint path.\n   * @param params The query parameters (optional).\n   * @returns An observable of the data.\n   */\n  get(path: string, params: any = {}): Observable {\n    var url = `${environment.apiUrl}${path}`;\n    return this.http.get(url, params, this.getHeader(url));\n  }\n\n  /**\n   * Updates data via a PUT request to the API.\n   * \n   * @param path The API endpoint path.\n   * @param body The request body.\n   * @returns An observable of the response.\n   */\n  put(path: string, body: Object = {}): Observable {\n    var url = `${environment.apiUrl}${path}`;\n    return this.http.put(url, body, this.getHeader(url));\n  }\n\n  /**\n   * Creates data via a POST request to the API.\n   * \n   * @param path The API endpoint path.\n   * @param body The request body.\n   * @param contentType The Content-Type header value (optional).\n   * @returns An observable of the response.\n   */\n  post(path: string, body: Object = {}, contentType: string | null = null): Observable {\n    var url = `${environment.apiUrl}${path}`;\n    return this.http.post(url, body, this.getHeader(url));\n  }\n\n  /**\n   * Updates data via a PATCH request to the API.\n   * \n   * @param path The API endpoint path.\n   * @param body The request body.\n   * @returns An observable of the response.\n   */\n  patch(path: string, body: Object = {}): Observable {\n    var url = `${environment.apiUrl}${path}`;\n    return this.http.patch(url, body, this.getHeader(url));\n  }\n\n  /**\n   * Deletes data via a DELETE request to the API.\n   * \n   * @param path The API endpoint path.\n   * @param params The query parameters (optional).\n   * @returns An observable of the response.\n   */\n  delete(path: string, params: Object = {}): Observable {\n    var url = `${environment.apiUrl}${path}`;\n    return this.http.delete(url, params, this.getHeader(url));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicación.\nGestiona la lógica de enrutamiento y la traducción del idioma.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                lang\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                onLang\n                            \n                            \n                                onSignOut\n                            \n                            \n                                routeInclude\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: CustomTranslateService, auth: AuthService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor de AppComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de traducción personalizado.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de enrutamiento de Angular.\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ruta activada de Angular.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose(menu: IonMenu)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Cierra el menú lateral después de un retraso.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                menu\n                                            \n                                                        IonMenu\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La instancia de IonMenu a cerrar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLang\n                        \n                    \n                \n            \n            \n                \nonLang(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Cambia el idioma de la aplicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El nuevo idioma a establecer.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                false para prevenir la acción por defecto del evento.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSignOut\n                        \n                    \n                \n            \n            \n                \nonSignOut(menu: IonMenu)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del usuario y navega a la página de inicio de sesión.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                menu\n                                            \n                                                        IonMenu\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La instancia de IonMenu a cerrar después de cerrar sesión.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeInclude\n                        \n                    \n                \n            \n            \n                \nrouteInclude(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Verifica si la ruta actual incluye un determinado camino.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El camino a verificar en la URL actual.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si la URL actual incluye el camino, false en caso contrario.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:30\n                        \n                    \n\n            \n                \n                    Servicio de autenticación.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"es\"\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:32\n                        \n                    \n\n            \n                \n                    Ruta activada de Angular.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomTranslateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n            \n                \n                    Servicio de traducción personalizado.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from './core/services/api/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CustomTranslateService } from './core/services/custom-translate.service';\nimport { delay, of, tap } from 'rxjs';\nimport { IonMenu } from '@ionic/angular';\n\n/**\n * Componente principal de la aplicación.\n * Gestiona la lógica de enrutamiento y la traducción del idioma.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  lang: string = \"es\";  // Idioma por defecto\n\n  /**\n   * Constructor de AppComponent\n   * \n   * @param translate Servicio de traducción personalizado.\n   * @param auth Servicio de autenticación.\n   * @param router Servicio de enrutamiento de Angular.\n   * @param route Ruta activada de Angular.\n   */\n  constructor(\n    public translate: CustomTranslateService,\n    public auth: AuthService,\n    private router: Router,\n    public route: ActivatedRoute\n  ) {\n    this.translate.onLanguageChange(this.lang);  // Establece el idioma por defecto en el servicio de traducción\n  }\n\n  /**\n   * Cambia el idioma de la aplicación.\n   * \n   * @param lang El nuevo idioma a establecer.\n   * @returns false para prevenir la acción por defecto del evento.\n   */\n  onLang(lang: string) {\n    this.lang = lang;\n    this.translate.onLanguageChange(this.lang);\n    return false;\n  }\n\n  /**\n   * Cierra el menú lateral después de un retraso.\n   * \n   * @param menu La instancia de IonMenu a cerrar.\n   */\n  close(menu: IonMenu) {\n    of('').pipe(\n      delay(500),  // Espera 500 ms antes de ejecutar el siguiente paso\n      tap(_ => menu.close())  // Cierra el menú\n    ).subscribe();\n  }\n\n  /**\n   * Cierra la sesión del usuario y navega a la página de inicio de sesión.\n   * \n   * @param menu La instancia de IonMenu a cerrar después de cerrar sesión.\n   */\n  onSignOut(menu: IonMenu) {\n    this.auth.logout().subscribe(async _ => {\n      await this.router.navigate(['/login']);\n      menu.close();\n    });\n  }\n\n  /**\n   * Verifica si la ruta actual incluye un determinado camino.\n   * \n   * @param path El camino a verificar en la URL actual.\n   * @returns true si la URL actual incluye el camino, false en caso contrario.\n   */\n  routeInclude(path: string): boolean {\n    return this.router.url.includes(path);\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Inject, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy, Platform } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { HttpClientProvider } from './core/services/http/http-client.provider';\nimport { HttpClientWebProvider } from './core/services/http/http-client-web.provider';\nimport { AuthService } from './core/services/api/auth.service';\nimport { ApiService } from './core/services/api/api.service';\nimport { DataService } from './core/services/api/data.service';\nimport { JwtService } from './core/services/jwt.service';\nimport { StrapiDataService } from './core/services/api/strapi/strapi-data.service';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { SharedModule } from './shared/shared.module';\nimport { MediaService } from './core/services/api/media.service';\nimport { StrapiMediaService } from './core/services/api/strapi/strapi-media.service';\nimport { createTranslateLoader } from './core/services/custom-translate.service';\nimport { MappingService } from './core/services/api/mapping.service';\nimport { FirebaseService } from './core/services/firebase/firebase.service';\nimport { FirebaseAuthService } from './core/services/api/firebase/firebase-auth.service';\nimport { environment } from 'src/environments/environment';\nimport { AuthStrapiService } from './core/services/api/strapi/auth-strapi.service';\nimport { FirebaseMediaService } from './core/services/api/firebase/firebase-media.service';\n\n/**\n * Factory function to create an instance of MediaService based on the backend configuration.\n *\n * @param backend The backend to use ('Strapi' or 'Firebase').\n * @param api The ApiService instance.\n * @param firebase The FirebaseService instance.\n * @returns An instance of MediaService.\n */\nexport function MediaServiceFactory(\n  backend: string,\n  api: ApiService,\n  firebase: FirebaseService\n) {\n  switch (backend) {\n    case 'Strapi':\n      return new StrapiMediaService(api);\n    case 'Firebase':\n      return new FirebaseMediaService(firebase);\n    default:\n      throw new Error(\"Not implemented\");\n  }\n}\n\n/**\n * Factory function to create an instance of DataService based on the backend configuration.\n *\n * @param backend The backend to use ('Strapi').\n * @param api The ApiService instance.\n * @returns An instance of DataService.\n */\nexport function DataServiceFactory(\n  backend: string,\n  api: ApiService\n) {\n  switch (backend) {\n    case 'Strapi':\n      return new StrapiDataService(api);\n    default:\n      throw new Error(\"Not implemented\");\n  }\n}\n\n/**\n * Factory function to create an instance of HttpClientProvider.\n *\n * @param http The HttpClient instance.\n * @param platform The Platform instance.\n * @returns An instance of HttpClientProvider.\n */\nexport function httpProviderFactory(\n  http: HttpClient,\n  platform: Platform\n) {\n  return new HttpClientWebProvider(http);\n}\n\n/**\n * Factory function to create an instance of AuthService based on the backend configuration.\n *\n * @param backend The backend to use ('Strapi' or 'Firebase').\n * @param jwt The JwtService instance.\n * @param api The ApiService instance.\n * @param firebase The FirebaseService instance.\n * @returns An instance of AuthService.\n */\nexport function AuthServiceFactory(\n  backend: string,\n  jwt: JwtService,\n  api: ApiService,\n  firebase: FirebaseService\n) {\n  switch (backend) {\n    case 'Strapi':\n      return new AuthStrapiService(jwt, api);\n    case 'Firebase':\n      return new FirebaseAuthService(firebase);\n    default:\n      throw new Error(\"Not implemented\");\n  }\n}\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    }),\n    SharedModule\n  ],\n  providers: [\n    {\n      provide: 'firebase-config',\n      useValue: environment.firebase\n    },\n    {\n      provide: 'backend',\n      useValue: 'Firebase'\n    },\n    {\n      provide: 'home',\n      useValue: '/home'\n    },\n    {\n      provide: 'login',\n      useValue: '/login'\n    },\n    {\n      provide: 'afterLogin',\n      useValue: '/home'\n    },\n    {\n      provide: 'splash',\n      useValue: '/splash'\n    },\n    {\n      provide: HttpClientProvider,\n      deps: [HttpClient, Platform],\n      useFactory: httpProviderFactory,\n    },\n    {\n      provide: AuthService,\n      deps: ['backend', JwtService, ApiService, FirebaseService],\n      useFactory: AuthServiceFactory,\n    },\n    {\n      provide: DataService,\n      deps: ['backend', ApiService],\n      useFactory: DataServiceFactory,\n    },\n    {\n      provide: MediaService,\n      deps: ['backend', ApiService, FirebaseService],\n      useFactory: MediaServiceFactory,\n    },\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { OwnerGuard } from './core/guards/owner.guard';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => \"import('./pages/home/home.module').then(m => m.HomePageModule)\",\n    canActivate: [AuthGuard]  // Protege la ruta 'home' con AuthGuard\n  },\n  {\n    path: '',\n    redirectTo: 'splash',\n    pathMatch: 'full'  // Redirige la ruta vacía a 'splash'\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./pages/login/login.module').then(m => m.LoginPageModule)\"\n  },\n  {\n    path: 'register',\n    loadChildren: () => \"import('./pages/register/register.module').then(m => m.RegisterPageModule)\"\n  },\n  {\n    path: 'players',\n    loadChildren: () => \"import('./pages/players/players.module').then(m => m.PlayersPageModule)\",\n    canActivate: [AuthGuard]  // Protege la ruta 'players' con AuthGuard\n  },\n  {\n    path: 'teams',\n    loadChildren: () => \"import('./pages/teams/teams.module').then(m => m.TeamsPageModule)\",\n    canActivate: [AuthGuard]  // Protege la ruta 'teams' con AuthGuard\n  },\n  {\n    path: 'about',\n    loadChildren: () => \"import('./pages/about/about.module').then(m => m.AboutPageModule)\"\n  },\n  {\n    path: 'splash',\n    loadChildren: () => \"import('./pages/splash/splash.module').then(m => m.SplashPageModule)\"\n  },\n  {\n    path: 'games',\n    loadChildren: () => \"import('./pages/games/games.module').then(m => m.GamesPageModule)\",\n    canActivate: [AuthGuard]  // Protege la ruta 'games' con AuthGuard\n  },\n  {\n    path: 'users-admin',\n    loadChildren: () => \"import('./pages/users-admin/users-admin.module').then(m => m.UsersAdminPageModule)\",\n    canActivate: [AuthGuard, OwnerGuard]  // Protege la ruta 'users-admin' con AuthGuard y OwnerGuard\n  },\n  {\n    path: 'settings',\n    loadChildren: () => \"import('./pages/settings/settings.module').then( m => m.SettingsPageModule)\",\n    canActivate: [AuthGuard] \n  },\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })  // Configura el enrutador con las rutas y la estrategia de precarga\n  ],\n  exports: [RouterModule]  // Exporta RouterModule para que esté disponible en el resto de la aplicación\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppToolbarComponent.html":{"url":"components/AppToolbarComponent.html","title":"component - AppToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/app-toolbar/app-toolbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toolbar\n            \n\n\n\n            \n                styleUrls\n                ./app-toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app-toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _username\n                            \n                            \n                                hidden\n                            \n                            \n                                isOwner$\n                            \n                            \n                                nickname$\n                            \n                            \n                                username$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                goToAbout\n                            \n                            \n                                    Public\n                                goToGames\n                            \n                            \n                                    Public\n                                goToPlayers\n                            \n                            \n                                    Public\n                                goToSettings\n                            \n                            \n                                    Public\n                                goToTeams\n                            \n                            \n                                goToUsersAdmin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                            \n                                setLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                languages\n                            \n                            \n                                languageSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onLanguage\n                            \n                            \n                                onProfile\n                            \n                            \n                                onSignout\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, auth: AuthService, lang: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:61\n                            \n                        \n\n                \n                    \n                            Constructor for AppToolbarComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAuthService for authentication operations.\n\n\n                                                        \n                                                \n                                                \n                                                        lang\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nCustomTranslateService for handling translations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        languages\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"es\", \"en\"]\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:16\n                            \n                        \n                \n                    \n                        List of supported languages.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        languageSelected\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"es\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:21\n                            \n                        \n                \n                    \n                        Currently selected language.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onLanguage\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:36\n                            \n                        \n                \n                    \n                        Event emitted when the language change action is triggered.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onProfile\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:31\n                            \n                        \n                \n                    \n                        Event emitted when the profile action is triggered.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onSignout\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:26\n                            \n                        \n                \n                    \n                        Event emitted when the signout action is triggered.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        goToAbout\n                        \n                    \n                \n            \n            \n                \n                        \n                    goToAbout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Navigates to the about page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        goToGames\n                        \n                    \n                \n            \n            \n                \n                        \n                    goToGames()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Navigates to the games page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        goToPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    goToPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Navigates to the players page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        goToSettings\n                        \n                    \n                \n            \n            \n                \n                        \n                    goToSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Navigates to the settings page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        goToTeams\n                        \n                    \n                \n            \n            \n                \n                        \n                    goToTeams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Navigates to the teams page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToUsersAdmin\n                        \n                    \n                \n            \n            \n                \ngoToUsersAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:146\n                        \n                    \n\n\n            \n                \n                        Navigates to the users admin page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that is called after data-bound properties are initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogout\n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:138\n                        \n                    \n\n\n            \n                \n                        Logs out the current user and navigates to the login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLanguage\n                        \n                    \n                \n            \n            \n                \nsetLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:155\n                        \n                    \n\n\n            \n                \n                        Sets the application language.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new language to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\"Kuza Fkto\")\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:41\n                        \n                    \n\n            \n                \n                    BehaviorSubject to hold the username.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:61\n                        \n                    \n\n            \n                \n                    Flag to control toolbar visibility.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwner$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.auth.isOwner$\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:56\n                        \n                    \n\n            \n                \n                    Observable to check if the user is an owner.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.auth.user$.pipe(map(user => user?.nickname))\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:51\n                        \n                    \n\n            \n                \n                    Observable for the nickname, derived from the authenticated user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._username.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/app-toolbar/app-toolbar.component.ts:46\n                        \n                    \n\n            \n                \n                    Observable for the username.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { CustomTranslateService } from 'src/app/core/services/custom-translate.service';\nimport { AuthService } from 'src/app/core/services/api/auth.service';\nimport { BehaviorSubject, map } from 'rxjs';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './app-toolbar.component.html',\n  styleUrls: ['./app-toolbar.component.scss'],\n})\nexport class AppToolbarComponent implements OnInit {\n  /**\n   * List of supported languages.\n   */\n  @Input() languages: string[] = [\"es\", \"en\"];\n\n  /**\n   * Currently selected language.\n   */\n  @Input() languageSelected: string = \"es\";\n\n  /**\n   * Event emitted when the signout action is triggered.\n   */\n  @Output() onSignout = new EventEmitter();\n\n  /**\n   * Event emitted when the profile action is triggered.\n   */\n  @Output() onProfile = new EventEmitter();\n\n  /**\n   * Event emitted when the language change action is triggered.\n   */\n  @Output() onLanguage = new EventEmitter();\n\n  /**\n   * BehaviorSubject to hold the username.\n   */\n  private _username = new BehaviorSubject(\"Kuza Fkto\");\n\n  /**\n   * Observable for the username.\n   */\n  username$ = this._username.asObservable();\n\n  /**\n   * Observable for the nickname, derived from the authenticated user.\n   */\n  nickname$ = this.auth.user$.pipe(map(user => user?.nickname));\n\n  /**\n   * Observable to check if the user is an owner.\n   */\n  isOwner$ = this.auth.isOwner$;\n\n  /**\n   * Flag to control toolbar visibility.\n   */\n  hidden = false;\n\n  /**\n   * Constructor for AppToolbarComponent.\n   * \n   * @param router - Router for navigation.\n   * @param auth - AuthService for authentication operations.\n   * @param lang - CustomTranslateService for handling translations.\n   */\n  constructor(\n    private router: Router,\n    private auth: AuthService,\n    private lang: CustomTranslateService\n  ) {}\n\n  /**\n   * Angular lifecycle hook that is called after data-bound properties are initialized.\n   */\n  ngOnInit() {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const currentUrl = this.router.url;\n        if (currentUrl === '/login' || currentUrl === '/register') {\n          this.hidden = true;\n        } else {\n          this.hidden = false;\n          this.auth.me().subscribe((user) => {\n            this._username.next(user.name);\n          });\n        }\n      }\n    });\n\n    // Subscribe to language changes\n    this.lang.languageChange$.subscribe((language) => {\n      this.languageSelected = language;\n    });\n  }\n\n  /**\n   * Navigates to the players page.\n   */\n  public goToPlayers() {\n    this.router.navigate(['/players']);\n  }\n\n  /**\n   * Navigates to the about page.\n   */\n  public goToAbout() {\n    this.router.navigate(['/about']);\n  }\n\n  /**\n   * Navigates to the teams page.\n   */\n  public goToTeams() {\n    this.router.navigate(['/teams']);\n  }\n\n  /**\n   * Navigates to the games page.\n   */\n  public goToGames() {\n    this.router.navigate(['/games']);\n  }\n\n  /**\n   * Navigates to the settings page.\n   */\n  public goToSettings() {\n    this.router.navigate(['/settings']);\n  }\n\n  /**\n   * Logs out the current user and navigates to the login page.\n   */\n  onLogout() {\n    this.auth.logout();\n    this.router.navigate(['/login']);\n  }\n\n  /**\n   * Navigates to the users admin page.\n   */\n  goToUsersAdmin() {\n    this.router.navigate(['/users-admin']);\n  }\n\n  /**\n   * Sets the application language.\n   * \n   * @param lang - The new language to set.\n   */\n  setLanguage(lang: string) {\n    this.languageSelected = lang;\n    this.lang.onLanguageChange(lang);\n  }\n}\n\n    \n\n    \n        \n  Home Slam\n\n  \n  \n    \n      \n    \n\n    \n      \n    \n    \n      \n    \n\n  \n\n  \n  \n    {{ nickname$ | async }}\n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app-toolbar.component.scss\n                \n                ion-toolbar{\n--background: var(--ion-color-appBarBackground);\n}\n\n.home-slam-title {\n  font-size: 3rem;\n  font-family: 'baseballFont'; /* se podría cambiar esta fuente por otra nueva luego */\n}\n\n.user-name {\n  font-size: 1.5rem; \n}\n\n.button-icon {\n  width: 3em;\n  height: 3em;\n}\n\n.hidden {\n  visibility: hidden;\n}\n\nion-button {\n  color:var(--ion-color-mediumEndCallToAction);\n  --background: var(--ion-color-mediumEndCallToAction);\n  --background-hover: var(--ion-color-callToActionGreen);\n  --background-activated: var(--ion-color-callToActionGreen);\n  --background-focused: var(--ion-color-callToActionGreen);\n  transition: box-shadow 0.3s ease;\n}\nion-button:hover {\n  ion-icon{\n    color:var(--ion-color-textColorDark)\n  }\n  --background: var(--ion-color-callToActionGreen);\n  color:var(--ion-color-textColorDark);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Home Slam                                                        {{ nickname$ | async }}                                                          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard to protect routes based on user authentication and authorization.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthGuard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle authentication state.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to navigate or redirect routes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/auth.guard.ts:32\n                        \n                    \n\n\n            \n                \n                        Determines whether a route can be activated based on user authentication and authorization.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The activated route snapshot.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The router state snapshot.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable that resolves to a boolean or UrlTree.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from '../services/api/auth.service';\n\n/**\n * Guard to protect routes based on user authentication and authorization.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  /**\n   * Creates an instance of AuthGuard.\n   * \n   * @param auth Service to handle authentication state.\n   * @param router Service to navigate or redirect routes.\n   */\n  constructor(\n    private auth: AuthService,\n    private router: Router\n  ) {}\n\n  /**\n   * Determines whether a route can be activated based on user authentication and authorization.\n   * \n   * @param route The activated route snapshot.\n   * @param state The router state snapshot.\n   * @returns Observable that resolves to a boolean or UrlTree.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable {\n    let redirectUrl = route.url.reduce((p, v) => p + v.path + '', \"/\");\n\n    return combineLatest([\n      this.auth.isLogged$,\n      this.auth.isAdmin$\n    ]).pipe(\n      map(([isLogged, isAdmin]) => {\n        if (isLogged && isAdmin) {\n          return true;\n        } else if (!isLogged) {\n          // If not authenticated, redirect to splash page\n          return this.router.createUrlTree(['/splash'], { queryParams: { redirectUrl } });\n        } else {\n          // If not an admin, redirect to login page with an error message\n          return this.router.createUrlTree(['/login'], { queryParams: { error: 'You do not have admin access to this page' } });\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This abstract service handles authentication operations. It should be extended by other services to implement specific authentication logic.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _isAdmin\n                            \n                            \n                                    Protected\n                                _isOwner\n                            \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                isAdmin$\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                            \n                                    Public\n                                isOwner$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                login\n                            \n                            \n                                    Public\n                                    Abstract\n                                logout\n                            \n                            \n                                    Public\n                                    Abstract\n                                me\n                            \n                            \n                                    Public\n                                    Abstract\n                                register\n                            \n                            \n                                update\n                            \n                            \n                                    Abstract\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Logs in a user with the given credentials.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user's login credentials.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the logged-in user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Logs out the current user.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the logout operation.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Retrieves the current user's information.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the current user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(info: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Registers a new user with the given information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user's registration information.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the registered user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(extended: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Updates user data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                extended\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The extended user data.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Actualiza la información del usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Información del usuario a actualizar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un Observable con el resultado de la actualización.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/auth.service.ts:42\n                        \n                    \n\n            \n                \n                    Subject to track if the user is an admin.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _isOwner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/auth.service.ts:52\n                        \n                    \n\n            \n                \n                    Subject to track if the user is an owner.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/auth.service.ts:32\n                        \n                    \n\n            \n                \n                    Subject to track the login status.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/auth.service.ts:62\n                        \n                    \n\n            \n                \n                    Subject to track the current user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAdmin$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._isAdmin.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/auth.service.ts:47\n                        \n                    \n\n            \n                \n                    Observable for the admin status.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/auth.service.ts:37\n                        \n                    \n\n            \n                \n                    Observable for the login status.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isOwner$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._isOwner.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/auth.service.ts:57\n                        \n                    \n\n            \n                \n                    Observable for the owner status.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/auth.service.ts:67\n                        \n                    \n\n            \n                \n                    Observable for the current user.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { UserCredentials } from '../../interfaces/user-credentials';\nimport { UserRegisterInfo } from '../../interfaces/user-register-info';\nimport { JwtService } from '../jwt.service';\nimport { ApiService } from './api.service';\nimport { User } from '../../interfaces/user';\n\n/**\n * This abstract service handles authentication operations. It should be extended by other services to implement specific authentication logic.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class AuthService {\n  /**\n   * Actualiza la información del usuario.\n   * @param user Información del usuario a actualizar.\n   * @returns Un Observable con el resultado de la actualización.\n   */\n  abstract updateUser(user: User): Observable;\n\n  /**\n   * Updates user data.\n   * @param extended The extended user data.\n   */\n  update(extended: { data: any; }): any {}\n\n  /**\n   * Subject to track the login status.\n   */\n  protected _logged = new BehaviorSubject(null);\n\n  /**\n   * Observable for the login status.\n   */\n  public isLogged$ = this._logged.asObservable();\n\n  /**\n   * Subject to track if the user is an admin.\n   */\n  protected _isAdmin: BehaviorSubject = new BehaviorSubject(false);\n\n  /**\n   * Observable for the admin status.\n   */\n  public isAdmin$: Observable = this._isAdmin.asObservable();\n\n  /**\n   * Subject to track if the user is an owner.\n   */\n  protected _isOwner: BehaviorSubject = new BehaviorSubject(false);\n\n  /**\n   * Observable for the owner status.\n   */\n  public isOwner$: Observable = this._isOwner.asObservable();\n\n  /**\n   * Subject to track the current user.\n   */\n  protected _user = new BehaviorSubject(null);\n\n  /**\n   * Observable for the current user.\n   */\n  public user$ = this._user.asObservable();\n  \n  /**\n   * Logs in a user with the given credentials.\n   * @param credentials The user's login credentials.\n   * @returns An observable of the logged-in user.\n   */\n  public abstract login(credentials: Object): Observable;\n\n  /**\n   * Registers a new user with the given information.\n   * @param info The user's registration information.\n   * @returns An observable of the registered user.\n   */\n  public abstract register(info: Object): Observable;\n\n  /**\n   * Logs out the current user.\n   * @returns An observable of the logout operation.\n   */\n  public abstract logout(): Observable;\n\n  /**\n   * Retrieves the current user's information.\n   * @returns An observable of the current user.\n   */\n  public abstract me(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthStrapiService.html":{"url":"injectables/AuthStrapiService.html","title":"injectable - AuthStrapiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthStrapiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/strapi/auth-strapi.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service handles authentication using Strapi. Note that this service is not currently being utilized.\n\n            \n\n            \n                Extends\n            \n            \n                            AuthService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _isAdmin\n                            \n                            \n                                    Protected\n                                _isOwner\n                            \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                isAdmin$\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                            \n                                    Public\n                                isOwner$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Public\n                                me\n                            \n                            \n                                register\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtSvc: JwtService, apiSvc: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/strapi/auth-strapi.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthStrapiService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtSvc\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle JWT tokens.\n\n                                                        \n                                                \n                                                \n                                                        apiSvc\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to make API requests.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: UserCredentials)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:55\n\n                        \n                    \n\n\n            \n                \n                        Logs in a user with the provided credentials.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            UserCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user's login credentials.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the logged-in user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:86\n\n                        \n                    \n\n\n            \n                \n                        Logs out the current user.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the logout result.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:145\n\n                        \n                    \n\n\n            \n                \n                        Retrieves the current user's information.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the current user's information.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(info: UserRegisterInfo)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:99\n\n                        \n                    \n\n\n            \n                \n                        Registers a new user with the provided information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            UserRegisterInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user's registration information.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the registered user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(extended: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                extended\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:19\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:42\n\n                        \n                    \n\n            \n                \n                    Subject to track if the user is an admin.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _isOwner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:52\n\n                        \n                    \n\n            \n                \n                    Subject to track if the user is an owner.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:32\n\n                        \n                    \n\n            \n                \n                    Subject to track the login status.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:62\n\n                        \n                    \n\n            \n                \n                    Subject to track the current user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAdmin$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._isAdmin.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:47\n\n                        \n                    \n\n            \n                \n                    Observable for the admin status.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:37\n\n                        \n                    \n\n            \n                \n                    Observable for the login status.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isOwner$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._isOwner.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:57\n\n                        \n                    \n\n            \n                \n                    Observable for the owner status.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:67\n\n                        \n                    \n\n            \n                \n                    Observable for the current user.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, lastValueFrom, map, tap, switchMap } from 'rxjs';\nimport { UserCredentials } from '../../../interfaces/user-credentials';\nimport { UserRegisterInfo } from '../../../interfaces/user-register-info';\nimport { JwtService } from '../../jwt.service';\nimport { ApiService } from '../api.service';\nimport { AuthService } from '../auth.service';\nimport { StrapiArrayResponse, StrapiExtendedUser, StrapiLoginPayload, StrapiLoginResponse, StrapiMe, StrapiRegisterPayload, StrapiRegisterResponse, StrapiResponse, StrapiUser } from '../../../interfaces/strapi';\nimport { User } from '../../../interfaces/user';\nimport { Router } from '@angular/router';\n\n/**\n * This service handles authentication using Strapi. Note that this service is not currently being utilized.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthStrapiService extends AuthService {\n  updateUser(user: User): Observable {\n    throw new Error('Method not implemented.');\n  }\n  override update(extended: { data: any; }): any {\n  }\n\n  /**\n   * Creates an instance of AuthStrapiService.\n   * \n   * @param jwtSvc Service to handle JWT tokens.\n   * @param apiSvc Service to make API requests.\n   */\n  constructor(\n    private jwtSvc: JwtService,\n    private apiSvc: ApiService\n  ) { \n    super();\n    this.jwtSvc.loadToken().subscribe(token => {\n      if (token) {\n        this.me().subscribe(user => {\n          this._logged.next(true);\n          this._user.next(user);\n        });\n      } else {\n        this._logged.next(false);\n        this._user.next(null);\n      }\n    });\n  }\n\n  /**\n   * Logs in a user with the provided credentials.\n   * \n   * @param credentials The user's login credentials.\n   * @returns An observable of the logged-in user.\n   */\n  public login(credentials: UserCredentials): Observable {\n    return new Observable(obs => {\n      const _credentials: StrapiLoginPayload = {\n        identifier: credentials.username,\n        password: credentials.password\n      };\n      this.apiSvc.post(\"/auth/local\", _credentials).subscribe({\n        next: async (data: StrapiLoginResponse) => {\n          await lastValueFrom(this.jwtSvc.saveToken(data.jwt));\n          try {\n            const user = await lastValueFrom(this.me());\n            this._user.next(user);\n            this._logged.next(true);\n            obs.next(user);\n            obs.complete();\n          } catch (error) {\n            obs.error(error);\n          }\n        },\n        error: err => {\n          obs.error(err);\n        }\n      });\n    });\n  }\n\n  /**\n   * Logs out the current user.\n   * \n   * @returns An observable of the logout result.\n   */\n  logout(): Observable {\n    return this.jwtSvc.destroyToken().pipe(map(_ => {\n      this._logged.next(false);\n      return;\n    }));\n  }\n\n  /**\n   * Registers a new user with the provided information.\n   * \n   * @param info The user's registration information.\n   * @returns An observable of the registered user.\n   */\n  register(info: UserRegisterInfo): Observable {\n    return new Observable(obs => {\n      const _info: StrapiRegisterPayload = {\n        email: info.email,\n        username: info.nickname,\n        password: info.password\n      };\n      this.apiSvc.post(\"/auth/local/register\", _info).subscribe({\n        next: async (data: StrapiRegisterResponse) => {\n          await lastValueFrom(this.jwtSvc.saveToken(data.jwt));\n          const _extended_user: StrapiExtendedUser = {\n            name: info.name,\n            surname: info.surname,\n            user_id: data.user.id,\n            data: {\n              name: '',\n              surname: '',\n              users_permissions_user: 0,\n              players: [],\n              teams: [],\n              trainers: []\n            }\n          };\n          try {\n            await lastValueFrom(this.apiSvc.post(\"/extended-users\", { data: _extended_user }));\n            const user = await lastValueFrom(this.me());\n            this._user.next(user);\n            this._logged.next(true);\n            obs.next(user);\n            obs.complete();  \n          } catch (error) {\n            obs.error(error);\n          }\n        },\n        error: err => {\n          obs.error(err);\n        }\n      });\n    });\n  }\n\n  /**\n   * Retrieves the current user's information.\n   * \n   * @returns An observable of the current user's information.\n   */\n  public me(): Observable {\n    // Obtiene el usuario y lo encadena con un pipe y hace un switchMap para mapear el valor del observable obteniendo el extended user que también mapearemos\n    return this.apiSvc.get('/users/me').pipe(\n      switchMap((user: StrapiUser) => {\n        // Realiza la segunda llamada a la API y le hacemos un pipe, dentro un map\n        return this.apiSvc.get(`/extended-users?filters[users_permissions_user]=${user.id}&populate=players&populate=teams&populate=trainers`).pipe(\n          map(extended_user_response => {\n            // Para simplificar el mapeo, creamos extended_user que es el contenido dentro de la posición 0 del array response.data\n            let extended_user = extended_user_response.data[0];\n            // Mapeamos los arrays de players, teams y trainers\n            let players = extended_user.attributes.players ? extended_user.attributes.players.data.map((p: any) => p.id) : [];\n            let teams = extended_user.attributes.teams ? extended_user.attributes.teams.data.map((t: any) => t.id) : [];\n            let trainers = extended_user.attributes.trainers ? extended_user.attributes.trainers.data.map((t: any) => t.id) : [];\n\n            // Construye el objeto 'ret' con la información combinada\n            let ret: any = {\n              id: extended_user.id,\n              name: extended_user.attributes.name,\n              surname: extended_user.attributes.surname,\n              username: user.username,\n              users_permissions_user: user.id,\n              email: user.email,\n              players: players,\n              teams: teams,\n              trainers: trainers\n            };\n            // Devuelve el objeto con toda la información combinada\n            return ret;\n          })\n        );\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CsvService.html":{"url":"injectables/CsvService.html","title":"injectable - CsvService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CsvService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/csv.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service handles conversion of data to CSV format and downloading CSV files.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convertToCSV\n                            \n                            \n                                    Public\n                                downloadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        convertToCSV\n                        \n                    \n                \n            \n            \n                \n                        \n                    convertToCSV(data: any[], keys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/csv.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Converts an array of data objects to a CSV string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The array of data objects to convert.\n\n                                            \n                                        \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The keys to include in the CSV.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The CSV string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        downloadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadFile(csvData: string, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/csv.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Downloads a CSV file with the given data and filename.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                csvData\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The CSV data as a string.\n\n                                            \n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The name of the file to download.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * This service handles conversion of data to CSV format and downloading CSV files.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CsvService {\n\n  /**\n   * Converts an array of data objects to a CSV string.\n   * \n   * @param data The array of data objects to convert.\n   * @param keys The keys to include in the CSV.\n   * @returns The CSV string.\n   */\n  public convertToCSV(data: any[], keys: string[]): string {\n    if (!data.length) {\n      return '';\n    }\n\n    const csvRows = data.map(doc => keys.map(key => {\n      const value = doc[key];\n      if (typeof value === 'object' && value !== null) {\n        return JSON.stringify(value);\n      }\n      return JSON.stringify(value || '');\n    }).join(','));\n\n    return [keys.join(','), ...csvRows].join('\\n');\n  }\n\n  /**\n   * Downloads a CSV file with the given data and filename.\n   * \n   * @param csvData The CSV data as a string.\n   * @param filename The name of the file to download.\n   */\n  public downloadFile(csvData: string, filename: string): void {\n    const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n\n    link.setAttribute('href', url);\n    link.setAttribute('download', filename);\n    link.style.visibility = 'hidden';\n\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomTranslateService.html":{"url":"injectables/CustomTranslateService.html","title":"injectable - CustomTranslateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomTranslateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/custom-translate.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                languageChange$\n                            \n                            \n                                    Private\n                                languageChangeSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getLang\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                onLanguageChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/custom-translate.service.ts:29\n                            \n                        \n\n                \n                    \n                            Creates an instance of CustomTranslateService.\nInitializes the translation service with available languages and the default language.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ngx-translate service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/custom-translate.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Retrieves the translation for a given key.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The translation key\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable with the translated string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLang\n                        \n                    \n                \n            \n            \n                \ngetLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/custom-translate.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Gets the current language code.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The current language code as a string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/custom-translate.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Initializes the translation service by adding languages, setting the default language, and using it.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onLanguageChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLanguageChange(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/custom-translate.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Changes the current language and updates the BehaviorSubject.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Language code to switch to (e.g., 'en', 'es')\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        languageChange$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.languageChangeSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/custom-translate.service.ts:29\n                        \n                    \n\n            \n                \n                    Observable to expose the current language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        languageChangeSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('es')\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/custom-translate.service.ts:24\n                        \n                    \n\n            \n                \n                    BehaviorSubject to track the current language.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\n\n/**\n * Factory function to create a TranslateHttpLoader with a specific path for translation files.\n *\n * @param http Angular HttpClient\n * @returns TranslateHttpLoader instance\n */\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomTranslateService {\n  /**\n   * BehaviorSubject to track the current language.\n   */\n  private languageChangeSubject = new BehaviorSubject('es');\n  \n  /**\n   * Observable to expose the current language.\n   */\n  public languageChange$ = this.languageChangeSubject.asObservable();\n\n  /**\n   * Creates an instance of CustomTranslateService.\n   * Initializes the translation service with available languages and the default language.\n   * \n   * @param translate ngx-translate service\n   */\n  constructor(private translate: TranslateService) { \n    this.init();\n  }\n\n  /**\n   * Initializes the translation service by adding languages, setting the default language, and using it.\n   */\n  private init() {\n    this.translate.addLangs(['es', 'en']);\n    const defaultLang = this.languageChangeSubject.value;\n    this.translate.setDefaultLang(defaultLang);\n    this.translate.use(defaultLang);\n  }\n\n  /**\n   * Changes the current language and updates the BehaviorSubject.\n   * \n   * @param lang Language code to switch to (e.g., 'en', 'es')\n   */\n  public onLanguageChange(lang: string) {\n    this.translate.use(lang).subscribe(() => {\n      this.languageChangeSubject.next(lang);\n    });\n  }\n\n  /**\n   * Retrieves the translation for a given key.\n   * \n   * @param key The translation key\n   * @returns Observable with the translated string\n   */\n  get(key: string): Observable {\n    return this.translate.get(key);\n  }\n\n  /**\n   * Gets the current language code.\n   * \n   * @returns The current language code as a string\n   */\n  getLang(): string {\n    return this.languageChangeSubject.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This abstract service handles data operations. It should be extended by other services to implement specific data management logic.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                delete\n                            \n                            \n                                    Public\n                                    Abstract\n                                get\n                            \n                            \n                                    Public\n                                    Abstract\n                                post\n                            \n                            \n                                    Public\n                                    Abstract\n                                put\n                            \n                            \n                                    Public\n                                    Abstract\n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(resource: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/data.service.ts:56\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Deletes a specific resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The resource to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the deleted resource.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(resource: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/data.service.ts:29\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retrieves a specific resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The resource to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the resource.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/data.service.ts:38\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Creates a new resource with the given data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The resource to create.\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data to create the resource with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the created resource.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(resource: string, data: any, documentName?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/data.service.ts:48\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Updates a specific resource with the given data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The resource to update.\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data to update the resource with.\n\n                                            \n                                        \n                                        \n                                                documentName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    The name of the document to update (optional).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the updated resource.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/data.service.ts:21\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Queries the specified resource with the given parameters.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The resource to query.\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The query parameters.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                An observable of the paginated data.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api.service';\nimport { PaginatedData } from '../../interfaces/data';\n\n/**\n * This abstract service handles data operations. It should be extended by other services to implement specific data management logic.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class DataService {\n\n  /**\n   * Queries the specified resource with the given parameters.\n   * \n   * @param resource The resource to query.\n   * @param params The query parameters.\n   * @returns An observable of the paginated data.\n   */\n  public abstract query(resource: string, params: any): Observable>;\n\n  /**\n   * Retrieves a specific resource.\n   * \n   * @param resource The resource to retrieve.\n   * @returns An observable of the resource.\n   */\n  public abstract get(resource: string): Observable;\n\n  /**\n   * Creates a new resource with the given data.\n   * \n   * @param resource The resource to create.\n   * @param data The data to create the resource with.\n   * @returns An observable of the created resource.\n   */\n  public abstract post(resource: string, data: any): Observable;\n\n  /**\n   * Updates a specific resource with the given data.\n   * \n   * @param resource The resource to update.\n   * @param data The data to update the resource with.\n   * @param documentName The name of the document to update (optional).\n   * @returns An observable of the updated resource.\n   */\n  public abstract put(resource: string, data: any, documentName?: string): Observable;\n\n  /**\n   * Deletes a specific resource.\n   * \n   * @param resource The resource to delete.\n   * @returns An observable of the deleted resource.\n   */\n  public abstract delete(resource: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorModalComponent.html":{"url":"components/ErrorModalComponent.html","title":"component - ErrorModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/error-modal/error-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying error messages in a modal.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-modal\n            \n\n\n\n            \n                styleUrls\n                ./error-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/error-modal/error-modal.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of ErrorModalComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for handling modal operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No tienes acceso de propietario a esta página'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/error-modal/error-modal.component.ts:22\n                            \n                        \n                \n                    \n                        The message displayed in the error modal.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Error'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/error-modal/error-modal.component.ts:17\n                            \n                        \n                \n                    \n                        The title of the error modal.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/error-modal/error-modal.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Dismisses the error modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n/**\n * Component for displaying error messages in a modal.\n */\n@Component({\n  selector: 'app-error-modal',\n  templateUrl: './error-modal.component.html',\n  styleUrls: ['./error-modal.component.scss'],\n})\nexport class ErrorModalComponent {\n  \n  /**\n   * The title of the error modal.\n   */\n  @Input() title: string = 'Error';\n\n  /**\n   * The message displayed in the error modal.\n   */\n  @Input() message: string = 'No tienes acceso de propietario a esta página';\n\n  /**\n   * Creates an instance of ErrorModalComponent.\n   * \n   * @param modalController Controller for handling modal operations.\n   */\n  constructor(private modalController: ModalController) {}\n\n  /**\n   * Dismisses the error modal.\n   */\n  dismiss() {\n    this.modalController.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'errors.accessDeniedTitle'|translate }}\n  \n\n\n  {{ 'errors.accessDeniedText'|translate }}\n\n\n    \n\n    \n                \n                    ./error-modal.component.scss\n                \n                \n  \n  ion-header {\n    --background: var(--ion-color-primary);\n    --color: var(--ion-color-light);\n  }\n  \n  ion-content {\n    --background: red;\n    --color: white;\n  }\n  \n  ion-toolbar {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  \n  ion-title.modal-title {\n    font-size: 1.5rem;\n    text-transform: uppercase;\n    color: white;\n    text-align: center;\n    margin: 0 auto;\n    left: 0;\n    right: 0;\n    \n  }\n  \n  .modal-content {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  \n  .modal-message {\n    font-size: 1.2rem;\n    text-align: center;\n    text-transform: uppercase;\n    color: white;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'errors.accessDeniedTitle\\'|translate }}    {{ \\'errors.accessDeniedText\\'|translate }}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseAuthService.html":{"url":"injectables/FirebaseAuthService.html","title":"injectable - FirebaseAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/firebase/firebase-auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to handle Firebase authentication.\n\n            \n\n            \n                Extends\n            \n            \n                            AuthService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _isAdmin\n                            \n                            \n                                    Protected\n                                _isOwner\n                            \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                isAdmin$\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                            \n                                    Public\n                                isOwner$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                me\n                            \n                            \n                                    Private\n                                postRegister\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                updateUser\n                            \n                            \n                                    Private\n                                updateUserStatus\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseSvc: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/firebase/firebase-auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            Creates an instance of FirebaseAuthService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with Firebase.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: UserCredentials)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:71\n\n                        \n                    \n\n\n            \n                \n                        Logs in a user with the provided credentials.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            UserCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user's login credentials.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the login result.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:168\n\n                        \n                    \n\n\n            \n                \n                        Logs out the current user.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the logout result.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:146\n\n                        \n                    \n\n\n            \n                \n                        Retrieves the current user's information.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the user's information.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    postRegister(info: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/firebase/firebase-auth.service.ts:127\n                        \n                    \n\n\n            \n                \n                        Creates a new document in the database with the user's registration information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user's information to be saved in the database.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(info: UserRegisterInfo)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:96\n\n                        \n                    \n\n\n            \n                \n                        Registers a new user with the provided information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            UserRegisterInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The information needed to register the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the registration result.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:178\n\n                        \n                    \n\n\n            \n                \n                        Updates the user's profile information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user object containing updated information.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the update result.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateUserStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserStatus(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/firebase/firebase-auth.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Updates the user's status based on their roles.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user whose status needs to be updated.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(extended: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:27\n\n                        \n                    \n\n\n            \n                \n                        Updates user data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                extended\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The extended user data.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:42\n\n                        \n                    \n\n            \n                \n                    Subject to track if the user is an admin.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _isOwner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:52\n\n                        \n                    \n\n            \n                \n                    Subject to track if the user is an owner.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:32\n\n                        \n                    \n\n            \n                \n                    Subject to track the login status.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:62\n\n                        \n                    \n\n            \n                \n                    Subject to track the current user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAdmin$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._isAdmin.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:47\n\n                        \n                    \n\n            \n                \n                    Observable for the admin status.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:37\n\n                        \n                    \n\n            \n                \n                    Observable for the login status.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isOwner$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._isOwner.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:57\n\n                        \n                    \n\n            \n                \n                    Observable for the owner status.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:67\n\n                        \n                    \n\n            \n                \n                    Observable for the current user.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Observable, from, map, switchMap, tap } from 'rxjs';\nimport { UserCredentials } from '../../../interfaces/user-credentials';\nimport { UserRegisterInfo } from '../../../interfaces/user-register-info';\nimport { User } from '../../../interfaces/user';\nimport { AuthService } from '../auth.service';\nimport { FirebaseService, FirebaseUserCredential } from '../../firebase/firebase.service';\nimport { Injectable } from '@angular/core';\nimport { getAuth, updateEmail, updatePassword } from 'firebase/auth';\n\n/**\n * Service to handle Firebase authentication.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseAuthService extends AuthService {\n\n  /**\n   * Creates an instance of FirebaseAuthService.\n   * \n   * @param firebaseSvc Service to interact with Firebase.\n   */\n  constructor(\n    private firebaseSvc: FirebaseService\n  ) { \n    super();\n\n    // Suscribe to isLogged$ and update _logged and _user\n    this.firebaseSvc.isLogged$.subscribe(logged => {\n      if (logged) {\n        this.me().subscribe({\n          next: data => {\n            this._user.next(data);\n            this._logged.next(true);\n            this.updateUserStatus(data);\n          },\n          error: err => {\n            console.log(err);\n          }\n        });\n      } else {\n        this._logged.next(false);\n        this._user.next(null);\n        this._isAdmin.next(false);\n        this._isOwner.next(false);\n      }\n    });\n  }\n\n  /**\n   * Updates the user's status based on their roles.\n   * \n   * @param user The user whose status needs to be updated.\n   */\n  private updateUserStatus(user: User) {\n    if (user) {\n      this._isAdmin.next(user.isAdmin === true);\n      this._isOwner.next(user.isOwner === true);\n    } else {\n      this._isAdmin.next(false);\n      this._isOwner.next(false);\n    }\n  }\n\n  /**\n   * Logs in a user with the provided credentials.\n   * \n   * @param credentials The user's login credentials.\n   * @returns An observable of the login result.\n   */\n  public login(credentials: UserCredentials): Observable {\n    return new Observable(subscr => {\n      this.firebaseSvc.connectUserWithEmailAndPassword(credentials.username, credentials.password).then((credentials: FirebaseUserCredential | null) => {\n        if (!credentials || !credentials.user || !credentials.user.user || !credentials.user.user.uid) {\n          subscr.error('Cannot login');\n        }\n        if (credentials) {\n          this.me().subscribe(data => {\n            this._user.next(data);\n            this._logged.next(true);\n            this.updateUserStatus(data);\n            subscr.next(data);\n            subscr.complete();\n          });\n        }\n      });\n    });\n  }\n\n  /**\n   * Registers a new user with the provided information.\n   * \n   * @param info The information needed to register the user.\n   * @returns An observable of the registration result.\n   */\n  public register(info: UserRegisterInfo): Observable {\n    return new Observable(subscr => {\n      this.firebaseSvc.createUserWithEmailAndPassword(info.email, info.password).then((credentials: FirebaseUserCredential | null) => {\n        if (!credentials || !credentials.user || !credentials.user.user || !credentials.user.user.uid)\n          subscr.error('Cannot register');\n        if (credentials) {\n          var _info: User = {\n            isAdmin: false,\n            isOwner: false,\n            ...info,\n          };\n          _info.uuid = this.firebaseSvc.user?.uid;\n          this.postRegister(_info).subscribe(data => {\n            this._user.next(_info);\n            this._logged.next(true);\n            this._isAdmin.next(false);\n            this._isOwner.next(false);\n            subscr.next(_info);\n            subscr.complete();\n          });\n        }\n      });\n    });\n  }\n\n  /**\n   * Creates a new document in the database with the user's registration information.\n   * \n   * @param info The user's information to be saved in the database.\n   * @returns An observable of the result.\n   */\n  private postRegister(info: User): Observable {\n    if (info.uuid)\n      return from(this.firebaseSvc.createDocumentWithId('users', {\n        name: info.name,\n        nickname: info.nickname,\n        email: info.email,\n        votes: [],\n        picture: info.picture ?? \"\",\n        isAdmin: false,\n        isOwner: false\n      }, info.uuid));\n    throw new Error('Unexpected error');\n  }\n\n  /**\n   * Retrieves the current user's information.\n   * \n   * @returns An observable of the user's information.\n   */\n  public me(): Observable {\n    if (this.firebaseSvc.user?.uid)\n      return from(this.firebaseSvc.getDocument('users', this.firebaseSvc.user.uid)).pipe(map(data => {\n        return {\n          name: data.data['name'],\n          email: data.data['email'],\n          nickname: data.data['nickname'],\n          picture: data.data['picture'] ?? \"\",\n          uuid: data.id,\n          isAdmin: data.data['isAdmin'],\n          isOwner: data.data['isOwner']\n        };\n      }));\n    else\n      throw new Error('User is not connected');\n  }\n\n  /**\n   * Logs out the current user.\n   * \n   * @returns An observable of the logout result.\n   */\n  public logout(): Observable {\n    return from(this.firebaseSvc.signOut(false));\n  }\n\n /**\n   * Updates the user's profile information.\n   * \n   * @param user The user object containing updated information.\n   * @returns An observable of the update result.\n   */\n public updateUser(user: User): Observable {\n  if (user.uuid) {\n    return from(this.firebaseSvc.updateDocument('users', {\n      nickname: user.nickname,\n      picture: user.picture\n    }, user.uuid)).pipe(\n      switchMap(() => this.me()), // Fetch the updated user information\n      tap(updatedUser => this._user.next(updatedUser)) // Update the user observable\n    );\n  }\n  throw new Error('Unexpected error');\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseDocument.html":{"url":"interfaces/FirebaseDocument.html","title":"interface - FirebaseDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a document in Firestore.\nThis interface is used to define the structure of a document object that is stored in Firestore.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     DocumentData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data contained in the document. This can be of any type and represents the fields and values stored in the document.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of the document in Firestore.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable, from, of, switchMap, map, take, toArray } from \"rxjs\";\nimport { initializeApp, getApp, FirebaseApp } from \"firebase/app\";\nimport { getFirestore, addDoc, collection, updateDoc, doc, onSnapshot, getDoc, setDoc, query, where, getDocs, Unsubscribe, DocumentData, deleteDoc, Firestore } from \"firebase/firestore\";\nimport { getStorage, ref, getDownloadURL, uploadBytes, FirebaseStorage } from \"firebase/storage\";\nimport { createUserWithEmailAndPassword, deleteUser, signInAnonymously, signOut, signInWithEmailAndPassword, initializeAuth, indexedDBLocalPersistence, UserCredential, Auth, User } from \"firebase/auth\";\n\n/**\n * Interface representing a file in Firebase Storage.\n * This interface is used to define the structure of a file object that is stored in Firebase Storage.\n */\nexport interface FirebaseStorageFile {\n  /**\n   * The path in Firebase Storage where the file is stored.\n   */\n  path: string;\n\n  /**\n   * The URL or reference to the actual file in Firebase Storage.\n   */\n  file: string;\n}\n\n/**\n * Interface representing a document in Firestore.\n * This interface is used to define the structure of a document object that is stored in Firestore.\n */\nexport interface FirebaseDocument {\n  /**\n   * The unique identifier of the document in Firestore.\n   */\n  id: string;\n\n  /**\n   * The data contained in the document. This can be of any type and represents the fields and values stored in the document.\n   */\n  data: DocumentData;\n}\n\n\n/**\n * Interface representing a user credential in Firebase Authentication.\n * This interface is used to define the structure of a user credential object that is returned\n * after a successful authentication operation (e.g., sign-in, sign-up) with Firebase Authentication.\n */\nexport interface FirebaseUserCredential {\n  /**\n   * The user credential object provided by Firebase Authentication.\n   * This includes details about the authenticated user and authentication tokens.\n   */\n  user: UserCredential;\n}\n\n\n/**\n * This service handles interactions with Firebase, including authentication, Firestore operations, and storage.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;  // Firebase app instance\n  private _db!: Firestore;  // Firestore instance\n  private _auth!: Auth;  // Firebase Auth instance\n  private _webStorage!: FirebaseStorage;  // Firebase Storage instance\n  private _user: User | null = null;  // Currently authenticated user\n\n  // BehaviorSubjects to track various states and data\n  private _isLogged: BehaviorSubject = new BehaviorSubject(false);\n  public isLogged$: Observable = this._isLogged.asObservable();\n  private _players: BehaviorSubject = new BehaviorSubject([]);\n  public players$: Observable = this._players.asObservable();\n  private _teams: BehaviorSubject = new BehaviorSubject([]);\n  public teams$: Observable = this._teams.asObservable();\n  private _games: BehaviorSubject = new BehaviorSubject([]);\n  public games$: Observable = this._games.asObservable();\n  private _votes: BehaviorSubject = new BehaviorSubject([]);\n  public votes$: Observable = this._votes.asObservable();\n  private _users: BehaviorSubject = new BehaviorSubject([]);\n  public users$: Observable = this._users.asObservable();\n  private _isAdmin: BehaviorSubject = new BehaviorSubject(false);\n  public isAdmin$: Observable = this._isAdmin.asObservable();\n  private _isOwner: BehaviorSubject = new BehaviorSubject(false);\n  public isOwner$: Observable = this._isOwner.asObservable();\n\n  /**\n   * Creates an instance of FirebaseService.\n   * @param config The Firebase configuration object.\n   */\n  constructor(\n    @Inject('firebase-config') config: any\n  ) {\n    this.init(config);\n  }\n\n  /**\n   * Initializes the Firebase app, Firestore, authentication, and storage.\n   * @param firebaseConfig The Firebase configuration object.\n   */\n  public init(firebaseConfig: any) {\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), { persistence: indexedDBLocalPersistence });\n    this._auth.onAuthStateChanged(async user => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          // Subscribe to collections\n          console.log(user.uid, \"User ID:\", user.email);\n          this.subscribeToPlayers(this._players, (el: any) => el);\n          this.subscribeToTeams(this._teams, (el: any) => el, this._players);\n          this.subscribeToGames(this._games, (el: any) => el, this._teams);\n          this.subscribeToVotes(this._votes, (el: any) => el);\n          this.subscribeToUsers(this._users, this.mapUser);\n          this.checkUserStatus(user.uid);\n        }\n      } else {\n        this._isLogged.next(false);\n        this._isAdmin.next(false);\n      }\n    });\n  }\n\n  /**\n   * Returns the currently authenticated user.\n   * @returns The currently authenticated user or null.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * Checks the status of the user and updates admin and owner status accordingly.\n   * @param userId The ID of the user to check.\n   */\n  private checkUserStatus(userId: string) {\n    const userDocRef = doc(this._db, 'users', userId);\n    onSnapshot(userDocRef, (doc) => {\n      if (doc.exists()) {\n        const userData = doc.data();\n        this._isAdmin.next(userData[\"isAdmin\"] === true);\n        this._isOwner.next(userData[\"isOwner\"] === true);\n      } else {\n        this._isAdmin.next(false);\n        this._isOwner.next(false);\n      }\n    });\n  }\n\n  /**\n   * Uploads a file to Firebase Storage.\n   * @param blob The file to upload as a Blob.\n   * @param mimeType The MIME type of the file.\n   * @param path The path in Firebase Storage to upload the file to.\n   * @param prefix A prefix for the file name.\n   * @param extension The file extension.\n   * @returns A promise that resolves to the uploaded file's metadata.\n   */\n  public fileUpload(blob: Blob, mimeType: string, path: string, prefix: string, extension: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth) {\n        reject({ msg: \"Not connected to FireStorage\" });\n      }\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + \"/\" + prefix + \"-\" + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = { contentType: mimeType };\n      uploadBytes(storageRef, blob).then(async (snapshot) => {\n        getDownloadURL(storageRef).then(async downloadURL => {\n          if (freeConnection) await signOut(this._auth!);\n          resolve({ path, file: downloadURL });\n        }).catch(async error => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n      }).catch(async (error) => {\n        if (freeConnection) await signOut(this._auth!);\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Uploads an image to Firebase Storage.\n   * @param blob The image file as a Blob.\n   * @returns A promise that resolves to the uploaded image's metadata.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', \".jpg\");\n  }\n\n  /**\n   * Creates a new document in a Firestore collection.\n   * @param collectionName The name of the collection to create the document in.\n   * @param data The data to include in the document.\n   * @returns A promise that resolves to the ID of the created document.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data).then(docRef => resolve(docRef.id)).catch(err => reject(err));\n    });\n  }\n\n  /**\n   * Creates a new document with a specified ID in a Firestore collection.\n   * @param collectionName The name of the collection to create the document in.\n   * @param data The data to include in the document.\n   * @param docId The ID to assign to the document.\n   * @returns A promise that resolves when the document is created.\n   */\n  public createDocumentWithId(collectionName: string, data: any, docId: string): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: 'Database is not connected' });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data).then(() => resolve()).catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * Updates an existing document in a Firestore collection.\n   * @param collectionName The name of the collection.\n   * @param data The data to update the document with.\n   * @param document The ID of the document to update.\n   * @returns A promise that resolves when the document is updated.\n   */\n  public updateDocument(collectionName: string, data: any, document: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data).then(docRef => resolve()).catch(err => reject(err));\n    });\n  }\n\n  /**\n   * Retrieves all documents from a Firestore collection.\n   * @param collectionName The name of the collection to retrieve documents from.\n   * @returns A promise that resolves to an array of documents.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const querySnapshot = await getDocs(collection(this._db!, collectionName));\n      resolve(querySnapshot.docs.map(doc => ({ id: doc.id, data: doc.data() })));\n    });\n  }\n\n  /**\n   * Retrieves a specific document from a Firestore collection.\n   * @param collectionName The name of the collection.\n   * @param document The ID of the document to retrieve.\n   * @returns A promise that resolves to the retrieved document.\n   */\n  public getDocument(collectionName: string, document: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        reject('Document does not exist');\n      }\n    });\n  }\n\n  /**\n   * Retrieves documents from a Firestore collection that match a specific field value.\n   * @param collectionName The name of the collection.\n   * @param field The field to filter by.\n   * @param value The value to filter by.\n   * @returns A promise that resolves to an array of matching documents.\n   */\n  public getDocumentsBy(collectionName: string, field: string, value: any): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const q = query(collection(this._db!, collectionName), where(field, \"==\", value));\n      const querySnapshot = await getDocs(q);\n      resolve(querySnapshot.docs.map(doc => ({ id: doc.id, data: doc.data() })));\n    });\n  }\n\n  /**\n   * Deletes a specific document from a Firestore collection.\n   * @param collectionName The name of the collection.\n   * @param docId The ID of the document to delete.\n   * @returns A promise that resolves when the document is deleted.\n   */\n  public deleteDocument(collectionName: string, docId: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      resolve(await deleteDoc(doc(this._db!, collectionName, docId)));\n    });\n  }\n\n  /**\n   * Subscribes to a Firestore collection and updates a BehaviorSubject with the collection data.\n   * @param collectionName The name of the collection to subscribe to.\n   * @param subject The BehaviorSubject to update with the collection data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public subscribeToCollection(collectionName: string, subject: BehaviorSubject, mapFunction: (el: FirebaseDocument) => any): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    return onSnapshot(collection(this._db, collectionName), (snapshot) => {\n      subject.next(snapshot.docs.map(doc => ({ id: doc.id, data: doc.data() })).map(mapFunction));\n    }, error => { });\n  }\n\n  /**\n   * Signs out the current user.\n   * @param signInAnon Whether to sign in anonymously after signing out.\n   * @returns A promise that resolves when the user is signed out.\n   */\n  public signOut(signInAnon: boolean = false): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (this._auth) {\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    });\n  }\n\n  /**\n   * Checks if a user is currently connected.\n   * @returns A promise that resolves to a boolean indicating if a user is connected.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) {\n        resolve(false);\n      }\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * Checks if a user is currently connected anonymously.\n   * @returns A promise that resolves to a boolean indicating if a user is connected anonymously.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) {\n        resolve(false);\n      }\n      resolve(this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous);\n    });\n    return response;\n  }\n\n  /**\n   * Connects a user anonymously.\n   * @returns A promise that resolves when the user is connected anonymously.\n   */\n  public connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) {\n        resolve();\n      }\n      if (!(await this.isUserConnected()) && !(await this.isUserConnectedAnonymously())) {\n        await signInAnonymously(this._auth!).catch(error => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) {\n        resolve();\n      } else {\n        reject({ msg: \"A user is already connected\" });\n      }\n    });\n    return response;\n  }\n\n  /**\n   * Creates a new user with an email and password.\n   * @param email The email of the new user.\n   * @param password The password of the new user.\n   * @returns A promise that resolves to the created user's credentials.\n   */\n  public createUserWithEmailAndPassword(email: string, password: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) {\n        resolve(null);\n      }\n      try {\n        resolve({ user: await createUserWithEmailAndPassword(this._auth!, email, password) });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\"Password is not strong enough. Add additional characters including special characters and numbers.\");\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Connects a user with an email and password.\n   * @param email The email of the user.\n   * @param password The password of the user.\n   * @returns A promise that resolves to the connected user's credentials.\n   */\n  public connectUserWithEmailAndPassword(email: string, password: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) {\n        resolve(null);\n      }\n      resolve({ user: await signInWithEmailAndPassword(this._auth!, email, password) });\n    });\n  }\n\n  /**\n   * Deletes the currently authenticated user.\n   * @returns A promise that resolves when the user is deleted.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) {\n        reject();\n      }\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * Updates a specific field in a document in a Firestore collection.\n   * @param collectionName The name of the collection.\n   * @param document The ID of the document to update.\n   * @param fieldName The name of the field to update.\n   * @param fieldValue The value to update the field with.\n   * @returns A promise that resolves when the field is updated.\n   */\n  public updateDocumentField(collectionName: string, document: string, fieldName: string, fieldValue: any): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue };\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Maps a Firestore document to a user object.\n   * @param doc The Firestore document data.\n   * @returns The mapped user object.\n   */\n  public mapUser(doc: DocumentData): any {\n    return {\n      email: doc['email'],\n      name: doc['name'],\n      nickname: doc['nickname'],\n      picture: doc['picture'],\n      isAdmin: doc['isAdmin'],\n      isOwner: doc['isOwner'],\n      uuid: doc[\"id\"]\n    };\n  }\n\n  /**\n   * Subscribes to the players collection in Firestore.\n   * @param subject The BehaviorSubject to update with the players data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public async subscribeToPlayers(subject: BehaviorSubject, mapFunction: (el: DocumentData) => any): Promise {\n    if (!this._db) {\n      return null;\n    }\n    try {\n      const playersRef = collection(this._db, \"players\");\n      const unsubscribePlayers = onSnapshot(playersRef, (snapshot) => {\n        const players = snapshot.docs.map(doc => {\n          const playerData = mapFunction(doc.data());\n          playerData.uuid = doc.id;\n          return playerData;\n        });\n        subject.next(players);\n      }, (error) => {\n        console.error('Error in onSnapshot:', error);\n      });\n      return unsubscribePlayers;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Subscribes to the users collection in Firestore.\n   * @param subject The BehaviorSubject to update with the users data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public async subscribeToUsers(subject: BehaviorSubject, mapFunction: (el: DocumentData) => any): Promise {\n    if (!this._db) {\n      return null;\n    }\n    try {\n      const usersRef = collection(this._db, \"users\");\n      const unsubscribeUsers = onSnapshot(usersRef, (snapshot) => {\n        const users = snapshot.docs.map(doc => {\n          const userData = mapFunction(doc.data());\n          userData.uuid = doc.id;\n          return userData;\n        });\n        subject.next(users);\n      }, (error) => {\n        console.error('Error in onSnapshot:', error);\n      });\n      return unsubscribeUsers;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Subscribes to the teams collection in Firestore.\n   * @param subject The BehaviorSubject to update with the teams data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @param playersSubject The BehaviorSubject to update with the players data.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public async subscribeToTeams(subject: BehaviorSubject, mapFunction: (el: DocumentData) => any, playersSubject: BehaviorSubject): Promise {\n    if (!this._db) {\n      return null;\n    }\n    try {\n      const teamsRef = collection(this._db, \"teams\");\n      const unsubscribeTeams = onSnapshot(teamsRef, async (snapshot) => {\n        const teams = snapshot.docs.map(doc => {\n          const teamData = mapFunction(doc.data());\n          teamData.uuid = doc.id;\n          return teamData;\n        });\n        console.log('Teams:', teams);\n\n        // Get players for each team based on player's UUID\n        playersSubject.pipe(take(1)).subscribe(players => {\n          teams.forEach(team => {\n            if (Array.isArray(team.players)) {\n              const teamPlayers = players.filter(player => team.players.includes(player.uuid));\n              team.players = teamPlayers;\n            } else {\n              team.players = []; // Initialize as an empty array if no players property\n            }\n          });\n          console.log('Updated teams:', teams);\n          subject.next(teams);\n        });\n      }, (error) => {\n        console.error('Error in onSnapshot:', error);\n      });\n      return unsubscribeTeams;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Subscribes to the games collection in Firestore.\n   * @param subject The BehaviorSubject to update with the games data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @param teamsSubject The BehaviorSubject to update with the teams data.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public async subscribeToGames(subject: BehaviorSubject, mapFunction: (el: DocumentData) => any, teamsSubject: BehaviorSubject): Promise {\n    if (!this._db) {\n      return null;\n    }\n    try {\n      const gamesRef = collection(this._db, \"games\");\n      const unsubscribeGames = onSnapshot(gamesRef, async (snapshot) => {\n        const games = snapshot.docs.map(doc => {\n          const gameData = mapFunction(doc.data());\n          gameData.uuid = doc.id;\n          return gameData;\n        });\n\n        // Map teams to games\n        teamsSubject.pipe(take(1)).subscribe(teams => {\n          games.forEach(game => {\n            game.local = teams.find(team => team.uuid === game.local) || null;\n            game.visitor = teams.find(team => team.uuid === game.visitor) || null;\n          });\n          subject.next(games);\n        });\n      }, (error) => {\n        console.error('Error in onSnapshot:', error);\n      });\n      return unsubscribeGames;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Subscribes to the votes collection in Firestore.\n   * @param subject The BehaviorSubject to update with the votes data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public async subscribeToVotes(subject: BehaviorSubject, mapFunction: (el: DocumentData) => any): Promise {\n    if (!this._db) {\n      return null;\n    }\n    try {\n      const votesRef = collection(this._db, \"votes\");\n      const unsubscribeVotes = onSnapshot(votesRef, (snapshot) => {\n        const votes = snapshot.docs.map(doc => {\n          const voteData = mapFunction(doc.data());\n          voteData.uuid = doc.id;\n          return voteData;\n        });\n        subject.next(votes);\n      }, (error) => {\n        console.error('Error in onSnapshot:', error);\n      });\n      return unsubscribeVotes;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseMappingService.html":{"url":"injectables/FirebaseMappingService.html","title":"injectable - FirebaseMappingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseMappingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/firebase/firebase-mapping.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to handle mapping between Firebase data and application data models.\n\n            \n\n            \n                Extends\n            \n            \n                            MappingService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deletePlayerUrl\n                            \n                            \n                                    Public\n                                deleteUserUrl\n                            \n                            \n                                    Public\n                                getPlayerUrl\n                            \n                            \n                                    Public\n                                getUserUrl\n                            \n                            \n                                    Public\n                                mapUser\n                            \n                            \n                                    Public\n                                mapUsers\n                            \n                            \n                                    Public\n                                queryPlayersUrl\n                            \n                            \n                                    Public\n                                queryUsersUrl\n                            \n                            \n                                    Public\n                                updatePlayerUrl\n                            \n                            \n                                    Public\n                                updateUserUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/firebase/firebase-mapping.service.ts:35\n                            \n                        \n\n                \n                    \n                            Creates an instance of FirebaseMappingService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deletePlayerUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    deletePlayerUrl(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/firebase/firebase-mapping.service.ts:120\n                        \n                    \n\n\n            \n                \n                        Returns the URL to delete a specific player by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the player.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteUserUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUserUrl(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MappingService\n\n                        \n                    \n                    \n                        \n                                Defined in         MappingService:79\n\n                        \n                    \n\n\n            \n                \n                        Returns the URL to delete a specific user by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getPlayerUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlayerUrl(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/firebase/firebase-mapping.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Returns the URL to get a specific player by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the player.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUserUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserUrl(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MappingService\n\n                        \n                    \n                    \n                        \n                                Defined in         MappingService:59\n\n                        \n                    \n\n\n            \n                \n                        Returns the URL to get a specific user by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mapUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapUser(data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MappingService\n\n                        \n                    \n                    \n                        \n                                Defined in         MappingService:33\n\n                        \n                    \n\n\n            \n                \n                        Maps backend data to a single user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data from the backend.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                The data mapped to the User interface.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mapUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapUsers(data: PaginatedData)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MappingService\n\n                        \n                    \n                    \n                        \n                                Defined in         MappingService:23\n\n                        \n                    \n\n\n            \n                \n                        Maps paginated data to a list of users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            PaginatedData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The paginated data from the backend.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PaginatedData\n\n                        \n                            \n                                The paginated data mapped to the User interface.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queryPlayersUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    queryPlayersUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/firebase/firebase-mapping.service.ts:90\n                        \n                    \n\n\n            \n                \n                        Returns the URL to query for players.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queryUsersUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    queryUsersUrl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         MappingService\n\n                        \n                    \n                    \n                        \n                                Defined in         MappingService:49\n\n                        \n                    \n\n\n            \n                \n                        Returns the URL to query for users.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatePlayerUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePlayerUrl(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/firebase/firebase-mapping.service.ts:110\n                        \n                    \n\n\n            \n                \n                        Returns the URL to update a specific player by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the player.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateUserUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserUrl(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MappingService\n\n                        \n                    \n                    \n                        \n                                Defined in         MappingService:69\n\n                        \n                    \n\n\n            \n                \n                        Returns the URL to update a specific user by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL string.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Player } from 'src/app/core/interfaces/player';\nimport { PaginatedData } from '../../../interfaces/data';\nimport { StrapiExtendedUser, StrapiResponse } from '../../../interfaces/strapi';\nimport { User } from '../../../interfaces/user';\nimport { FirebaseService } from '../../firebase/firebase.service';\nimport { MappingService } from '../mapping.service';\n\n/**\n * Service to handle mapping between Firebase data and application data models.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseMappingService extends MappingService {\n\n  /**\n   * Maps paginated data to a list of users.\n   * \n   * @param data The paginated data from the backend.\n   * @returns The paginated data mapped to the User interface.\n   */\n  public mapUsers(data: PaginatedData): PaginatedData {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Maps backend data to a single user.\n   * \n   * @param data The data from the backend.\n   * @returns The data mapped to the User interface.\n   */\n  public mapUser(data: any): User {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Creates an instance of FirebaseMappingService.\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Returns the URL to query for users.\n   * \n   * @returns The URL string.\n   */\n  public queryUsersUrl(): string {\n    return 'extended-users?populate=picture&sort=id';\n  }\n\n  /**\n   * Returns the URL to get a specific user by ID.\n   * \n   * @param id The ID of the user.\n   * @returns The URL string.\n   */\n  public getUserUrl(id: number): string {\n    return `extended-users/${id}/?populate=picture&sort=id`;\n  }\n\n  /**\n   * Returns the URL to update a specific user by ID.\n   * \n   * @param id The ID of the user.\n   * @returns The URL string.\n   */\n  public updateUserUrl(id: number): string {\n    return `extended-users/${id}`;\n  }\n\n  /**\n   * Returns the URL to delete a specific user by ID.\n   * \n   * @param id The ID of the user.\n   * @returns The URL string.\n   */\n  public deleteUserUrl(id: number): string {\n    return `extended-users/${id}`;\n  }\n\n  // PLAYERS\n\n  /**\n   * Returns the URL to query for players.\n   * \n   * @returns The URL string.\n   */\n  public queryPlayersUrl(): string {\n    return 'players?populate=picture&sort=id';\n  }\n\n  /**\n   * Returns the URL to get a specific player by ID.\n   * \n   * @param id The ID of the player.\n   * @returns The URL string.\n   */\n  public getPlayerUrl(id: number): string {\n    return `players/${id}/?populate=picture&sort=id`;\n  }\n\n  /**\n   * Returns the URL to update a specific player by ID.\n   * \n   * @param id The ID of the player.\n   * @returns The URL string.\n   */\n  public updatePlayerUrl(id: number): string {\n    return `players/${id}`;\n  }\n\n  /**\n   * Returns the URL to delete a specific player by ID.\n   * \n   * @param id The ID of the player.\n   * @returns The URL string.\n   */\n  public deletePlayerUrl(id: number): string {\n    return `players/${id}`;\n  }\n\n  /*\n    public mapPlayers(data: PaginatedData): PaginatedData {\n      const strapi_data: PaginatedData = { ...data };\n      return {\n        data: strapi_data.data.map(player => {\n          return {\n            id: user.id,\n            name: user.name,\n            surname: user.surname,\n            nickname: user.nickname,\n            picture: user.picture?.data ? {\n              id: user.picture.data.id,\n              url_large: user.picture.data.attributes.formats.large?.url,\n              url_small: user.picture.data.attributes.formats.small?.url,\n              url_medium: user.picture.data.attributes.formats.medium?.url,\n              url_thumbnail: user.picture.data.attributes.formats.thumbnail?.url,\n            } : null\n          };\n        }),\n        pagination: data.pagination\n      };\n    }\n    public mapUser(data: StrapiExtendedUser): User {\n      return {\n        id: data.id,\n        name: data.name,\n        surname: data.surname,\n        nickname: data.nickname,\n        picture: data.picture?.data ? {\n          id: data.picture.data.id,\n          url_large: data.picture.data.attributes.formats.large?.url,\n          url_small: data.picture.data.attributes.formats.small?.url,\n          url_medium: data.picture.data.attributes.formats.medium?.url,\n          url_thumbnail: data.picture.data.attributes.formats.thumbnail?.url,\n        } : null\n      };\n    }\n  */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseMediaService.html":{"url":"classes/FirebaseMediaService.html","title":"class - FirebaseMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/firebase/firebase-media.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to handle media operations using Firebase.\n\n            \n\n            \n                Extends\n            \n            \n                            MediaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/firebase/firebase-media.service.ts:10\n                            \n                        \n\n                \n                    \n                            Creates an instance of FirebaseMediaService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with Firebase.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MediaService\n\n                        \n                    \n                    \n                        \n                                Defined in         MediaService:29\n\n                        \n                    \n\n\n            \n                \n                        Uploads a media file to Firebase.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The media file as a Blob.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the uploaded media.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { MediaService } from \"../media.service\";\nimport { FirebaseService } from \"../../firebase/firebase.service\";\nimport { error, info } from \"console\";\nimport { Media } from \"src/app/core/interfaces/media\";\n\n/**\n * Service to handle media operations using Firebase.\n */\nexport class FirebaseMediaService extends MediaService {\n\n    /**\n     * Creates an instance of FirebaseMediaService.\n     * \n     * @param firebase Service to interact with Firebase.\n     */\n    constructor(\n        private firebase: FirebaseService\n    ) {\n        super();\n    }\n\n    /**\n     * Uploads a media file to Firebase.\n     * \n     * @param blob The media file as a Blob.\n     * @returns An observable of the uploaded media.\n     */\n    public upload(blob: Blob): Observable {\n        return new Observable(obs => {\n            this.firebase.imageUpload(blob).then(data => {\n                var imgs = [];\n                var media: Media = {\n                    id: 0,\n                    url_large: data.file,\n                    url_medium: data.file,\n                    url_thumbnail: data.file,\n                    url_small: data.file\n                };\n                imgs.push(media);\n                obs.next(imgs);\n            }).catch(error => obs.error(error));\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseStorageFile.html":{"url":"interfaces/FirebaseStorageFile.html","title":"interface - FirebaseStorageFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseStorageFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a file in Firebase Storage.\nThis interface is used to define the structure of a file object that is stored in Firebase Storage.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL or reference to the actual file in Firebase Storage.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The path in Firebase Storage where the file is stored.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable, from, of, switchMap, map, take, toArray } from \"rxjs\";\nimport { initializeApp, getApp, FirebaseApp } from \"firebase/app\";\nimport { getFirestore, addDoc, collection, updateDoc, doc, onSnapshot, getDoc, setDoc, query, where, getDocs, Unsubscribe, DocumentData, deleteDoc, Firestore } from \"firebase/firestore\";\nimport { getStorage, ref, getDownloadURL, uploadBytes, FirebaseStorage } from \"firebase/storage\";\nimport { createUserWithEmailAndPassword, deleteUser, signInAnonymously, signOut, signInWithEmailAndPassword, initializeAuth, indexedDBLocalPersistence, UserCredential, Auth, User } from \"firebase/auth\";\n\n/**\n * Interface representing a file in Firebase Storage.\n * This interface is used to define the structure of a file object that is stored in Firebase Storage.\n */\nexport interface FirebaseStorageFile {\n  /**\n   * The path in Firebase Storage where the file is stored.\n   */\n  path: string;\n\n  /**\n   * The URL or reference to the actual file in Firebase Storage.\n   */\n  file: string;\n}\n\n/**\n * Interface representing a document in Firestore.\n * This interface is used to define the structure of a document object that is stored in Firestore.\n */\nexport interface FirebaseDocument {\n  /**\n   * The unique identifier of the document in Firestore.\n   */\n  id: string;\n\n  /**\n   * The data contained in the document. This can be of any type and represents the fields and values stored in the document.\n   */\n  data: DocumentData;\n}\n\n\n/**\n * Interface representing a user credential in Firebase Authentication.\n * This interface is used to define the structure of a user credential object that is returned\n * after a successful authentication operation (e.g., sign-in, sign-up) with Firebase Authentication.\n */\nexport interface FirebaseUserCredential {\n  /**\n   * The user credential object provided by Firebase Authentication.\n   * This includes details about the authenticated user and authentication tokens.\n   */\n  user: UserCredential;\n}\n\n\n/**\n * This service handles interactions with Firebase, including authentication, Firestore operations, and storage.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;  // Firebase app instance\n  private _db!: Firestore;  // Firestore instance\n  private _auth!: Auth;  // Firebase Auth instance\n  private _webStorage!: FirebaseStorage;  // Firebase Storage instance\n  private _user: User | null = null;  // Currently authenticated user\n\n  // BehaviorSubjects to track various states and data\n  private _isLogged: BehaviorSubject = new BehaviorSubject(false);\n  public isLogged$: Observable = this._isLogged.asObservable();\n  private _players: BehaviorSubject = new BehaviorSubject([]);\n  public players$: Observable = this._players.asObservable();\n  private _teams: BehaviorSubject = new BehaviorSubject([]);\n  public teams$: Observable = this._teams.asObservable();\n  private _games: BehaviorSubject = new BehaviorSubject([]);\n  public games$: Observable = this._games.asObservable();\n  private _votes: BehaviorSubject = new BehaviorSubject([]);\n  public votes$: Observable = this._votes.asObservable();\n  private _users: BehaviorSubject = new BehaviorSubject([]);\n  public users$: Observable = this._users.asObservable();\n  private _isAdmin: BehaviorSubject = new BehaviorSubject(false);\n  public isAdmin$: Observable = this._isAdmin.asObservable();\n  private _isOwner: BehaviorSubject = new BehaviorSubject(false);\n  public isOwner$: Observable = this._isOwner.asObservable();\n\n  /**\n   * Creates an instance of FirebaseService.\n   * @param config The Firebase configuration object.\n   */\n  constructor(\n    @Inject('firebase-config') config: any\n  ) {\n    this.init(config);\n  }\n\n  /**\n   * Initializes the Firebase app, Firestore, authentication, and storage.\n   * @param firebaseConfig The Firebase configuration object.\n   */\n  public init(firebaseConfig: any) {\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), { persistence: indexedDBLocalPersistence });\n    this._auth.onAuthStateChanged(async user => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          // Subscribe to collections\n          console.log(user.uid, \"User ID:\", user.email);\n          this.subscribeToPlayers(this._players, (el: any) => el);\n          this.subscribeToTeams(this._teams, (el: any) => el, this._players);\n          this.subscribeToGames(this._games, (el: any) => el, this._teams);\n          this.subscribeToVotes(this._votes, (el: any) => el);\n          this.subscribeToUsers(this._users, this.mapUser);\n          this.checkUserStatus(user.uid);\n        }\n      } else {\n        this._isLogged.next(false);\n        this._isAdmin.next(false);\n      }\n    });\n  }\n\n  /**\n   * Returns the currently authenticated user.\n   * @returns The currently authenticated user or null.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * Checks the status of the user and updates admin and owner status accordingly.\n   * @param userId The ID of the user to check.\n   */\n  private checkUserStatus(userId: string) {\n    const userDocRef = doc(this._db, 'users', userId);\n    onSnapshot(userDocRef, (doc) => {\n      if (doc.exists()) {\n        const userData = doc.data();\n        this._isAdmin.next(userData[\"isAdmin\"] === true);\n        this._isOwner.next(userData[\"isOwner\"] === true);\n      } else {\n        this._isAdmin.next(false);\n        this._isOwner.next(false);\n      }\n    });\n  }\n\n  /**\n   * Uploads a file to Firebase Storage.\n   * @param blob The file to upload as a Blob.\n   * @param mimeType The MIME type of the file.\n   * @param path The path in Firebase Storage to upload the file to.\n   * @param prefix A prefix for the file name.\n   * @param extension The file extension.\n   * @returns A promise that resolves to the uploaded file's metadata.\n   */\n  public fileUpload(blob: Blob, mimeType: string, path: string, prefix: string, extension: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth) {\n        reject({ msg: \"Not connected to FireStorage\" });\n      }\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + \"/\" + prefix + \"-\" + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = { contentType: mimeType };\n      uploadBytes(storageRef, blob).then(async (snapshot) => {\n        getDownloadURL(storageRef).then(async downloadURL => {\n          if (freeConnection) await signOut(this._auth!);\n          resolve({ path, file: downloadURL });\n        }).catch(async error => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n      }).catch(async (error) => {\n        if (freeConnection) await signOut(this._auth!);\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Uploads an image to Firebase Storage.\n   * @param blob The image file as a Blob.\n   * @returns A promise that resolves to the uploaded image's metadata.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', \".jpg\");\n  }\n\n  /**\n   * Creates a new document in a Firestore collection.\n   * @param collectionName The name of the collection to create the document in.\n   * @param data The data to include in the document.\n   * @returns A promise that resolves to the ID of the created document.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data).then(docRef => resolve(docRef.id)).catch(err => reject(err));\n    });\n  }\n\n  /**\n   * Creates a new document with a specified ID in a Firestore collection.\n   * @param collectionName The name of the collection to create the document in.\n   * @param data The data to include in the document.\n   * @param docId The ID to assign to the document.\n   * @returns A promise that resolves when the document is created.\n   */\n  public createDocumentWithId(collectionName: string, data: any, docId: string): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: 'Database is not connected' });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data).then(() => resolve()).catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * Updates an existing document in a Firestore collection.\n   * @param collectionName The name of the collection.\n   * @param data The data to update the document with.\n   * @param document The ID of the document to update.\n   * @returns A promise that resolves when the document is updated.\n   */\n  public updateDocument(collectionName: string, data: any, document: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data).then(docRef => resolve()).catch(err => reject(err));\n    });\n  }\n\n  /**\n   * Retrieves all documents from a Firestore collection.\n   * @param collectionName The name of the collection to retrieve documents from.\n   * @returns A promise that resolves to an array of documents.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const querySnapshot = await getDocs(collection(this._db!, collectionName));\n      resolve(querySnapshot.docs.map(doc => ({ id: doc.id, data: doc.data() })));\n    });\n  }\n\n  /**\n   * Retrieves a specific document from a Firestore collection.\n   * @param collectionName The name of the collection.\n   * @param document The ID of the document to retrieve.\n   * @returns A promise that resolves to the retrieved document.\n   */\n  public getDocument(collectionName: string, document: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        reject('Document does not exist');\n      }\n    });\n  }\n\n  /**\n   * Retrieves documents from a Firestore collection that match a specific field value.\n   * @param collectionName The name of the collection.\n   * @param field The field to filter by.\n   * @param value The value to filter by.\n   * @returns A promise that resolves to an array of matching documents.\n   */\n  public getDocumentsBy(collectionName: string, field: string, value: any): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const q = query(collection(this._db!, collectionName), where(field, \"==\", value));\n      const querySnapshot = await getDocs(q);\n      resolve(querySnapshot.docs.map(doc => ({ id: doc.id, data: doc.data() })));\n    });\n  }\n\n  /**\n   * Deletes a specific document from a Firestore collection.\n   * @param collectionName The name of the collection.\n   * @param docId The ID of the document to delete.\n   * @returns A promise that resolves when the document is deleted.\n   */\n  public deleteDocument(collectionName: string, docId: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      resolve(await deleteDoc(doc(this._db!, collectionName, docId)));\n    });\n  }\n\n  /**\n   * Subscribes to a Firestore collection and updates a BehaviorSubject with the collection data.\n   * @param collectionName The name of the collection to subscribe to.\n   * @param subject The BehaviorSubject to update with the collection data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public subscribeToCollection(collectionName: string, subject: BehaviorSubject, mapFunction: (el: FirebaseDocument) => any): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    return onSnapshot(collection(this._db, collectionName), (snapshot) => {\n      subject.next(snapshot.docs.map(doc => ({ id: doc.id, data: doc.data() })).map(mapFunction));\n    }, error => { });\n  }\n\n  /**\n   * Signs out the current user.\n   * @param signInAnon Whether to sign in anonymously after signing out.\n   * @returns A promise that resolves when the user is signed out.\n   */\n  public signOut(signInAnon: boolean = false): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (this._auth) {\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    });\n  }\n\n  /**\n   * Checks if a user is currently connected.\n   * @returns A promise that resolves to a boolean indicating if a user is connected.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) {\n        resolve(false);\n      }\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * Checks if a user is currently connected anonymously.\n   * @returns A promise that resolves to a boolean indicating if a user is connected anonymously.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) {\n        resolve(false);\n      }\n      resolve(this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous);\n    });\n    return response;\n  }\n\n  /**\n   * Connects a user anonymously.\n   * @returns A promise that resolves when the user is connected anonymously.\n   */\n  public connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) {\n        resolve();\n      }\n      if (!(await this.isUserConnected()) && !(await this.isUserConnectedAnonymously())) {\n        await signInAnonymously(this._auth!).catch(error => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) {\n        resolve();\n      } else {\n        reject({ msg: \"A user is already connected\" });\n      }\n    });\n    return response;\n  }\n\n  /**\n   * Creates a new user with an email and password.\n   * @param email The email of the new user.\n   * @param password The password of the new user.\n   * @returns A promise that resolves to the created user's credentials.\n   */\n  public createUserWithEmailAndPassword(email: string, password: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) {\n        resolve(null);\n      }\n      try {\n        resolve({ user: await createUserWithEmailAndPassword(this._auth!, email, password) });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\"Password is not strong enough. Add additional characters including special characters and numbers.\");\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Connects a user with an email and password.\n   * @param email The email of the user.\n   * @param password The password of the user.\n   * @returns A promise that resolves to the connected user's credentials.\n   */\n  public connectUserWithEmailAndPassword(email: string, password: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) {\n        resolve(null);\n      }\n      resolve({ user: await signInWithEmailAndPassword(this._auth!, email, password) });\n    });\n  }\n\n  /**\n   * Deletes the currently authenticated user.\n   * @returns A promise that resolves when the user is deleted.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) {\n        reject();\n      }\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * Updates a specific field in a document in a Firestore collection.\n   * @param collectionName The name of the collection.\n   * @param document The ID of the document to update.\n   * @param fieldName The name of the field to update.\n   * @param fieldValue The value to update the field with.\n   * @returns A promise that resolves when the field is updated.\n   */\n  public updateDocumentField(collectionName: string, document: string, fieldName: string, fieldValue: any): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue };\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Maps a Firestore document to a user object.\n   * @param doc The Firestore document data.\n   * @returns The mapped user object.\n   */\n  public mapUser(doc: DocumentData): any {\n    return {\n      email: doc['email'],\n      name: doc['name'],\n      nickname: doc['nickname'],\n      picture: doc['picture'],\n      isAdmin: doc['isAdmin'],\n      isOwner: doc['isOwner'],\n      uuid: doc[\"id\"]\n    };\n  }\n\n  /**\n   * Subscribes to the players collection in Firestore.\n   * @param subject The BehaviorSubject to update with the players data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public async subscribeToPlayers(subject: BehaviorSubject, mapFunction: (el: DocumentData) => any): Promise {\n    if (!this._db) {\n      return null;\n    }\n    try {\n      const playersRef = collection(this._db, \"players\");\n      const unsubscribePlayers = onSnapshot(playersRef, (snapshot) => {\n        const players = snapshot.docs.map(doc => {\n          const playerData = mapFunction(doc.data());\n          playerData.uuid = doc.id;\n          return playerData;\n        });\n        subject.next(players);\n      }, (error) => {\n        console.error('Error in onSnapshot:', error);\n      });\n      return unsubscribePlayers;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Subscribes to the users collection in Firestore.\n   * @param subject The BehaviorSubject to update with the users data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public async subscribeToUsers(subject: BehaviorSubject, mapFunction: (el: DocumentData) => any): Promise {\n    if (!this._db) {\n      return null;\n    }\n    try {\n      const usersRef = collection(this._db, \"users\");\n      const unsubscribeUsers = onSnapshot(usersRef, (snapshot) => {\n        const users = snapshot.docs.map(doc => {\n          const userData = mapFunction(doc.data());\n          userData.uuid = doc.id;\n          return userData;\n        });\n        subject.next(users);\n      }, (error) => {\n        console.error('Error in onSnapshot:', error);\n      });\n      return unsubscribeUsers;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Subscribes to the teams collection in Firestore.\n   * @param subject The BehaviorSubject to update with the teams data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @param playersSubject The BehaviorSubject to update with the players data.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public async subscribeToTeams(subject: BehaviorSubject, mapFunction: (el: DocumentData) => any, playersSubject: BehaviorSubject): Promise {\n    if (!this._db) {\n      return null;\n    }\n    try {\n      const teamsRef = collection(this._db, \"teams\");\n      const unsubscribeTeams = onSnapshot(teamsRef, async (snapshot) => {\n        const teams = snapshot.docs.map(doc => {\n          const teamData = mapFunction(doc.data());\n          teamData.uuid = doc.id;\n          return teamData;\n        });\n        console.log('Teams:', teams);\n\n        // Get players for each team based on player's UUID\n        playersSubject.pipe(take(1)).subscribe(players => {\n          teams.forEach(team => {\n            if (Array.isArray(team.players)) {\n              const teamPlayers = players.filter(player => team.players.includes(player.uuid));\n              team.players = teamPlayers;\n            } else {\n              team.players = []; // Initialize as an empty array if no players property\n            }\n          });\n          console.log('Updated teams:', teams);\n          subject.next(teams);\n        });\n      }, (error) => {\n        console.error('Error in onSnapshot:', error);\n      });\n      return unsubscribeTeams;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Subscribes to the games collection in Firestore.\n   * @param subject The BehaviorSubject to update with the games data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @param teamsSubject The BehaviorSubject to update with the teams data.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public async subscribeToGames(subject: BehaviorSubject, mapFunction: (el: DocumentData) => any, teamsSubject: BehaviorSubject): Promise {\n    if (!this._db) {\n      return null;\n    }\n    try {\n      const gamesRef = collection(this._db, \"games\");\n      const unsubscribeGames = onSnapshot(gamesRef, async (snapshot) => {\n        const games = snapshot.docs.map(doc => {\n          const gameData = mapFunction(doc.data());\n          gameData.uuid = doc.id;\n          return gameData;\n        });\n\n        // Map teams to games\n        teamsSubject.pipe(take(1)).subscribe(teams => {\n          games.forEach(game => {\n            game.local = teams.find(team => team.uuid === game.local) || null;\n            game.visitor = teams.find(team => team.uuid === game.visitor) || null;\n          });\n          subject.next(games);\n        });\n      }, (error) => {\n        console.error('Error in onSnapshot:', error);\n      });\n      return unsubscribeGames;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Subscribes to the votes collection in Firestore.\n   * @param subject The BehaviorSubject to update with the votes data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public async subscribeToVotes(subject: BehaviorSubject, mapFunction: (el: DocumentData) => any): Promise {\n    if (!this._db) {\n      return null;\n    }\n    try {\n      const votesRef = collection(this._db, \"votes\");\n      const unsubscribeVotes = onSnapshot(votesRef, (snapshot) => {\n        const votes = snapshot.docs.map(doc => {\n          const voteData = mapFunction(doc.data());\n          voteData.uuid = doc.id;\n          return voteData;\n        });\n        subject.next(votes);\n      }, (error) => {\n        console.error('Error in onSnapshot:', error);\n      });\n      return unsubscribeVotes;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseUserCredential.html":{"url":"interfaces/FirebaseUserCredential.html","title":"interface - FirebaseUserCredential","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseUserCredential\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user credential in Firebase Authentication.\nThis interface is used to define the structure of a user credential object that is returned\nafter a successful authentication operation (e.g., sign-in, sign-up) with Firebase Authentication.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserCredential\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserCredential\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user credential object provided by Firebase Authentication.\nThis includes details about the authenticated user and authentication tokens.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable, from, of, switchMap, map, take, toArray } from \"rxjs\";\nimport { initializeApp, getApp, FirebaseApp } from \"firebase/app\";\nimport { getFirestore, addDoc, collection, updateDoc, doc, onSnapshot, getDoc, setDoc, query, where, getDocs, Unsubscribe, DocumentData, deleteDoc, Firestore } from \"firebase/firestore\";\nimport { getStorage, ref, getDownloadURL, uploadBytes, FirebaseStorage } from \"firebase/storage\";\nimport { createUserWithEmailAndPassword, deleteUser, signInAnonymously, signOut, signInWithEmailAndPassword, initializeAuth, indexedDBLocalPersistence, UserCredential, Auth, User } from \"firebase/auth\";\n\n/**\n * Interface representing a file in Firebase Storage.\n * This interface is used to define the structure of a file object that is stored in Firebase Storage.\n */\nexport interface FirebaseStorageFile {\n  /**\n   * The path in Firebase Storage where the file is stored.\n   */\n  path: string;\n\n  /**\n   * The URL or reference to the actual file in Firebase Storage.\n   */\n  file: string;\n}\n\n/**\n * Interface representing a document in Firestore.\n * This interface is used to define the structure of a document object that is stored in Firestore.\n */\nexport interface FirebaseDocument {\n  /**\n   * The unique identifier of the document in Firestore.\n   */\n  id: string;\n\n  /**\n   * The data contained in the document. This can be of any type and represents the fields and values stored in the document.\n   */\n  data: DocumentData;\n}\n\n\n/**\n * Interface representing a user credential in Firebase Authentication.\n * This interface is used to define the structure of a user credential object that is returned\n * after a successful authentication operation (e.g., sign-in, sign-up) with Firebase Authentication.\n */\nexport interface FirebaseUserCredential {\n  /**\n   * The user credential object provided by Firebase Authentication.\n   * This includes details about the authenticated user and authentication tokens.\n   */\n  user: UserCredential;\n}\n\n\n/**\n * This service handles interactions with Firebase, including authentication, Firestore operations, and storage.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;  // Firebase app instance\n  private _db!: Firestore;  // Firestore instance\n  private _auth!: Auth;  // Firebase Auth instance\n  private _webStorage!: FirebaseStorage;  // Firebase Storage instance\n  private _user: User | null = null;  // Currently authenticated user\n\n  // BehaviorSubjects to track various states and data\n  private _isLogged: BehaviorSubject = new BehaviorSubject(false);\n  public isLogged$: Observable = this._isLogged.asObservable();\n  private _players: BehaviorSubject = new BehaviorSubject([]);\n  public players$: Observable = this._players.asObservable();\n  private _teams: BehaviorSubject = new BehaviorSubject([]);\n  public teams$: Observable = this._teams.asObservable();\n  private _games: BehaviorSubject = new BehaviorSubject([]);\n  public games$: Observable = this._games.asObservable();\n  private _votes: BehaviorSubject = new BehaviorSubject([]);\n  public votes$: Observable = this._votes.asObservable();\n  private _users: BehaviorSubject = new BehaviorSubject([]);\n  public users$: Observable = this._users.asObservable();\n  private _isAdmin: BehaviorSubject = new BehaviorSubject(false);\n  public isAdmin$: Observable = this._isAdmin.asObservable();\n  private _isOwner: BehaviorSubject = new BehaviorSubject(false);\n  public isOwner$: Observable = this._isOwner.asObservable();\n\n  /**\n   * Creates an instance of FirebaseService.\n   * @param config The Firebase configuration object.\n   */\n  constructor(\n    @Inject('firebase-config') config: any\n  ) {\n    this.init(config);\n  }\n\n  /**\n   * Initializes the Firebase app, Firestore, authentication, and storage.\n   * @param firebaseConfig The Firebase configuration object.\n   */\n  public init(firebaseConfig: any) {\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), { persistence: indexedDBLocalPersistence });\n    this._auth.onAuthStateChanged(async user => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          // Subscribe to collections\n          console.log(user.uid, \"User ID:\", user.email);\n          this.subscribeToPlayers(this._players, (el: any) => el);\n          this.subscribeToTeams(this._teams, (el: any) => el, this._players);\n          this.subscribeToGames(this._games, (el: any) => el, this._teams);\n          this.subscribeToVotes(this._votes, (el: any) => el);\n          this.subscribeToUsers(this._users, this.mapUser);\n          this.checkUserStatus(user.uid);\n        }\n      } else {\n        this._isLogged.next(false);\n        this._isAdmin.next(false);\n      }\n    });\n  }\n\n  /**\n   * Returns the currently authenticated user.\n   * @returns The currently authenticated user or null.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * Checks the status of the user and updates admin and owner status accordingly.\n   * @param userId The ID of the user to check.\n   */\n  private checkUserStatus(userId: string) {\n    const userDocRef = doc(this._db, 'users', userId);\n    onSnapshot(userDocRef, (doc) => {\n      if (doc.exists()) {\n        const userData = doc.data();\n        this._isAdmin.next(userData[\"isAdmin\"] === true);\n        this._isOwner.next(userData[\"isOwner\"] === true);\n      } else {\n        this._isAdmin.next(false);\n        this._isOwner.next(false);\n      }\n    });\n  }\n\n  /**\n   * Uploads a file to Firebase Storage.\n   * @param blob The file to upload as a Blob.\n   * @param mimeType The MIME type of the file.\n   * @param path The path in Firebase Storage to upload the file to.\n   * @param prefix A prefix for the file name.\n   * @param extension The file extension.\n   * @returns A promise that resolves to the uploaded file's metadata.\n   */\n  public fileUpload(blob: Blob, mimeType: string, path: string, prefix: string, extension: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth) {\n        reject({ msg: \"Not connected to FireStorage\" });\n      }\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + \"/\" + prefix + \"-\" + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = { contentType: mimeType };\n      uploadBytes(storageRef, blob).then(async (snapshot) => {\n        getDownloadURL(storageRef).then(async downloadURL => {\n          if (freeConnection) await signOut(this._auth!);\n          resolve({ path, file: downloadURL });\n        }).catch(async error => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n      }).catch(async (error) => {\n        if (freeConnection) await signOut(this._auth!);\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Uploads an image to Firebase Storage.\n   * @param blob The image file as a Blob.\n   * @returns A promise that resolves to the uploaded image's metadata.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', \".jpg\");\n  }\n\n  /**\n   * Creates a new document in a Firestore collection.\n   * @param collectionName The name of the collection to create the document in.\n   * @param data The data to include in the document.\n   * @returns A promise that resolves to the ID of the created document.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data).then(docRef => resolve(docRef.id)).catch(err => reject(err));\n    });\n  }\n\n  /**\n   * Creates a new document with a specified ID in a Firestore collection.\n   * @param collectionName The name of the collection to create the document in.\n   * @param data The data to include in the document.\n   * @param docId The ID to assign to the document.\n   * @returns A promise that resolves when the document is created.\n   */\n  public createDocumentWithId(collectionName: string, data: any, docId: string): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: 'Database is not connected' });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data).then(() => resolve()).catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * Updates an existing document in a Firestore collection.\n   * @param collectionName The name of the collection.\n   * @param data The data to update the document with.\n   * @param document The ID of the document to update.\n   * @returns A promise that resolves when the document is updated.\n   */\n  public updateDocument(collectionName: string, data: any, document: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data).then(docRef => resolve()).catch(err => reject(err));\n    });\n  }\n\n  /**\n   * Retrieves all documents from a Firestore collection.\n   * @param collectionName The name of the collection to retrieve documents from.\n   * @returns A promise that resolves to an array of documents.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const querySnapshot = await getDocs(collection(this._db!, collectionName));\n      resolve(querySnapshot.docs.map(doc => ({ id: doc.id, data: doc.data() })));\n    });\n  }\n\n  /**\n   * Retrieves a specific document from a Firestore collection.\n   * @param collectionName The name of the collection.\n   * @param document The ID of the document to retrieve.\n   * @returns A promise that resolves to the retrieved document.\n   */\n  public getDocument(collectionName: string, document: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        reject('Document does not exist');\n      }\n    });\n  }\n\n  /**\n   * Retrieves documents from a Firestore collection that match a specific field value.\n   * @param collectionName The name of the collection.\n   * @param field The field to filter by.\n   * @param value The value to filter by.\n   * @returns A promise that resolves to an array of matching documents.\n   */\n  public getDocumentsBy(collectionName: string, field: string, value: any): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const q = query(collection(this._db!, collectionName), where(field, \"==\", value));\n      const querySnapshot = await getDocs(q);\n      resolve(querySnapshot.docs.map(doc => ({ id: doc.id, data: doc.data() })));\n    });\n  }\n\n  /**\n   * Deletes a specific document from a Firestore collection.\n   * @param collectionName The name of the collection.\n   * @param docId The ID of the document to delete.\n   * @returns A promise that resolves when the document is deleted.\n   */\n  public deleteDocument(collectionName: string, docId: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      resolve(await deleteDoc(doc(this._db!, collectionName, docId)));\n    });\n  }\n\n  /**\n   * Subscribes to a Firestore collection and updates a BehaviorSubject with the collection data.\n   * @param collectionName The name of the collection to subscribe to.\n   * @param subject The BehaviorSubject to update with the collection data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public subscribeToCollection(collectionName: string, subject: BehaviorSubject, mapFunction: (el: FirebaseDocument) => any): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    return onSnapshot(collection(this._db, collectionName), (snapshot) => {\n      subject.next(snapshot.docs.map(doc => ({ id: doc.id, data: doc.data() })).map(mapFunction));\n    }, error => { });\n  }\n\n  /**\n   * Signs out the current user.\n   * @param signInAnon Whether to sign in anonymously after signing out.\n   * @returns A promise that resolves when the user is signed out.\n   */\n  public signOut(signInAnon: boolean = false): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (this._auth) {\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    });\n  }\n\n  /**\n   * Checks if a user is currently connected.\n   * @returns A promise that resolves to a boolean indicating if a user is connected.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) {\n        resolve(false);\n      }\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * Checks if a user is currently connected anonymously.\n   * @returns A promise that resolves to a boolean indicating if a user is connected anonymously.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) {\n        resolve(false);\n      }\n      resolve(this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous);\n    });\n    return response;\n  }\n\n  /**\n   * Connects a user anonymously.\n   * @returns A promise that resolves when the user is connected anonymously.\n   */\n  public connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) {\n        resolve();\n      }\n      if (!(await this.isUserConnected()) && !(await this.isUserConnectedAnonymously())) {\n        await signInAnonymously(this._auth!).catch(error => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) {\n        resolve();\n      } else {\n        reject({ msg: \"A user is already connected\" });\n      }\n    });\n    return response;\n  }\n\n  /**\n   * Creates a new user with an email and password.\n   * @param email The email of the new user.\n   * @param password The password of the new user.\n   * @returns A promise that resolves to the created user's credentials.\n   */\n  public createUserWithEmailAndPassword(email: string, password: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) {\n        resolve(null);\n      }\n      try {\n        resolve({ user: await createUserWithEmailAndPassword(this._auth!, email, password) });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\"Password is not strong enough. Add additional characters including special characters and numbers.\");\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Connects a user with an email and password.\n   * @param email The email of the user.\n   * @param password The password of the user.\n   * @returns A promise that resolves to the connected user's credentials.\n   */\n  public connectUserWithEmailAndPassword(email: string, password: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) {\n        resolve(null);\n      }\n      resolve({ user: await signInWithEmailAndPassword(this._auth!, email, password) });\n    });\n  }\n\n  /**\n   * Deletes the currently authenticated user.\n   * @returns A promise that resolves when the user is deleted.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) {\n        reject();\n      }\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * Updates a specific field in a document in a Firestore collection.\n   * @param collectionName The name of the collection.\n   * @param document The ID of the document to update.\n   * @param fieldName The name of the field to update.\n   * @param fieldValue The value to update the field with.\n   * @returns A promise that resolves when the field is updated.\n   */\n  public updateDocumentField(collectionName: string, document: string, fieldName: string, fieldValue: any): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({ msg: \"Database is not connected\" });\n      }\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue };\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Maps a Firestore document to a user object.\n   * @param doc The Firestore document data.\n   * @returns The mapped user object.\n   */\n  public mapUser(doc: DocumentData): any {\n    return {\n      email: doc['email'],\n      name: doc['name'],\n      nickname: doc['nickname'],\n      picture: doc['picture'],\n      isAdmin: doc['isAdmin'],\n      isOwner: doc['isOwner'],\n      uuid: doc[\"id\"]\n    };\n  }\n\n  /**\n   * Subscribes to the players collection in Firestore.\n   * @param subject The BehaviorSubject to update with the players data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public async subscribeToPlayers(subject: BehaviorSubject, mapFunction: (el: DocumentData) => any): Promise {\n    if (!this._db) {\n      return null;\n    }\n    try {\n      const playersRef = collection(this._db, \"players\");\n      const unsubscribePlayers = onSnapshot(playersRef, (snapshot) => {\n        const players = snapshot.docs.map(doc => {\n          const playerData = mapFunction(doc.data());\n          playerData.uuid = doc.id;\n          return playerData;\n        });\n        subject.next(players);\n      }, (error) => {\n        console.error('Error in onSnapshot:', error);\n      });\n      return unsubscribePlayers;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Subscribes to the users collection in Firestore.\n   * @param subject The BehaviorSubject to update with the users data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public async subscribeToUsers(subject: BehaviorSubject, mapFunction: (el: DocumentData) => any): Promise {\n    if (!this._db) {\n      return null;\n    }\n    try {\n      const usersRef = collection(this._db, \"users\");\n      const unsubscribeUsers = onSnapshot(usersRef, (snapshot) => {\n        const users = snapshot.docs.map(doc => {\n          const userData = mapFunction(doc.data());\n          userData.uuid = doc.id;\n          return userData;\n        });\n        subject.next(users);\n      }, (error) => {\n        console.error('Error in onSnapshot:', error);\n      });\n      return unsubscribeUsers;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Subscribes to the teams collection in Firestore.\n   * @param subject The BehaviorSubject to update with the teams data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @param playersSubject The BehaviorSubject to update with the players data.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public async subscribeToTeams(subject: BehaviorSubject, mapFunction: (el: DocumentData) => any, playersSubject: BehaviorSubject): Promise {\n    if (!this._db) {\n      return null;\n    }\n    try {\n      const teamsRef = collection(this._db, \"teams\");\n      const unsubscribeTeams = onSnapshot(teamsRef, async (snapshot) => {\n        const teams = snapshot.docs.map(doc => {\n          const teamData = mapFunction(doc.data());\n          teamData.uuid = doc.id;\n          return teamData;\n        });\n        console.log('Teams:', teams);\n\n        // Get players for each team based on player's UUID\n        playersSubject.pipe(take(1)).subscribe(players => {\n          teams.forEach(team => {\n            if (Array.isArray(team.players)) {\n              const teamPlayers = players.filter(player => team.players.includes(player.uuid));\n              team.players = teamPlayers;\n            } else {\n              team.players = []; // Initialize as an empty array if no players property\n            }\n          });\n          console.log('Updated teams:', teams);\n          subject.next(teams);\n        });\n      }, (error) => {\n        console.error('Error in onSnapshot:', error);\n      });\n      return unsubscribeTeams;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Subscribes to the games collection in Firestore.\n   * @param subject The BehaviorSubject to update with the games data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @param teamsSubject The BehaviorSubject to update with the teams data.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public async subscribeToGames(subject: BehaviorSubject, mapFunction: (el: DocumentData) => any, teamsSubject: BehaviorSubject): Promise {\n    if (!this._db) {\n      return null;\n    }\n    try {\n      const gamesRef = collection(this._db, \"games\");\n      const unsubscribeGames = onSnapshot(gamesRef, async (snapshot) => {\n        const games = snapshot.docs.map(doc => {\n          const gameData = mapFunction(doc.data());\n          gameData.uuid = doc.id;\n          return gameData;\n        });\n\n        // Map teams to games\n        teamsSubject.pipe(take(1)).subscribe(teams => {\n          games.forEach(game => {\n            game.local = teams.find(team => team.uuid === game.local) || null;\n            game.visitor = teams.find(team => team.uuid === game.visitor) || null;\n          });\n          subject.next(games);\n        });\n      }, (error) => {\n        console.error('Error in onSnapshot:', error);\n      });\n      return unsubscribeGames;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Subscribes to the votes collection in Firestore.\n   * @param subject The BehaviorSubject to update with the votes data.\n   * @param mapFunction A function to map the document data to a specific format.\n   * @returns An unsubscribe function to stop the subscription.\n   */\n  public async subscribeToVotes(subject: BehaviorSubject, mapFunction: (el: DocumentData) => any): Promise {\n    if (!this._db) {\n      return null;\n    }\n    try {\n      const votesRef = collection(this._db, \"votes\");\n      const unsubscribeVotes = onSnapshot(votesRef, (snapshot) => {\n        const votes = snapshot.docs.map(doc => {\n          const voteData = mapFunction(doc.data());\n          voteData.uuid = doc.id;\n          return voteData;\n        });\n        subject.next(votes);\n      }, (error) => {\n        console.error('Error in onSnapshot:', error);\n      });\n      return unsubscribeVotes;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Formats.html":{"url":"interfaces/Formats.html","title":"interface - Formats","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Formats\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the different formats of a media object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            large\n                                        \n                                \n                                \n                                        \n                                            medium\n                                        \n                                \n                                \n                                        \n                                            small\n                                        \n                                \n                                \n                                        \n                                            thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        large:         MediaFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaFormat\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The large format of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        medium:         MediaFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaFormat\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The medium format of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        small:         MediaFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaFormat\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The small format of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnail:         MediaFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaFormat\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The thumbnail format of the media.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiUser {\n  /**\n   * The unique identifier of the user.\n   */\n  id: number;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n\n  /**\n   * The email of the user.\n   */\n  email: string;\n}\n\n/**\n * Interface representing the payload for Strapi login.\n */\nexport interface StrapiLoginPayload {\n  /**\n   * The identifier (username or email) of the user.\n   */\n  identifier: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n}\n\n/**\n * Interface representing the payload for Strapi registration.\n */\nexport interface StrapiRegisterPayload {\n  /**\n   * The email of the user.\n   */\n  email: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n}\n\n/**\n * Interface representing the response from Strapi login.\n */\nexport interface StrapiLoginResponse {\n  /**\n   * The JWT token.\n   */\n  jwt: string;\n\n  /**\n   * The user details.\n   */\n  user: StrapiUser;\n}\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The data object containing extended user details.\n   */\n  data: {\n    /**\n     * The name of the user.\n     */\n    name: string;\n\n    /**\n     * The surname of the user.\n     */\n    surname: string;\n\n    /**\n     * The user permissions identifier.\n     */\n    users_permissions_user: number;\n\n    /**\n     * The array of player identifiers associated with the user.\n     */\n    players: number[];\n\n    /**\n     * The array of team identifiers associated with the user.\n     */\n    teams: number[];\n\n    /**\n     * The array of trainer identifiers associated with the user.\n     */\n    trainers: number[];\n  };\n}\n\n/**\n * Interface representing a generic Strapi data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiData {\n  /**\n   * The unique identifier of the data object.\n   */\n  id: number;\n\n  /**\n   * The attributes of the data object.\n   */\n  attributes: T;\n}\n\n/**\n * Interface representing a response from Strapi that includes an array of data objects.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiArrayResponse {\n  /**\n   * The array of data objects.\n   */\n  data: StrapiData[];\n\n  /**\n   * Meta information about the response.\n   */\n  meta: {\n    /**\n     * Pagination details (optional).\n     */\n    pagination?: {\n      page: number;\n      pageSize: number;\n      pageCount: number;\n      total: number;\n    };\n  };\n}\n\n/**\n * Interface representing a response from Strapi that includes a single data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiResponse {\n  /**\n   * The data object.\n   */\n  data: StrapiData;\n}\n\n/**\n * Type alias for the current Strapi user.\n */\nexport type StrapiMe = StrapiUser;\n\n/**\n * Type alias for the response from Strapi registration.\n */\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The unique identifier of the extended user (optional).\n   */\n  id?: number;\n\n  /**\n   * The name of the user.\n   */\n  name: string;\n\n  /**\n   * The surname of the user.\n   */\n  surname: string;\n\n  /**\n   * The user ID.\n   */\n  user_id: number;\n\n  /**\n   * The nickname of the user (optional).\n   */\n  nickname?: string;\n\n  /**\n   * The picture of the user (optional).\n   */\n  picture?: {\n    /**\n     * The data object containing the media details.\n     */\n    data: StrapiData;\n  };\n}\n\n/**\n * Type alias for the response from Strapi media upload.\n */\nexport type StrapiUploadResponse = StrapiMedia[];\n\n/**\n * Interface representing a Strapi media object.\n */\nexport interface StrapiMedia {\n  /**\n   * The unique identifier of the media.\n   */\n  id: number;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * Alternative text for the media.\n   */\n  alternativeText: any;\n\n  /**\n   * Caption for the media.\n   */\n  caption: any;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * The different formats of the media.\n   */\n  formats: Formats;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The preview URL of the media (optional).\n   */\n  previewUrl: any;\n\n  /**\n   * The provider of the media.\n   */\n  provider: string;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n\n  /**\n   * The creation date of the media.\n   */\n  createdAt: string;\n\n  /**\n   * The last update date of the media.\n   */\n  updatedAt: string;\n}\n\n/**\n * Interface representing the different formats of a media object.\n */\nexport interface Formats {\n  /**\n   * The large format of the media.\n   */\n  large: MediaFormat;\n\n  /**\n   * The small format of the media.\n   */\n  small: MediaFormat;\n\n  /**\n   * The medium format of the media.\n   */\n  medium: MediaFormat;\n\n  /**\n   * The thumbnail format of the media.\n   */\n  thumbnail: MediaFormat;\n}\n\n/**\n * Interface representing a specific format of a media object.\n */\nexport interface MediaFormat {\n  /**\n   * The file extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * The path of the media (optional).\n   */\n  path: any;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n}\n\n/**\n * Interface representing provider metadata for a media object.\n */\nexport interface ProviderMetadata {\n  /**\n   * The public ID of the media.\n   */\n  public_id: string;\n\n  /**\n   * The resource type of the media.\n   */\n  resource_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/game.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a game.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gameDate\n                                        \n                                \n                                \n                                        \n                                            local\n                                        \n                                \n                                \n                                        \n                                            localRuns\n                                        \n                                \n                                \n                                        \n                                            story\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uuid\n                                        \n                                \n                                \n                                        \n                                            visitor\n                                        \n                                \n                                \n                                        \n                                            visitorRuns\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gameDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gameDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date of the game.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        local\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        local:         Team\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The local team.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localRuns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        localRuns:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of runs scored by the local team.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        story\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        story:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The story or description of the game.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The unique identifier of the game.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visitor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visitor:         Team\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The visiting team.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visitorRuns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visitorRuns:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of runs scored by the visiting team.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Team } from \"./team\";\n\n/**\n * Interface representing a game.\n */\nexport interface Game {\n    /**\n     * The date of the game.\n     */\n    gameDate: Date;\n\n    /**\n     * The local team.\n     */\n    local: Team;\n\n    /**\n     * The number of runs scored by the local team.\n     */\n    localRuns: number;\n\n    /**\n     * The story or description of the game.\n     */\n    story: string;\n\n    /**\n     * The visiting team.\n     */\n    visitor: Team;\n\n    /**\n     * The number of runs scored by the visiting team.\n     */\n    visitorRuns: number;\n\n    /**\n     * The unique identifier of the game.\n     */\n    uuid?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameInfoComponent.html":{"url":"components/GameInfoComponent.html","title":"component - GameInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/game-info/game-info.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying game information.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game-info\n            \n\n\n\n            \n                styleUrls\n                ./game-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./game-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCardClick\n                            \n                            \n                                onDeleteClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                game\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onCardClicked\n                            \n                            \n                                onDeleteClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/game-info/game-info.component.ts:27\n                            \n                        \n\n                \n                    \n                            Creates an instance of GameInfoComponent.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        game\n                    \n                \n                \n                    \n                        Type :         Game | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/game-info/game-info.component.ts:17\n                            \n                        \n                \n                    \n                        The game data to display.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onCardClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/game-info/game-info.component.ts:22\n                            \n                        \n                \n                    \n                        Event emitted when the game card is clicked.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onDeleteClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/game-info/game-info.component.ts:27\n                            \n                        \n                \n                    \n                        Event emitted when the delete button is clicked.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCardClick\n                        \n                    \n                \n            \n            \n                \nonCardClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/game-info/game-info.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Handles the click event on the game card.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/game-info/game-info.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Handles the click event on the delete button.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Game } from 'src/app/core/interfaces/game';\n\n/**\n * Component for displaying game information.\n */\n@Component({\n  selector: 'app-game-info',\n  templateUrl: './game-info.component.html',\n  styleUrls: ['./game-info.component.scss'],\n})\nexport class GameInfoComponent {\n\n  /**\n   * The game data to display.\n   */\n  @Input() game: Game | undefined;\n\n  /**\n   * Event emitted when the game card is clicked.\n   */\n  @Output() onCardClicked: EventEmitter = new EventEmitter();\n\n  /**\n   * Event emitted when the delete button is clicked.\n   */\n  @Output() onDeleteClicked: EventEmitter = new EventEmitter();\n\n  /**\n   * Creates an instance of GameInfoComponent.\n   */\n  constructor() {}\n\n  /**\n   * Handles the click event on the game card.\n   */\n  onCardClick() {\n    this.onCardClicked.emit();\n  }\n\n  /**\n   * Handles the click event on the delete button.\n   * \n   * @param event The click event.\n   */\n  onDeleteClick(event: any) {\n    this.onDeleteClicked.emit();\n    event.stopPropagation();\n  }\n}\n\n    \n\n    \n        \n  \n    {{ game?.local?.name|name:8 }} vs {{ game?.visitor?.name|name:8 }}\n    \n      \n    \n  \n  \n    \n      \n        {{ game?.local?.name|name:8 }}\n        \n          \n        \n        {{ game?.localRuns }}\n      \n      VS\n      \n        {{ game?.visitor?.name|name:8 }}\n        \n          \n        \n        {{ game?.visitorRuns }}\n      \n    \n    {{'games.date' | translate}}: {{ game?.gameDate | date }}\n  \n\n\n    \n\n    \n                \n                    ./game-info.component.scss\n                \n                .card-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.team-info-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 16px;\n}\n\n.team-info {\n  text-align: center;\n  margin: 0 16px;\n}\n\n.team-name {\n  font-size: 1.2rem;\n  margin-bottom: 8px;\n  color: var(--ion-color-textColor);\n}\n\n.team-image img {\n  width: 100px;\n  height: 100px;\n  object-fit: cover;\n  border-radius: 50%;\n}\n\n.team-runs {\n  font-size: 1rem;\n  margin-top: 8px;\n}\n\n.vs-text {\n  font-size: 2rem;\n  font-weight: bold;\n  margin: 0 16px;\n  color: var(--ion-color-textColor);\n}\n\nion-card-title {\n  text-align: center;\n  position: relative;\n}\n\n.delete-button {\n  position: absolute;\n  top: 8px;\n  right: 8px;\n}\n\n/* Hover effect for ion-card */\n:host {\n  ion-card {\n    cursor: pointer;\n\n    &:hover {\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n      cursor: pointer;\n    }\n  }\n}\n\nion-card{\n  background-color: var(--ion-color-secondaryGreen);\n}\nion-card-title{\n  color: var(--ion-color-textColor);\n}\n.games-date{\n  color: var(--ion-color-textColor);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ game?.local?.name|name:8 }} vs {{ game?.visitor?.name|name:8 }}                                    {{ game?.local?.name|name:8 }}                                  {{ game?.localRuns }}            VS              {{ game?.visitor?.name|name:8 }}                                  {{ game?.visitorRuns }}              {{\\'games.date\\' | translate}}: {{ game?.gameDate | date }}  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'GameInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/game.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service handles operations related to games.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _games\n                            \n                            \n                                    Public\n                                games$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addGame\n                            \n                            \n                                    Public\n                                deleteGame\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                getGame\n                            \n                            \n                                    Public\n                                updateGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseSvc: FirebaseService, teamsService: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/game.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates an instance of GameService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with Firebase.\n\n                                                        \n                                                \n                                                \n                                                        teamsService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get details of the teams.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    addGame(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/game.service.ts:99\n                        \n                    \n\n\n            \n                \n                        Adds a new game.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                            Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The game to add.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the added game.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteGame(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/game.service.ts:136\n                        \n                    \n\n\n            \n                \n                        Deletes a game.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                            Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The game to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the deleted game.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/game.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Retrieves all games.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the list of games.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGame(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/game.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Retrieves a game by its UUID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The UUID of the game.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the game.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateGame(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/game.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Updates an existing game.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                            Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The game to update.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the update operation.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _games\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/game.service.ts:18\n                        \n                    \n\n            \n                \n                    BehaviorSubject to track the list of games.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        games$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._games.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/game.service.ts:23\n                        \n                    \n\n            \n                \n                    Observable for the list of games.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, from, map, Observable, switchMap, throwError } from 'rxjs';\nimport { Game } from '../../interfaces/game';\nimport { FirebaseDocument, FirebaseService } from '../firebase/firebase.service';\nimport { TeamService } from './team.service';\n\n/**\n * This service handles operations related to games.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n\n  /**\n   * BehaviorSubject to track the list of games.\n   */\n  private _games: BehaviorSubject = new BehaviorSubject([]);\n\n  /**\n   * Observable for the list of games.\n   */\n  public games$: Observable = this._games.asObservable();\n\n  /**\n   * Creates an instance of GameService.\n   * \n   * @param firebaseSvc Service to interact with Firebase.\n   * @param teamsService Service to get details of the teams.\n   */\n  constructor(\n    private firebaseSvc: FirebaseService,\n    private teamsService: TeamService\n  ) {\n    this.games$ = this.firebaseSvc.games$;\n  }\n\n  /**\n   * Retrieves a game by its UUID.\n   * \n   * @param uuid The UUID of the game.\n   * @returns An observable of the game.\n   */\n  public getGame(uuid: string): Observable {\n    return from(this.firebaseSvc.getDocument(\"games\", uuid)).pipe(\n      switchMap((doc: FirebaseDocument) => {\n        const localTeamUUID = doc.data['local'];\n        const visitorTeamUUID = doc.data['visitor'];\n\n        return this.teamsService.getTeam(localTeamUUID).pipe(\n          switchMap(localTeam => {\n            return this.teamsService.getTeam(visitorTeamUUID).pipe(\n              map(visitorTeam => {\n                const game: Game = {\n                  uuid: doc.id,\n                  gameDate: doc.data['gameDate'],\n                  local: localTeam,\n                  localRuns: doc.data['localRuns'],\n                  story: doc.data['story'],\n                  visitor: visitorTeam,\n                  visitorRuns: doc.data['visitorRuns']\n                };\n                return game;\n              })\n            );\n          })\n        );\n      })\n    );\n  }\n\n  /**\n   * Retrieves all games.\n   * \n   * @returns An observable of the list of games.\n   */\n  public getAll(): Observable {\n    return from(this.firebaseSvc.getDocuments(\"games\")).pipe(\n      switchMap((gameDocuments: FirebaseDocument[]) => {\n        const gameObservables = gameDocuments.map(doc => {\n          return this.getGame(doc.id);\n        });\n        return combineLatest(gameObservables).pipe(\n          map(games => {\n            this._games.next(games);\n            return games;\n          })\n        );\n      })\n    );\n  }\n\n  /**\n   * Adds a new game.\n   * \n   * @param game The game to add.\n   * @returns An observable of the added game.\n   */\n  public addGame(game: Game): Observable {\n    return from(this.firebaseSvc.createDocument(\"games\", game)).pipe(\n      map(createdDocId => {\n        game.uuid = createdDocId;\n        return game;\n      })\n    );\n  }\n\n  /**\n   * Updates an existing game.\n   * \n   * @param game The game to update.\n   * @returns An observable of the update operation.\n   */\n  public updateGame(game: Game): Observable {\n    if (!game.uuid) {\n      return throwError(new Error(\"Game does not have UUID\"));\n    }\n\n    const gameData = { ...game };\n    delete gameData.uuid; // Remove UUID to avoid overwriting in Firestore\n\n    return from(this.firebaseSvc.updateDocument(\"games\", gameData, game.uuid)).pipe(\n      map(() => {\n        const updatedGames = this._games.value.map(g => g.uuid === game.uuid ? game : g);\n        this._games.next(updatedGames);\n      })\n    );\n  }\n\n  /**\n   * Deletes a game.\n   * \n   * @param game The game to delete.\n   * @returns An observable of the deleted game.\n   */\n  public deleteGame(game: Game): Observable {\n    return new Observable(obs => {\n      if (!game.uuid) {\n        obs.error(new Error(\"Game does not have UUID\"));\n        return;\n      }\n  \n      // Delete the game from the \"games\" collection\n      from(this.firebaseSvc.deleteDocument(\"games\", game.uuid)).subscribe({\n        next: () => {\n          obs.next(game); // Return the deleted game in the observable\n          obs.complete();\n        },\n        error: error => {\n          obs.error(error); // Propagate any error that occurs during the process\n        }\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GamesPage.html":{"url":"components/GamesPage.html","title":"component - GamesPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GamesPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/games/games.page.ts\n\n\n\n    \n        Description\n    \n    \n        Component for managing the games page.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-games\n            \n\n\n\n            \n                styleUrls\n                ./games.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./games.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                games$\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                downloadGamesCSV\n                            \n                            \n                                downloadVotesCSV\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                onCardClicked\n                            \n                            \n                                    Public\n                                onDeleteClicked\n                            \n                            \n                                onNewGame\n                            \n                            \n                                    Async\n                                presentForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameService: GameService, voteService: VoteService, teamService: TeamService, toast: ToastController, modal: ModalController, media: MediaService, csvService: CsvService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/games/games.page.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of GamesPage.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage game data.\n\n                                                        \n                                                \n                                                \n                                                        voteService\n                                                  \n                                                        \n                                                                        VoteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage vote data.\n\n                                                        \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage team data.\n\n                                                        \n                                                \n                                                \n                                                        toast\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller to show toast notifications.\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller to handle modal dialogs.\n\n                                                        \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                        MediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage media uploads.\n\n                                                        \n                                                \n                                                \n                                                        csvService\n                                                  \n                                                        \n                                                                        CsvService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to generate CSV files.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadGamesCSV\n                        \n                    \n                \n            \n            \n                \ndownloadGamesCSV()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/games/games.page.ts:290\n                        \n                    \n\n\n            \n                \n                        Downloads the games data as a CSV file.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadVotesCSV\n                        \n                    \n                \n            \n            \n                \ndownloadVotesCSV()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/games/games.page.ts:257\n                        \n                    \n\n\n            \n                \n                        Downloads the votes data as a CSV file.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/games/games.page.ts:59\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that is called after data-bound properties are initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onCardClicked\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCardClicked(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/games/games.page.ts:107\n                        \n                    \n\n\n            \n                \n                        Handles the click event on a game card.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                            Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The game that was clicked.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onDeleteClicked\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDeleteClicked(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/games/games.page.ts:173\n                        \n                    \n\n\n            \n                \n                        Handles the deletion of a game.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                            Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The game to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNewGame\n                        \n                    \n                \n            \n            \n                \nonNewGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/games/games.page.ts:66\n                        \n                    \n\n\n            \n                \n                        Handles the creation of a new game.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentForm(data: any | null, onDismiss: (result: any) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/games/games.page.ts:211\n                        \n                    \n\n\n            \n                \n                        Presents a form in a modal for creating or editing a game.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The initial data to populate the form with.\n\n                                            \n                                        \n                                        \n                                                onDismiss\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Callback to handle the result when the modal is dismissed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        games$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.gameService.games$\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/games/games.page.ts:33\n                        \n                    \n\n            \n                \n                    Observable for the list of games.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/games/games.page.ts:28\n                        \n                    \n\n            \n                \n                    Indicates if the page is currently loading.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Haptics } from '@capacitor/haptics';\nimport { ModalController, ToastController, ToastOptions } from '@ionic/angular';\nimport { Game } from 'src/app/core/interfaces/game';\nimport { MediaService } from 'src/app/core/services/api/media.service';\nimport { GameService } from 'src/app/core/services/api/game.service';\nimport { VoteService } from 'src/app/core/services/api/vote.service';\nimport { TeamService } from 'src/app/core/services/api/team.service';\nimport { GameDetailComponent } from 'src/app/shared/components/game-detail/game-detail.component';\nimport { dataURLtoBlob } from 'src/app/core/helpers/blob';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { CsvService } from 'src/app/core/services/api/csv.service';\n\n/**\n * Component for managing the games page.\n */\n@Component({\n  selector: 'app-games',\n  templateUrl: './games.page.html',\n  styleUrls: ['./games.page.scss'],\n})\nexport class GamesPage implements OnInit {\n\n  /**\n   * Indicates if the page is currently loading.\n   */\n  public loading: boolean = false;\n\n  /**\n   * Observable for the list of games.\n   */\n  public games$ = this.gameService.games$;\n\n  /**\n   * Creates an instance of GamesPage.\n   * \n   * @param gameService Service to manage game data.\n   * @param voteService Service to manage vote data.\n   * @param teamService Service to manage team data.\n   * @param toast Controller to show toast notifications.\n   * @param modal Controller to handle modal dialogs.\n   * @param media Service to manage media uploads.\n   * @param csvService Service to generate CSV files.\n   */\n  constructor(\n    private gameService: GameService,\n    private voteService: VoteService,\n    private teamService: TeamService,\n    private toast: ToastController,\n    private modal: ModalController,\n    private media: MediaService,\n    private csvService: CsvService\n  ) {}\n\n  /**\n   * Angular lifecycle hook that is called after data-bound properties are initialized.\n   */\n  ngOnInit() {\n    this.loading = false;\n  }\n\n  /**\n   * Handles the creation of a new game.\n   */\n  onNewGame() {\n    var onDismiss = (info: any) => {\n      switch (info.role) {\n        case 'ok': {\n          this.gameService.addGame(info.data).subscribe(async () => {\n            const options: ToastOptions = {\n              message: `Game created`,\n              duration: 1000,\n              position: 'bottom',\n              color: 'tertiary',\n              cssClass: 'card-ion-toast'\n            };\n            const toast = await this.toast.create(options);\n            toast.present();\n            await Haptics.notification();\n          }, error => {\n            console.error('Error creating game:', error);\n            const options: ToastOptions = {\n              message: 'Error creating game',\n              duration: 1000,\n              position: 'bottom',\n              color: 'danger',\n              cssClass: 'card-ion-toast'\n            };\n            this.toast.create(options).then(toast => toast.present());\n          });\n        }\n        break;\n        default: {\n          console.error(\"No debería entrar\");\n        }\n      }\n    }\n    this.presentForm(null, onDismiss);\n  }\n\n  /**\n   * Handles the click event on a game card.\n   * \n   * @param game The game that was clicked.\n   */\n  public async onCardClicked(game: Game) {\n    var onDismiss = (info: any) => {\n      switch (info.role) {\n        case 'ok': {\n          this.gameService.updateGame(info.data).subscribe(async () => {\n            const options: ToastOptions = {\n              message: `Game modified`,\n              duration: 1000,\n              position: 'bottom',\n              color: 'tertiary',\n              cssClass: 'card-ion-toast'\n            };\n            const toast = await this.toast.create(options);\n            toast.present();\n            await Haptics.notification();\n          }, error => {\n            console.error('Error modifying game:', error);\n            const options: ToastOptions = {\n              message: 'Error modifying game',\n              duration: 1000,\n              position: 'bottom',\n              color: 'danger',\n              cssClass: 'card-ion-toast'\n            };\n            this.toast.create(options).then(toast => toast.present());\n          });\n        }\n        break;\n        case 'delete': {\n          this.gameService.deleteGame(info.data).subscribe(async () => {\n            const options: ToastOptions = {\n              message: `Game deleted`,\n              duration: 1000,\n              position: 'bottom',\n              color: 'tertiary',\n              cssClass: 'card-ion-toast'\n            };\n            const toast = await this.toast.create(options);\n            toast.present();\n            await Haptics.notification();\n          }, error => {\n            console.error('Error deleting game:', error);\n            const options: ToastOptions = {\n              message: 'Error deleting game',\n              duration: 1000,\n              position: 'bottom',\n              color: 'danger',\n              cssClass: 'card-ion-toast'\n            };\n            this.toast.create(options).then(toast => toast.present());\n          });\n        }\n        break;\n        default: {\n          console.error(\"No debería entrar\");\n        }\n      }\n    }\n    this.presentForm(game, onDismiss);\n  }\n\n  /**\n   * Handles the deletion of a game.\n   * \n   * @param game The game to be deleted.\n   */\n  public onDeleteClicked(game: Game) {\n    var _game: Game = { ...game };\n\n    this.gameService.deleteGame(_game).subscribe(\n      {\n        next: async () => {\n          const options: ToastOptions = {\n            message: `Game deleted`,\n            duration: 1000,\n            position: 'bottom',\n            color: 'danger',\n            cssClass: 'fav-ion-toast'\n          };\n          const toast = await this.toast.create(options);\n          toast.present();\n          await Haptics.notification();\n        },\n        error: err => {\n          console.log(err);\n          const options: ToastOptions = {\n            message: 'Error deleting game',\n            duration: 1000,\n            position: 'bottom',\n            color: 'danger',\n            cssClass: 'card-ion-toast'\n          };\n          this.toast.create(options).then(toast => toast.present());\n        }\n      }\n    );\n  }\n\n  /**\n   * Presents a form in a modal for creating or editing a game.\n   * \n   * @param data The initial data to populate the form with.\n   * @param onDismiss Callback to handle the result when the modal is dismissed.\n   */\n  async presentForm(data: any | null, onDismiss: (result: any) => void) {\n    const modal = await this.modal.create({\n      component: GameDetailComponent,\n      componentProps: {\n        game: data\n      },\n      cssClass: \"fullModal\"\n    });\n    await modal.present();\n    const result = await modal.onDidDismiss();\n\n    if (result && result.data) {\n      if (result.data.imageUrl) {\n        if (data && data.imageUrl === result.data.imageUrl) {\n          onDismiss(result);\n        } else {\n          dataURLtoBlob(result.data.imageUrl, (blob: Blob) => {\n            this.media.upload(blob).subscribe((media: number[]) => {\n              result.data.imageUrl = media[0];\n              result.data.imageUrl = result.data.imageUrl.url_medium;\n              onDismiss(result);\n            }, error => {\n              console.error('Error uploading image:', error);\n              const options: ToastOptions = {\n                message: 'Error uploading image',\n                duration: 1000,\n                position: 'bottom',\n                color: 'danger',\n                cssClass: 'card-ion-toast'\n              };\n              this.toast.create(options).then(toast => toast.present());\n            });\n          });\n        }\n      } else {\n        result.data.imageUrl = \"\";\n        onDismiss(result)\n      }\n    } else {\n      onDismiss(result);\n    }\n  }\n\n  /**\n   * Downloads the votes data as a CSV file.\n   */\n  downloadVotesCSV() {\n    combineLatest([\n      this.voteService.votes$,\n      this.teamService.teams$,\n      this.gameService.games$\n    ]).pipe(\n      map(([votes, teams, games]) => {\n        const votesWithDetails = votes.map(vote => {\n          const team = teams.find(t => t.uuid === vote.reference);\n          const game = games.find(g => g.uuid === vote.game);\n          return {\n            ...vote,\n            votedTeam: team ? team.name : 'Unknown',\n            gameDate: game ? new Date(game.gameDate).toLocaleDateString() : 'Unknown'\n          };\n        });\n\n        const allKeys = new Set();\n        votesWithDetails.forEach((vote: {}) => {\n          Object.keys(vote).forEach(key => allKeys.add(key));\n        });\n\n        return { votesWithDetails, keys: Array.from(allKeys) };\n      })\n    ).subscribe(({ votesWithDetails, keys }) => {\n      const csvData = this.csvService.convertToCSV(votesWithDetails, keys);\n      this.csvService.downloadFile(csvData, 'votes.csv');\n    });\n  }\n\n  /**\n   * Downloads the games data as a CSV file.\n   */\n  downloadGamesCSV() {\n    this.games$.pipe(take(1)).subscribe((games) => {\n      const formattedGames = games.map(game => {\n        const gameData: any = { \n          uuid: game.uuid,\n          gameDate: game.gameDate,\n          local: game.local,\n          visitor: game.visitor,\n          localRuns: game.localRuns,\n          visitorRuns: game.visitorRuns\n        };\n\n        // Adding local team details\n        if (gameData.local) {\n          gameData['local uuid'] = gameData.local.uuid;\n          gameData['local name'] = gameData.local.name;\n          gameData['local imageUrl'] = gameData.local.imageUrl;\n          gameData['local story'] = gameData.local.story;\n          delete gameData.local;\n        }\n\n        // Adding visitor team details\n        if (gameData.visitor) {\n          gameData['visitor uuid'] = gameData.visitor.uuid;\n          gameData['visitor name'] = gameData.visitor.name;\n          gameData['visitor imageUrl'] = gameData.visitor.imageUrl;\n          gameData['visitor story'] = gameData.visitor.story;\n          delete gameData.visitor;\n        }\n\n        return gameData;\n      });\n\n      const allKeys = new Set();\n      formattedGames.forEach(game => {\n        Object.keys(game).forEach(key => allKeys.add(key));\n      });\n\n      const orderedKeys = [\n        'uuid',\n        'gameDate',\n        'local uuid',\n        'local name',\n        'local imageUrl',\n        'local story',\n        'visitor uuid',\n        'visitor name',\n        'visitor imageUrl',\n        'visitor story',\n        'localRuns',\n        'visitorRuns'\n      ];\n\n      const csvData = this.csvService.convertToCSV(formattedGames, orderedKeys);\n      this.csvService.downloadFile(csvData, 'games.csv');\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    {{ 'games.downloadVotesCsv' | translate }}\n  \n  \n    {{ 'games.downloadGamesCsv' | translate }}  \n  \n    \n      \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./games.page.scss\n                \n                \n  \n  .rounde {\n    height: 5vh;\n    width: 4vw;\n    margin: 2%;\n    border-radius: 50px;\n  }\n  \n  .custom-loading {\n    --ion-color-primary: #7e4d32;\n  }\n  \n  ion-content {\n    --background: var(--ion-color-primaryGreen);\n  }\n  \n  Ion-icon {\n    color:var(--ion-color-textColorDark);\n    font-weight: bold;\n  }\nion-button.button {\n  color:var(--ion-color-textColorDark);\n  --background: var(--ion-color-mediumEndCallToAction);\n  --background-hover: var(--ion-color-callToActionGreen);\n  --background-activated: var(--ion-color-callToActionGreen);\n  --background-focused: var(--ion-color-callToActionGreen);\n  transition: box-shadow 0.3s ease;\n  font-weight: bold;\n}\nion-button.button:hover {\n  --background: var(--ion-color-callToActionGreen);\n  color:var(--ion-color-textColorDark);\n  box-shadow: 0 0 20px var(--ion-color-callToActionGreen);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ \\'games.downloadVotesCsv\\' | translate }}        {{ \\'games.downloadGamesCsv\\' | translate }}                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'GamesPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GamesPageModule.html":{"url":"modules/GamesPageModule.html","title":"module - GamesPageModule","body":"\n                   \n\n\n\n\n    Modules\n    GamesPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GamesPageModule\n\n\n\ncluster_GamesPageModule_declarations\n\n\n\ncluster_GamesPageModule_imports\n\n\n\n\nGamesPage\n\nGamesPage\n\n\n\nGamesPageModule\n\nGamesPageModule\n\nGamesPageModule -->\n\nGamesPage->GamesPageModule\n\n\n\n\n\nGamesPageRoutingModule\n\nGamesPageRoutingModule\n\nGamesPageModule -->\n\nGamesPageRoutingModule->GamesPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nGamesPageModule -->\n\nSharedModule->GamesPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/games/games.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GamesPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GamesPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GamesPageRoutingModule } from './games-routing.module';\n\nimport { GamesPage } from './games.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    GamesPageRoutingModule\n  ],\n  declarations: [GamesPage]\n})\nexport class GamesPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GamesPageRoutingModule.html":{"url":"modules/GamesPageRoutingModule.html","title":"module - GamesPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    GamesPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/games/games-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GamesPage } from './games.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GamesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GamesPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n    \n        Description\n    \n    \n        Component for managing the home page.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading\n                            \n                            \n                                userUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateVibrationWithOptions\n                            \n                            \n                                goToGames\n                            \n                            \n                                    Public\n                                goToPlayers\n                            \n                            \n                                    Public\n                                goToTeams\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router, http: HttpClientProvider, users: UsersService, firebase: FirebaseService, players: PlayersService, teams: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:36\n                            \n                        \n\n                \n                    \n                            Creates an instance of HomePage.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle navigation.\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClientProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle HTTP requests.\n\n                                                        \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage user data.\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage Firebase operations.\n\n                                                        \n                                                \n                                                \n                                                        players\n                                                  \n                                                        \n                                                                        PlayersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage player data.\n\n                                                        \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage team data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateVibrationWithOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateVibrationWithOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:102\n                        \n                    \n\n\n            \n                \n                        Activates vibration with custom options.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToGames\n                        \n                    \n                \n            \n            \n                \ngoToGames()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:79\n                        \n                    \n\n\n            \n                \n                        Navigates to the games page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        goToPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    goToPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:72\n                        \n                    \n\n\n            \n                \n                        Navigates to the players page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        goToTeams\n                        \n                    \n                \n            \n            \n                \n                        \n                    goToTeams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:86\n                        \n                    \n\n\n            \n                \n                        Navigates to the teams page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:62\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that is called after data-bound properties are initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogout\n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:94\n                        \n                    \n\n\n            \n                \n                        Logs out the current user and navigates to the login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:31\n                        \n                    \n\n            \n                \n                    Indicates if the page is currently loading.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:36\n                        \n                    \n\n            \n                \n                    URL of the user's avatar.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { from } from 'rxjs';\nimport { ModalController, ToastController, ToastOptions } from '@ionic/angular';\nimport { PlayersService } from 'src/app/core/services/api/player.service';\nimport { Player } from 'src/app/core/interfaces/player';\nimport { PlayerDetailComponent } from 'src/app/shared/components/player-detail/player-detail.component';\nimport { AuthService } from 'src/app/core/services/api/auth.service';\nimport { AuthStrapiService } from 'src/app/core/services/api/strapi/auth-strapi.service';\nimport { HttpClientProvider } from 'src/app/core/services/http/http-client.provider';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { User } from 'src/app/core/interfaces/user';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { TeamService } from 'src/app/core/services/api/team.service';\nimport { Team } from 'src/app/core/interfaces/team';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\n\n/**\n * Component for managing the home page.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnInit {\n\n  /**\n   * Indicates if the page is currently loading.\n   */\n  public loading: boolean = false;\n\n  /**\n   * URL of the user's avatar.\n   */\n  userUrl = \"\";\n\n  /**\n   * Creates an instance of HomePage.\n   * \n   * @param auth Service to manage authentication.\n   * @param router Service to handle navigation.\n   * @param http Service to handle HTTP requests.\n   * @param users Service to manage user data.\n   * @param firebase Service to manage Firebase operations.\n   * @param players Service to manage player data.\n   * @param teams Service to manage team data.\n   */\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private http: HttpClientProvider,\n    private users: UsersService,\n    private firebase: FirebaseService,\n    private players: PlayersService,\n    private teams: TeamService\n  ) {}\n\n  /**\n   * Angular lifecycle hook that is called after data-bound properties are initialized.\n   */\n  ngOnInit(): void {\n    this.loading = true;\n    this.http.get(\"https://api.github.com/search/users?q=Kuzafkto+in%3Ausername\", null, null).subscribe((result: any) => {\n      this.userUrl = result.items[0].avatar_url;\n    });\n  }\n\n  /**\n   * Navigates to the players page.\n   */\n  public goToPlayers() {\n    this.router.navigate(['/players']);\n  }\n\n  /**\n   * Navigates to the games page.\n   */\n    goToGames() {\n    this.router.navigate(['/games']);\n  }\n\n  /**\n   * Navigates to the teams page.\n   */\n  public goToTeams() {\n    this.router.navigate(['/teams']);\n  }\n\n \n  /**\n   * Logs out the current user and navigates to the login page.\n   */\n  onLogout() {\n    this.auth.logout();\n    this.router.navigate(['/login']);\n  }\n\n  /**\n   * Activates vibration with custom options.\n   */\n  async activateVibrationWithOptions() {\n    try {\n      const options = {\n        duration: 3000, // Duration of the vibration in milliseconds\n        intensity: 1.0 // Intensity of the vibration, a value between 0.1 and 1.0\n      };\n\n      await Haptics.vibrate(options);\n      console.log('Vibration activated successfully with custom options');\n    } catch (error) {\n      console.error('Error activating vibration:', error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n    \n      \n        {{'menu.players'|translate}}\n        \n          \n        \n      \n  \n      \n        {{'menu.games'|translate}}\n        \n          \n        \n      \n  \n      \n        {{'menu.teams'|translate}}\n        \n          \n        \n      \n    \n  \n  \n    \n\n    \n                \n                    home.page.scss\n                \n                .home-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n\n.home-buttons {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  margin: 2%;\n\n}\n\n.rounded-button {\n  width: 100%;\n  height:100%;\n  border-radius: 15px;\n  overflow: hidden;\n  margin: 0 2%; //2% de margin arriba y abajo\n\n}\n\n.rounded-button img {\n  width: 300px; //manten la imagen pq sino se te va todo despoporcionado \n  height: 300px;\n  object-fit: cover;\n  border-radius: 50%;\n  background-color: var(--ion-color-secondaryGreen);\n}\n.button-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 2%\n}\n\n.button-label {\n  font-size: 1rem;\n  margin-bottom: 5px; //mini separacion \n  text-align: center;\n}\n\n@media only screen and (max-width: 600px) {\n  .rounded-button img {\n    width: 100px; \n    height: 100px;\n  }\n  .rounded-button {\n    width: 100%;\n    height: 50%;\n  }\n}\nion-content{\n  --background: var(--ion-color-primaryGreen);\n}\nion-label{\n  color: var(--ion-color-textColor);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{\\'menu.players\\'|translate}}                                                {{\\'menu.games\\'|translate}}                                                {{\\'menu.teams\\'|translate}}                                        '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_exports\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePage \n\nHomePage \n\nHomePage  -->\n\nHomePageModule->HomePage \n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HomePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { SharedModule } from '../../shared/shared.module';\n\n\n@NgModule({\n  imports: [\n    SharedModule,\n    HomePageRoutingModule\n  ],\n  exports:[HomePage],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientProvider.html":{"url":"injectables/HttpClientProvider.html","title":"injectable - HttpClientProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http/http-client.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class that provides a contract for HTTP client providers.\nClasses extending this abstract class must implement the specified methods for handling HTTP requests.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                delete\n                            \n                            \n                                    Public\n                                    Abstract\n                                get\n                            \n                            \n                                    Public\n                                    Abstract\n                                getImage\n                            \n                            \n                                    Public\n                                    Abstract\n                                patch\n                            \n                            \n                                    Public\n                                    Abstract\n                                post\n                            \n                            \n                                    Public\n                                    Abstract\n                                put\n                            \n                            \n                                    Public\n                                    Abstract\n                                setServerTrustMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:70\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Abstract method to make a DELETE request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request URL\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request parameters\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable with HTTP response of type T\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:27\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Abstract method to make a GET request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request URL\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request parameters\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable with HTTP response of type T\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:17\n                        \n                    \n\n\n            \n                \n                        Abstract method to get an image from the provided URL.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request URL\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable with HTTP response as Blob\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:60\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Abstract method to make a PATCH request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request URL\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    HTTP request as URL encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable with HTTP response of type T\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:38\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Abstract method to make a POST request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request URL\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    HTTP request as URL encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable with HTTP response of type T\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:49\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Abstract method to make a PUT request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request URL\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    HTTP request as URL encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable with HTTP response of type T\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        setServerTrustMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    setServerTrustMode(mode: \"default\" | \"nocheck\" | \"pinned\" | \"legacy\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:77\n                        \n                    \n\n\n            \n                \n                        Abstract method to set the trust mode for the server.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mode\n                                            \n                                                        \"default\" | \"nocheck\" | \"pinned\" | \"legacy\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Server trust mode\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/**\n * Abstract class that provides a contract for HTTP client providers.\n * Classes extending this abstract class must implement the specified methods for handling HTTP requests.\n */\n@Injectable({ providedIn: 'root' })\nexport abstract class HttpClientProvider {\n\n    /**\n     * Abstract method to get an image from the provided URL.\n     *\n     * @param url HTTP request URL\n     * @returns Observable with HTTP response as Blob\n     */\n    public abstract getImage(url: string): Observable;\n\n    /**\n     * Abstract method to make a GET request.\n     *\n     * @param url HTTP request URL\n     * @param params HTTP request parameters\n     * @param headers HTTP request headers\n     * @returns Observable with HTTP response of type T\n     */\n    public abstract get(url: string, params: any, headers: any): Observable;\n\n    /**\n     * Abstract method to make a POST request.\n     *\n     * @param url HTTP request URL\n     * @param body HTTP request body\n     * @param headers HTTP request headers\n     * @param urlEncoded HTTP request as URL encoded content-type\n     * @returns Observable with HTTP response of type T\n     */\n    public abstract post(url: string, body: any, headers: any, urlEncoded?: boolean): Observable;\n\n    /**\n     * Abstract method to make a PUT request.\n     *\n     * @param url HTTP request URL\n     * @param body HTTP request body\n     * @param headers HTTP request headers\n     * @param urlEncoded HTTP request as URL encoded content-type\n     * @returns Observable with HTTP response of type T\n     */\n    public abstract put(url: string, body: any, headers: any, urlEncoded?: boolean): Observable;\n\n    /**\n     * Abstract method to make a PATCH request.\n     *\n     * @param url HTTP request URL\n     * @param body HTTP request body\n     * @param headers HTTP request headers\n     * @param urlEncoded HTTP request as URL encoded content-type\n     * @returns Observable with HTTP response of type T\n     */\n    public abstract patch(url: string, body: any, headers: any, urlEncoded?: boolean): Observable;\n\n    /**\n     * Abstract method to make a DELETE request.\n     *\n     * @param url HTTP request URL\n     * @param params HTTP request parameters\n     * @param headers HTTP request headers\n     * @returns Observable with HTTP response of type T\n     */\n    public abstract delete(url: string, params: any, headers: any): Observable;\n\n    /**\n     * Abstract method to set the trust mode for the server.\n     * \n     * @param mode Server trust mode\n     */\n    public abstract setServerTrustMode(mode: 'default' | 'nocheck' | 'pinned' | 'legacy'): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientWebProvider.html":{"url":"injectables/HttpClientWebProvider.html","title":"injectable - HttpClientWebProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientWebProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http/http-client-web.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable provider for making HTTP requests using Angular's HttpClient.\n\n            \n\n            \n                Extends\n            \n            \n                            HttpClientProvider\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createBody\n                            \n                            \n                                    Private\n                                createHeaders\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getImage\n                            \n                            \n                                    Public\n                                patch\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                setServerTrustMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/http/http-client-web.provider.ts:10\n                            \n                        \n\n                \n                    \n                            Creates an instance of HttpClientWebProvider.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HTTP client\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBody\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBody(body: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client-web.provider.ts:141\n                        \n                    \n\n\n            \n                \n                        Creates HTTP request body.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request body\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request as URL encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any | HttpParams\n\n                        \n                            \n                                HTTP request body or HTTP parameters\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    createHeaders(headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client-web.provider.ts:126\n                        \n                    \n\n\n            \n                \n                        Creates HTTP headers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    HTTP headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    HTTP request as URL encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                Angular HTTP headers\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:105\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Sends a DELETE request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    HTTP request URL\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    HTTP request parameters\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    HTTP request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable with HTTP response of type T\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:41\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Sends a GET request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    HTTP request URL\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    HTTP request parameters\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    HTTP request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable with HTTP response of type T\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:27\n\n                        \n                    \n\n\n            \n                \n                        Fetches an image as a Blob.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTTP request URL\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable with HTTP response as Blob\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:87\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Sends a PATCH request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    HTTP request URL\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    HTTP request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    HTTP request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    HTTP request as URL encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable with HTTP response of type T\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:57\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Sends a POST request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    HTTP request URL\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    HTTP request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    HTTP request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    HTTP request as URL encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable with HTTP response of type T\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:72\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Sends a PUT request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    HTTP request URL\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    HTTP request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    HTTP request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    HTTP request as URL encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable with HTTP response of type T\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setServerTrustMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    setServerTrustMode(mode: \"default\" | \"nocheck\" | \"pinned\" | \"legacy\")\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:117\n\n                        \n                    \n\n\n            \n                \n                        Sets the server trust mode.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mode\n                                            \n                                                        \"default\" | \"nocheck\" | \"pinned\" | \"legacy\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Server trust mode\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClientProvider } from './http-client.provider';\n\n/**\n * Injectable provider for making HTTP requests using Angular's HttpClient.\n */\n@Injectable({ providedIn: 'root' })\nexport class HttpClientWebProvider extends HttpClientProvider {\n\n  /**\n   * Creates an instance of HttpClientWebProvider.\n   *\n   * @param httpClient Angular HTTP client\n   */\n  constructor(private readonly httpClient: HttpClient) {\n    super();\n  }\n\n  /**\n   * Fetches an image as a Blob.\n   *\n   * @param url HTTP request URL\n   * @returns Observable with HTTP response as Blob\n   */\n  public getImage(url: string): Observable {\n    return this.httpClient.get(url, {\n      responseType: 'blob'\n    });\n  }\n\n  /**\n   * Sends a GET request.\n   *\n   * @param url HTTP request URL\n   * @param params HTTP request parameters\n   * @param headers HTTP request headers\n   * @returns Observable with HTTP response of type T\n   */\n  public get(url: string, params: any = {}, headers: any = {}): Observable {\n    return this.httpClient.get(url, {\n      params: new HttpParams({ fromObject: params }),\n      headers: this.createHeaders(headers)\n    });\n  }\n\n  /**\n   * Sends a POST request.\n   *\n   * @param url HTTP request URL\n   * @param body HTTP request body\n   * @param headers HTTP request headers\n   * @param urlEncoded HTTP request as URL encoded content-type\n   * @returns Observable with HTTP response of type T\n   */\n  public post(url: string, body: any = {}, headers: any = {}, urlEncoded: boolean = false): Observable {\n    return this.httpClient.post(url, this.createBody(body, urlEncoded), {\n      headers: this.createHeaders(headers, urlEncoded)\n    });\n  }\n\n  /**\n   * Sends a PUT request.\n   *\n   * @param url HTTP request URL\n   * @param body HTTP request body\n   * @param headers HTTP request headers\n   * @param urlEncoded HTTP request as URL encoded content-type\n   * @returns Observable with HTTP response of type T\n   */\n  public put(url: string, body: any = {}, headers: any = {}, urlEncoded: boolean = false): Observable {\n    return this.httpClient.put(url, this.createBody(body, urlEncoded), {\n      headers: this.createHeaders(headers, urlEncoded)\n    });\n  }\n\n  /**\n   * Sends a PATCH request.\n   *\n   * @param url HTTP request URL\n   * @param body HTTP request body\n   * @param headers HTTP request headers\n   * @param urlEncoded HTTP request as URL encoded content-type\n   * @returns Observable with HTTP response of type T\n   */\n  public patch(url: string, body: any = {}, headers: any = {}, urlEncoded: boolean = false): Observable {\n    if (body instanceof FormData) {\n      return this.httpClient.patch(url, body, { headers: headers });\n    } else {\n      return this.httpClient.patch(url, this.createBody(body, urlEncoded), {\n        headers: this.createHeaders(headers, urlEncoded)\n      });\n    }\n  }\n\n  /**\n   * Sends a DELETE request.\n   *\n   * @param url HTTP request URL\n   * @param params HTTP request parameters\n   * @param headers HTTP request headers\n   * @returns Observable with HTTP response of type T\n   */\n  public delete(url: string, params: any = {}, headers: any = {}): Observable {\n    return this.httpClient.delete(url, {\n      params: new HttpParams({ fromObject: params }),\n      headers: this.createHeaders(headers)\n    });\n  }\n\n  /**\n   * Sets the server trust mode.\n   *\n   * @param mode Server trust mode\n   */\n  public setServerTrustMode(mode: 'default' | 'nocheck' | 'pinned' | 'legacy'): void { }\n\n  /**\n   * Creates HTTP headers.\n   *\n   * @param headers HTTP headers\n   * @param urlEncoded HTTP request as URL encoded content-type\n   * @returns Angular HTTP headers\n   */\n  private createHeaders(headers: any, urlEncoded: boolean = false): HttpHeaders {\n    let _headers = new HttpHeaders(headers);\n    if (urlEncoded) {\n      _headers = _headers.set('Accept', 'application/x-www-form-urlencoded');\n    }\n    return _headers;\n  }\n\n  /**\n   * Creates HTTP request body.\n   *\n   * @param body HTTP request body\n   * @param urlEncoded HTTP request as URL encoded content-type\n   * @returns HTTP request body or HTTP parameters\n   */\n  private createBody(body: any, urlEncoded: boolean): any | HttpParams {\n    return urlEncoded ? new HttpParams({ fromObject: body }) : body;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtService.html":{"url":"injectables/JwtService.html","title":"injectable - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/jwt.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing JWT tokens. Provides methods to load, retrieve, save, and destroy JWT tokens.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroyToken\n                            \n                            \n                                getToken\n                            \n                            \n                                loadToken\n                            \n                            \n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/jwt.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroyToken\n                        \n                    \n                \n            \n            \n                \ndestroyToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/jwt.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Destroys the JWT token, removing it from storage.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable emitting the destroyed JWT token.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/jwt.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Retrieves the current JWT token.\n\n\n                        \n                            Returns :         JwtToken\n\n                        \n                            \n                                The current JWT token.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadToken\n                        \n                    \n                \n            \n            \n                \nloadToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/jwt.service.ts:22\n                        \n                    \n\n\n            \n                \n                        Loads the JWT token from storage.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable emitting the loaded JWT token.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveToken\n                        \n                    \n                \n            \n            \n                \nsaveToken(token: JwtToken)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/jwt.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Saves the JWT token to storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            JwtToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The JWT token to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable emitting the saved JWT token.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/jwt.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Preferences } from '@capacitor/preferences';\n\nexport type JwtToken = string;\n\n/**\n * Service for managing JWT tokens. Provides methods to load, retrieve, save, and destroy JWT tokens.\n */\n@Injectable({ providedIn: 'root' })\nexport class JwtService {\n\n  token: string = \"\";\n\n  constructor() {}\n\n  /**\n   * Loads the JWT token from storage.\n   * \n   * @returns Observable emitting the loaded JWT token.\n   */\n  loadToken(): Observable {\n    return new Observable(observer => {\n      Preferences.get({ key: 'jwtToken' }).then((ret: any) => {\n        if (ret['value']) {\n          this.token = JSON.parse(ret.value);\n          if (this.token == '' || this.token == null) {\n            observer.next('');\n          } else {\n            observer.next(this.token);\n          }\n          observer.complete();\n        } else {\n          observer.next('');\n          observer.complete();\n        }\n      }).catch((error: any) => observer.next(error));\n    });\n  }\n\n  /**\n   * Retrieves the current JWT token.\n   * \n   * @returns The current JWT token.\n   */\n  getToken(): JwtToken {\n    return this.token;\n  }\n\n  /**\n   * Saves the JWT token to storage.\n   * \n   * @param token The JWT token to save.\n   * @returns Observable emitting the saved JWT token.\n   */\n  saveToken(token: JwtToken): Observable {\n    return new Observable(observer => {\n      Preferences.set({\n        key: 'jwtToken',\n        value: JSON.stringify(token)\n      }).then((_) => {\n        this.token = token;\n        observer.next(this.token);\n        observer.complete();\n      }).catch((error: any) => {\n        observer.error(error);\n      });\n    });\n  }\n\n  /**\n   * Destroys the JWT token, removing it from storage.\n   * \n   * @returns Observable emitting the destroyed JWT token.\n   */\n  destroyToken(): Observable {\n    this.token = \"\";\n    localStorage.removeItem('CapacitorStorage.jwtToken');\n    return this.saveToken(this.token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/login-form/login-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n\n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onsubmit\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/login-form/login-form.component.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor for LoginFormComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder for creating form groups and controls.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/login-form/login-form.component.ts:15\n                            \n                        \n                \n                    \n                        Input property to set the username value in the form\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onsubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/login-form/login-form.component.ts:22\n                            \n                        \n                \n                    \n                        Output event emitter to emit the form values on form submission\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/login-form/login-form.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called on component initialization\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/login-form/login-form.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Handles the form submission\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/login-form/login-form.component.ts:27\n                        \n                    \n\n            \n                \n                    Form group for the login form\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/login-form/login-form.component.ts:32\n                        \n                    \n\n            \n                \n                    Flag to indicate if the form has been submitted\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n\n                \n                    \n                        setusername(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/login-form/login-form.component.ts:15\n                                \n                            \n                    \n                        \n                                Input property to set the username value in the form\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserCredentials } from 'src/app/core/interfaces/user-credentials';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n})\nexport class LoginFormComponent implements OnInit {\n\n  /**\n   * Input property to set the username value in the form\n   */\n  @Input('username') set username(value: string) {\n    this.form?.controls['username'].setValue(value);\n  }\n\n  /**\n   * Output event emitter to emit the form values on form submission\n   */\n  @Output() onsubmit = new EventEmitter();\n\n  /**\n   * Form group for the login form\n   */\n  form: FormGroup | null = null;\n\n  /**\n   * Flag to indicate if the form has been submitted\n   */\n  submitted = false;\n\n  /**\n   * Constructor for LoginFormComponent.\n   * \n   * @param formBuilder FormBuilder for creating form groups and controls.\n   */\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(2)]],\n      password: ['', [Validators.required, Validators.minLength(12)]]\n    });\n  }\n\n  /**\n   * Angular lifecycle hook called on component initialization\n   */\n  ngOnInit() {}\n\n  /**\n   * Handles the form submission\n   */\n  onSubmit() {\n    this.submitted = true;\n    if (this.form?.valid) {\n      this.onsubmit.emit(this.form?.value);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{'login.user' | translate}}\n    \n  \n  \n    \n      {{'login.pwd' | translate}}\n    \n  \n  \n    \n      \n        {{'login.submit' | translate}}\n      \n    \n  \n  \n    {{'login.pwdError' | translate}}\n  \n  \n    {{'login.userError' | translate}}\n  \n  \n    {{'login.submitError' | translate}}\n  \n\n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                .center-button {\n  text-align: center;\n}\n\n.submitButton {\n  --background: #009a44;\n  --background-hover: #03ca5a;\n  --color: #ffffff;\n  width: 60%;\n  height: 50px;\n  font-size: 1rem;\n  margin-top: 20px;\n  transition: box-shadow 0.3s ease;\n  text-align: center;\n}\n\n.submitButton:hover {\n  box-shadow: 0 0 10px rgba(0, 255, 0, 0.6);\n}\n\n.error-message {\n  color: red;\n  font-size: 0.8rem;\n  margin-top: 2%;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{\\'login.user\\' | translate}}                  {{\\'login.pwd\\' | translate}}                          {{\\'login.submit\\' | translate}}                  {{\\'login.pwdError\\' | translate}}        {{\\'login.userError\\' | translate}}        {{\\'login.submitError\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.page.ts\n\n\n\n    \n        Description\n    \n    \n        Component for handling user login.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateVibrationWithOptions\n                            \n                            \n                                goToRegisterPage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogin\n                            \n                            \n                                    Async\n                                showToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router, route: ActivatedRoute, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/login/login.page.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor for LoginPage component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAuthService for handling authentication.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigating between routes.\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nActivatedRoute for accessing route parameters.\n\n\n                                                        \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nToastController for displaying toast notifications.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateVibrationWithOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateVibrationWithOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:51\n                        \n                    \n\n\n            \n                \n                        Activates vibration with custom options using the Capacitor Haptics API.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToRegisterPage\n                        \n                    \n                \n            \n            \n                \ngoToRegisterPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:99\n                        \n                    \n\n\n            \n                \n                        Navigates to the registration page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:42\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that is called after data-bound properties are initialized.\nSubscribes to query parameters to set the error message.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogin\n                        \n                    \n                \n            \n            \n                \nonLogin(credentials: UserCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:83\n                        \n                    \n\n\n            \n                \n                        Handles user login by calling the AuthService login method with the provided credentials.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            UserCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's login credentials.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    showToast(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:69\n                        \n                    \n\n\n            \n                \n                        Displays a toast notification with the specified message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message to display in the toast notification.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.page.ts:21\n                        \n                    \n\n            \n                \n                    Error message to display on the login page.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { UserCredentials } from 'src/app/core/interfaces/user-credentials';\nimport { AuthService } from 'src/app/core/services/api/auth.service';\nimport { Haptics } from '@capacitor/haptics';\n\n/**\n * Component for handling user login.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  \n  /**\n   * Error message to display on the login page.\n   */\n  errorMessage: string | null = null;\n\n  /**\n   * Constructor for LoginPage component.\n   *\n   * @param auth - AuthService for handling authentication.\n   * @param router - Router for navigating between routes.\n   * @param route - ActivatedRoute for accessing route parameters.\n   * @param toastController - ToastController for displaying toast notifications.\n   */\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastController: ToastController\n  ) {}\n\n  /**\n   * Angular lifecycle hook that is called after data-bound properties are initialized.\n   * Subscribes to query parameters to set the error message.\n   */\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      this.errorMessage = params['error'] || null;\n    });\n  }\n\n  /**\n   * Activates vibration with custom options using the Capacitor Haptics API.\n   */\n  async activateVibrationWithOptions() {\n    try {\n      const options = {\n        duration: 300,\n        intensity: 0.5\n      };\n      await Haptics.notification();\n      console.log('Vibration activated successfully with custom options');\n    } catch (error) {\n      console.error('Error activating vibration:', error);\n    }\n  }\n\n  /**\n   * Displays a toast notification with the specified message.\n   *\n   * @param message - The message to display in the toast notification.\n   */\n  async showToast(message: string) {\n    const toast = await this.toastController.create({\n      message,\n      duration: 2000,\n      position: 'top'\n    });\n    toast.present();\n  }\n\n  /**\n   * Handles user login by calling the AuthService login method with the provided credentials.\n   *\n   * @param credentials - The user's login credentials.\n   */\n  onLogin(credentials: UserCredentials) {\n    this.auth.login(credentials).subscribe({\n      next: data => {\n        this.router.navigate(['/home']);\n        console.log(data);\n      },\n      error: err => {\n        console.log(err);\n        this.showToast('Login failed. Please try again.');\n      }\n    });\n  }\n\n  /**\n   * Navigates to the registration page.\n   */\n  goToRegisterPage() {\n    this.router.navigate(['/register']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          {{'login.access' | translate}}\n        \n      \n      \n        \n          \n            {{'login.noAccount' | translate}}\n          \n        \n        \n          {{ errorMessage }}\n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                //esto es casi igual que el del profe pero tiene unos cambios en el titulo e imagen\nion-content {\n    min-height: 100vh;\n    position: relative;\n  }\n  \n  .container {\n    min-height: 0;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  \n    ion-card {\n      box-shadow: none;\n      border: 1px solid var(--ion-color-medium);\n      border-radius: 8px;\n      width: auto;\n      min-height: 500px;\n      overflow-y: auto;\n      height: auto;\n      padding: 24px 20px 18px;\n      min-width: 350px;\n    }\n  }\n  \n  .logo {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    color: var(--ion-color-dark);\n  }\n  \n  .logo-thumbnail {\n    width: 120px;\n    height: 120px;\n    margin-bottom: 2%   ;\n  }\n  \n  .logo-text {\n    font-size: 1.5rem;\n  }\n  \n  //boton de no tengo cuenta con texto centrado\n.ion-text-center ion-button {\n  text-transform: none;\n  text-align: center;\n  font-size: 1rem;\n}\n\n  //cambia imagen de fondo\n  ion-content{\n    --min-height: 100vh;\n    //esto es de la posicion 0 en el eje X y 100 en el Y (lo pone en la esquina superior izquierda) el otro 100% es que se adapta al 100% de la altura \n    --background: url('../../../assets/imgs/login-background.jpg') 0/100% 100% no-repeat; \n    --background-repeat: no-repeat;\n    --background-size: cover;\n  }\n  .error-message {\n    color: red;\n    margin-bottom: 10px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              {{\\'login.access\\' | translate}}                                                  {{\\'login.noAccount\\' | translate}}                                    {{ errorMessage }}                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLoginPageModule -->\n\nSharedModule->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoginPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LoginPageRoutingModule,\n    \n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageRoutingModule.html":{"url":"modules/LoginPageRoutingModule.html","title":"module - LoginPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/login/login-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MappingService.html":{"url":"injectables/MappingService.html","title":"injectable - MappingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MappingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/mapping.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This abstract service handles URL construction and data mapping for user-related operations. It should be extended by other services to implement specific mapping logic.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                deleteUserUrl\n                            \n                            \n                                    Public\n                                    Abstract\n                                getUserUrl\n                            \n                            \n                                    Public\n                                    Abstract\n                                mapUser\n                            \n                            \n                                    Public\n                                    Abstract\n                                mapUsers\n                            \n                            \n                                    Public\n                                    Abstract\n                                queryUsersUrl\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateUserUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        deleteUserUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUserUrl(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/mapping.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Returns the URL to delete a specific user by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        getUserUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserUrl(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/mapping.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Returns the URL to get a specific user by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        mapUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapUser(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/mapping.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Maps backend data to a single user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data from the backend.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                The data mapped to the User interface.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        mapUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapUsers(data: PaginatedData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/mapping.service.ts:50\n                        \n                    \n\n\n            \n                \n                        Maps paginated data to a list of users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            PaginatedData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The paginated data from the backend.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PaginatedData\n\n                        \n                            \n                                The paginated data mapped to the User interface.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        queryUsersUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    queryUsersUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/mapping.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Returns the URL to query for users.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        updateUserUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserUrl(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/mapping.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Returns the URL to update a specific user by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL string.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { PaginatedData } from \"../../interfaces/data\";\nimport { User } from \"../../interfaces/user\";\n\n/**\n * This abstract service handles URL construction and data mapping for user-related operations. It should be extended by other services to implement specific mapping logic.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class MappingService {\n\n  /**\n   * Returns the URL to query for users.\n   * \n   * @returns The URL string.\n   */\n  public abstract queryUsersUrl(): string;\n\n  /**\n   * Returns the URL to get a specific user by ID.\n   * \n   * @param id The ID of the user.\n   * @returns The URL string.\n   */\n  public abstract getUserUrl(id: number): string;\n\n  /**\n   * Returns the URL to update a specific user by ID.\n   * \n   * @param id The ID of the user.\n   * @returns The URL string.\n   */\n  public abstract updateUserUrl(id: number): string;\n\n  /**\n   * Returns the URL to delete a specific user by ID.\n   * \n   * @param id The ID of the user.\n   * @returns The URL string.\n   */\n  public abstract deleteUserUrl(id: number): string;\n\n  /**\n   * Maps paginated data to a list of users.\n   * \n   * @param data The paginated data from the backend.\n   * @returns The paginated data mapped to the User interface.\n   */\n  public abstract mapUsers(data: PaginatedData): PaginatedData;\n\n  /**\n   * Maps backend data to a single user.\n   * \n   * @param data The data from the backend.\n   * @returns The data mapped to the User interface.\n   */\n  public abstract mapUser(data: any): User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Media.html":{"url":"interfaces/Media.html","title":"interface - Media","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Media\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/media.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing media details.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            url_large\n                                        \n                                \n                                \n                                        \n                                            url_medium\n                                        \n                                \n                                \n                                        \n                                            url_small\n                                        \n                                \n                                \n                                        \n                                            url_thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_large:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL of the large-sized version of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_medium:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL of the medium-sized version of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_small:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL of the small-sized version of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL of the thumbnail version of the media.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Media {\n    /**\n     * The unique identifier of the media.\n     */\n    id: number;\n\n    /**\n     * The URL of the small-sized version of the media.\n     */\n    url_small: string;\n\n    /**\n     * The URL of the medium-sized version of the media.\n     */\n    url_medium: string;\n\n    /**\n     * The URL of the large-sized version of the media.\n     */\n    url_large: string;\n\n    /**\n     * The URL of the thumbnail version of the media.\n     */\n    url_thumbnail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaFormat.html":{"url":"interfaces/MediaFormat.html","title":"interface - MediaFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a specific format of a media object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The file extension of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The hash of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The height of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The MIME type of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The path of the media (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Provider metadata for the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The size of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The width of the media.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiUser {\n  /**\n   * The unique identifier of the user.\n   */\n  id: number;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n\n  /**\n   * The email of the user.\n   */\n  email: string;\n}\n\n/**\n * Interface representing the payload for Strapi login.\n */\nexport interface StrapiLoginPayload {\n  /**\n   * The identifier (username or email) of the user.\n   */\n  identifier: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n}\n\n/**\n * Interface representing the payload for Strapi registration.\n */\nexport interface StrapiRegisterPayload {\n  /**\n   * The email of the user.\n   */\n  email: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n}\n\n/**\n * Interface representing the response from Strapi login.\n */\nexport interface StrapiLoginResponse {\n  /**\n   * The JWT token.\n   */\n  jwt: string;\n\n  /**\n   * The user details.\n   */\n  user: StrapiUser;\n}\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The data object containing extended user details.\n   */\n  data: {\n    /**\n     * The name of the user.\n     */\n    name: string;\n\n    /**\n     * The surname of the user.\n     */\n    surname: string;\n\n    /**\n     * The user permissions identifier.\n     */\n    users_permissions_user: number;\n\n    /**\n     * The array of player identifiers associated with the user.\n     */\n    players: number[];\n\n    /**\n     * The array of team identifiers associated with the user.\n     */\n    teams: number[];\n\n    /**\n     * The array of trainer identifiers associated with the user.\n     */\n    trainers: number[];\n  };\n}\n\n/**\n * Interface representing a generic Strapi data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiData {\n  /**\n   * The unique identifier of the data object.\n   */\n  id: number;\n\n  /**\n   * The attributes of the data object.\n   */\n  attributes: T;\n}\n\n/**\n * Interface representing a response from Strapi that includes an array of data objects.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiArrayResponse {\n  /**\n   * The array of data objects.\n   */\n  data: StrapiData[];\n\n  /**\n   * Meta information about the response.\n   */\n  meta: {\n    /**\n     * Pagination details (optional).\n     */\n    pagination?: {\n      page: number;\n      pageSize: number;\n      pageCount: number;\n      total: number;\n    };\n  };\n}\n\n/**\n * Interface representing a response from Strapi that includes a single data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiResponse {\n  /**\n   * The data object.\n   */\n  data: StrapiData;\n}\n\n/**\n * Type alias for the current Strapi user.\n */\nexport type StrapiMe = StrapiUser;\n\n/**\n * Type alias for the response from Strapi registration.\n */\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The unique identifier of the extended user (optional).\n   */\n  id?: number;\n\n  /**\n   * The name of the user.\n   */\n  name: string;\n\n  /**\n   * The surname of the user.\n   */\n  surname: string;\n\n  /**\n   * The user ID.\n   */\n  user_id: number;\n\n  /**\n   * The nickname of the user (optional).\n   */\n  nickname?: string;\n\n  /**\n   * The picture of the user (optional).\n   */\n  picture?: {\n    /**\n     * The data object containing the media details.\n     */\n    data: StrapiData;\n  };\n}\n\n/**\n * Type alias for the response from Strapi media upload.\n */\nexport type StrapiUploadResponse = StrapiMedia[];\n\n/**\n * Interface representing a Strapi media object.\n */\nexport interface StrapiMedia {\n  /**\n   * The unique identifier of the media.\n   */\n  id: number;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * Alternative text for the media.\n   */\n  alternativeText: any;\n\n  /**\n   * Caption for the media.\n   */\n  caption: any;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * The different formats of the media.\n   */\n  formats: Formats;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The preview URL of the media (optional).\n   */\n  previewUrl: any;\n\n  /**\n   * The provider of the media.\n   */\n  provider: string;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n\n  /**\n   * The creation date of the media.\n   */\n  createdAt: string;\n\n  /**\n   * The last update date of the media.\n   */\n  updatedAt: string;\n}\n\n/**\n * Interface representing the different formats of a media object.\n */\nexport interface Formats {\n  /**\n   * The large format of the media.\n   */\n  large: MediaFormat;\n\n  /**\n   * The small format of the media.\n   */\n  small: MediaFormat;\n\n  /**\n   * The medium format of the media.\n   */\n  medium: MediaFormat;\n\n  /**\n   * The thumbnail format of the media.\n   */\n  thumbnail: MediaFormat;\n}\n\n/**\n * Interface representing a specific format of a media object.\n */\nexport interface MediaFormat {\n  /**\n   * The file extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * The path of the media (optional).\n   */\n  path: any;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n}\n\n/**\n * Interface representing provider metadata for a media object.\n */\nexport interface ProviderMetadata {\n  /**\n   * The public ID of the media.\n   */\n  public_id: string;\n\n  /**\n   * The resource type of the media.\n   */\n  resource_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService.html":{"url":"injectables/MediaService.html","title":"injectable - MediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/media.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This abstract service handles media-related operations. It should be extended by other services to implement specific media handling logic.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/media.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Uploads a media file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The media file as a Blob.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the uploaded media.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/**\n * This abstract service handles media-related operations. It should be extended by other services to implement specific media handling logic.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport abstract class MediaService {  \n    \n    /**\n     * Uploads a media file.\n     * \n     * @param blob The media file as a Blob.\n     * @returns An observable of the uploaded media.\n     */\n    public abstract upload(blob: Blob): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/NamePipe.html":{"url":"pipes/NamePipe.html","title":"pipe - NamePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  NamePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/name.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe que transforma un nombre, capitalizando la primera letra y truncando el texto si excede el límite especificado.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        name\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(name: string | undefined, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/name.pipe.ts:18\n                        \n                    \n\n\n            \n                \n                        Transforma un nombre, capitalizando la primera letra y truncando el texto si excede el límite especificado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El nombre a transformar.\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El límite de caracteres para truncar el nombre.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                El nombre transformado, capitalizado y truncado si es necesario.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe que transforma un nombre, capitalizando la primera letra y truncando el texto si excede el límite especificado.\n */\n@Pipe({\n  name: 'name'\n})\nexport class NamePipe implements PipeTransform {\n\n  /**\n   * Transforma un nombre, capitalizando la primera letra y truncando el texto si excede el límite especificado.\n   * \n   * @param name El nombre a transformar.\n   * @param limit El límite de caracteres para truncar el nombre.\n   * @returns El nombre transformado, capitalizado y truncado si es necesario.\n   */\n  transform(name: string | undefined, limit: number): string {\n    // Verifica si el nombre es válido\n    if (name) {\n      // Capitaliza la primera letra del nombre\n      let firstLetterCapital = name.charAt(0).toUpperCase() + name.slice(1);\n\n      // Verifica si el nombre capitalizado excede el límite\n      if (firstLetterCapital.length > limit) {\n        // Trunca el nombre y añade \"...\" al final\n        return firstLetterCapital.substring(0, limit) + '... ';\n      } else {\n        // Devuelve el nombre completo si no excede el límite\n        return firstLetterCapital;\n      }\n    } else {\n      // Si el nombre es undefined o vacío, devuelve una cadena vacía\n      return \"\";\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NumericValidator.html":{"url":"classes/NumericValidator.html","title":"class - NumericValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NumericValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/numeric.ts\n        \n\n\n            \n                Description\n            \n            \n                A class containing numeric validation logic for Angular forms.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                numericProto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        numericProto\n                        \n                    \n                \n            \n            \n                \n                        \n                    numericProto(formControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/numeric.ts:15\n                        \n                    \n\n\n            \n                \n                        Creates a ValidatorFn that checks if the control's value is a valid number.\nThis validator supports both positive and negative numbers, with up to two decimal places.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                formControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    The name of the form control to validate (optional). Useful for FormGroup.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                A ValidatorFn that returns validation errors or null if the control's value is valid.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\n/**\n * A class containing numeric validation logic for Angular forms.\n */\nexport class NumericValidator {\n\n    /**\n     * Creates a ValidatorFn that checks if the control's value is a valid number.\n     * This validator supports both positive and negative numbers, with up to two decimal places.\n     *\n     * @param formControlName The name of the form control to validate (optional). Useful for FormGroup.\n     * @returns A ValidatorFn that returns validation errors or null if the control's value is valid.\n     */\n    public static numericProto(formControlName: string = ''): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            let value = '';\n\n            // Get the value from the control, supporting both FormControl and FormGroup\n            if (control instanceof FormControl) {\n                value = control?.value;\n            } else {\n                value = control.get(formControlName)?.value;\n            }\n\n            let errors = control?.errors;\n\n            // If the field is empty, consider the validation passed (unless the field is required)\n            if (value === null || value === '') {\n                return errors; // May need to handle required validation separately\n            }\n\n            // Regular expression to validate only numbers, allowing up to two decimal places\n            const regex = /^[-+]?[0-9]*\\.?[0-9]{0,2}$/;\n            const valid = regex.test(value);\n\n            // Return validation result\n            return valid ? null : { 'numeric': true };\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/OwnerGuard.html":{"url":"guards/OwnerGuard.html","title":"guard - OwnerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    OwnerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/owner.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard to protect routes based on user ownership.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, modalController: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/owner.guard.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of OwnerGuard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle authentication state.\n\n                                                        \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller to handle modals.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/owner.guard.ts:34\n                        \n                    \n\n\n            \n                \n                        Determines whether a route can be activated based on user ownership.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The activated route snapshot.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The router state snapshot.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable that resolves to a boolean.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AuthService } from '../services/api/auth.service';\nimport { ModalController } from '@ionic/angular';\nimport { ErrorModalComponent } from 'src/app/shared/components/error-modal/error-modal.component';\n\n/**\n * Guard to protect routes based on user ownership.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OwnerGuard implements CanActivate {\n  /**\n   * Creates an instance of OwnerGuard.\n   * \n   * @param auth Service to handle authentication state.\n   * @param modalController Controller to handle modals.\n   */\n  constructor(\n    private auth: AuthService,\n    private modalController: ModalController\n  ) {}\n\n  /**\n   * Determines whether a route can be activated based on user ownership.\n   * \n   * @param route The activated route snapshot.\n   * @param state The router state snapshot.\n   * @returns Observable that resolves to a boolean.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable {\n    return this.auth.isOwner$.pipe(\n      switchMap(async isOwner => {\n        if (isOwner) {\n          return true;\n        } else {\n          const modal = await this.modalController.create({\n            component: ErrorModalComponent,\n            cssClass: 'small-modal',\n          });\n          await modal.present();\n          return false;\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedData.html":{"url":"interfaces/PaginatedData.html","title":"interface - PaginatedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing paginated data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The array of data items.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         Pagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pagination\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The pagination details.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination {\n    /**\n     * The current page number.\n     */\n    page: number;\n    \n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n\n    /**\n     * The total number of pages.\n     */\n    pageCount: number;\n\n    /**\n     * The total number of items.\n     */\n    total: number;\n}\n\n/**\n * Interface representing paginated data.\n * \n * @template T The type of data being paginated.\n */\nexport interface PaginatedData {\n    /**\n     * The array of data items.\n     */\n    data: T[];\n\n    /**\n     * The pagination details.\n     */\n    pagination: Pagination;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing pagination details.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pageCount\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current page number.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total number of pages.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of items per page.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total number of items.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination {\n    /**\n     * The current page number.\n     */\n    page: number;\n    \n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n\n    /**\n     * The total number of pages.\n     */\n    pageCount: number;\n\n    /**\n     * The total number of items.\n     */\n    total: number;\n}\n\n/**\n * Interface representing paginated data.\n * \n * @template T The type of data being paginated.\n */\nexport interface PaginatedData {\n    /**\n     * The array of data items.\n     */\n    data: T[];\n\n    /**\n     * The pagination details.\n     */\n    pagination: Pagination;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordValidation.html":{"url":"classes/PasswordValidation.html","title":"class - PasswordValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/password.ts\n        \n\n\n            \n                Description\n            \n            \n                Utility class for password validation.\nProvides static methods to create validators for password complexity and matching passwords.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                passwordMatch\n                            \n                            \n                                    Static\n                                passwordProto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        passwordMatch\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwordMatch(passwordControlName: string, confirmControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/password.ts:43\n                        \n                    \n\n\n            \n                \n                        Creates a ValidatorFn that checks if the password and confirm password fields match.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                passwordControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The name of the password control.\n\n                                            \n                                        \n                                        \n                                                confirmControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The name of the confirm password control.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                A ValidatorFn that returns validation errors or null if the control's values match.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        passwordProto\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwordProto(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/password.ts:17\n                        \n                    \n\n\n            \n                \n                        Creates a ValidatorFn that checks if the control's value meets the specified password requirements.\nEnsures the password contains at least one digit, one lowercase letter, one uppercase letter,\nand is at least 8 characters long.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    The name of the form control to validate (optional).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                A ValidatorFn that returns validation errors or null if the control's value is valid.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, FormControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\n/**\n * Utility class for password validation.\n * Provides static methods to create validators for password complexity and matching passwords.\n */\nexport class PasswordValidation {\n\n    /**\n     * Creates a ValidatorFn that checks if the control's value meets the specified password requirements.\n     * Ensures the password contains at least one digit, one lowercase letter, one uppercase letter,\n     * and is at least 8 characters long.\n     *\n     * @param controlName The name of the form control to validate (optional).\n     * @returns A ValidatorFn that returns validation errors or null if the control's value is valid.\n     */\n    public static passwordProto(controlName: string = ''): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            let password = '';\n\n            // Get the value from the control, supporting both FormControl and FormGroup\n            if (control instanceof FormControl)\n                password = control?.value;\n            else\n                password = control.get(controlName)?.value;\n\n            // Validate the password against the regex pattern\n            if (password && !password.match(/^(?=.*\\d)(?=.*[a-zá-ú\\u00f1ä-ü])(?=.*[A-ZÁ-Ú\\u00d1Ä-Ü])[0-9a-zá-úä-üA-ZÁ-ÚÄ-Ü \\u00d1$-/@:-?{-~!\"^_`\\[\\]]{8,}$/)) {\n                return { 'passwordProto': true };\n            } else {\n                return null;\n            }\n        }\n    }\n\n    /**\n     * Creates a ValidatorFn that checks if the password and confirm password fields match.\n     *\n     * @param passwordControlName The name of the password control.\n     * @param confirmControlName The name of the confirm password control.\n     * @returns A ValidatorFn that returns validation errors or null if the control's values match.\n     */\n    public static passwordMatch(passwordControlName: string, confirmControlName: string): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            const password = control.get(passwordControlName)?.value;\n            const confirmPassword = control.get(confirmControlName)?.value;\n\n            // Check if the passwords match\n            if (password != confirmPassword) {\n                let errors = control?.errors;\n                if (errors && typeof errors === 'object') {\n                    Object.assign(errors, {\n                        'passwordMatch': true\n                    });\n                } else {\n                    errors = {\n                        'passwordMatch': true\n                    };\n                }\n                return errors;\n            } else {\n                let errors = control?.errors;\n                if (errors && typeof errors === 'object') {\n                    if (errors['passwordMatch'])\n                        delete errors['passwordMatch'];\n                }\n                return control.errors;\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PictureSelectableComponent.html":{"url":"components/PictureSelectableComponent.html","title":"component - PictureSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PictureSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for selecting and displaying a picture, implementing ControlValueAccessor for form integration.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PICTURE_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-picture-selectable\n            \n\n\n\n            \n                styleUrls\n                ./picture-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./picture-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _picture\n                            \n                            \n                                hasValue\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Public\n                                picture$\n                            \n                            \n                                propagateChange\n                            \n                            \n                                test\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePicture\n                            \n                            \n                                close\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangePicture\n                            \n                            \n                                onDeletePicture\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pictureModal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:50\n                            \n                        \n\n                \n                    \n                            Constructor for PictureSelectableComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pictureModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ModalController for handling modals.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePicture\n                        \n                    \n                \n            \n            \n                \nchangePicture(picture: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Method to change the picture URL.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                picture\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new picture URL.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Method to close the modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook to complete the BehaviorSubject when the component is destroyed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called on component initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangePicture\n                        \n                    \n                \n            \n            \n                \nonChangePicture(event: Event, fileLoader: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Method to handle the picture change event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The change event.\n\n                                            \n                                        \n                                        \n                                                fileLoader\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The file input element.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeletePicture\n                        \n                    \n                \n            \n            \n                \nonDeletePicture(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:153\n                        \n                    \n\n\n            \n                \n                        Method to handle the delete picture event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The delete event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Implementation of ControlValueAccessor interface method to register a change function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The change function to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Implementation of ControlValueAccessor interface method to register a touched function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The touched function to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Implementation of ControlValueAccessor interface method to set the disabled state.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The disabled state to set.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Implementation of ControlValueAccessor interface method to write a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new value to write.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _picture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:30\n                        \n                    \n\n            \n                \n                    BehaviorSubject to hold the picture URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:45\n                        \n                    \n\n            \n                \n                    Flag to indicate if the component has a value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:40\n                        \n                    \n\n            \n                \n                    Flag to indicate if the component is disabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        picture$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._picture.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:35\n                        \n                    \n\n            \n                \n                    Observable for the picture URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:74\n                        \n                    \n\n            \n                \n                    Function to propagate changes to the parent form.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://youre.outof.cards/media/uploads/c2/6b/c26b2af3-6d22-4485-8c95-bc7f842831e6/spell.jpg\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:50\n                        \n                    \n\n            \n                \n                    Test picture URL.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Define a constant for providing the PictureSelectableComponent as a NG_VALUE_ACCESSOR.\n * This allows the component to be used as a form control.\n */\nexport const PICTURE_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true\n};\n\n/**\n * Component for selecting and displaying a picture, implementing ControlValueAccessor for form integration.\n */\n@Component({\n  selector: 'app-picture-selectable',\n  templateUrl: './picture-selectable.component.html',\n  styleUrls: ['./picture-selectable.component.scss'],\n  providers: [PICTURE_SELECTABLE_VALUE_ACCESSOR]\n})\nexport class PictureSelectableComponent implements OnInit, ControlValueAccessor, OnDestroy {\n\n  /**\n   * BehaviorSubject to hold the picture URL.\n   */\n  private _picture = new BehaviorSubject('');\n\n  /**\n   * Observable for the picture URL.\n   */\n  public picture$ = this._picture.asObservable();\n\n  /**\n   * Flag to indicate if the component is disabled.\n   */\n  isDisabled: boolean = false;\n\n  /**\n   * Flag to indicate if the component has a value.\n   */\n  hasValue: boolean = false;\n\n  /**\n   * Test picture URL.\n   */\n  test: string = \"https://youre.outof.cards/media/uploads/c2/6b/c26b2af3-6d22-4485-8c95-bc7f842831e6/spell.jpg\";\n\n  /**\n   * Constructor for PictureSelectableComponent.\n   * \n   * @param pictureModal ModalController for handling modals.\n   */\n  constructor(private pictureModal: ModalController) { }\n\n  /**\n   * Lifecycle hook to complete the BehaviorSubject when the component is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._picture.complete();\n  }\n\n  /**\n   * Lifecycle hook called on component initialization.\n   */\n  ngOnInit() { }\n\n  /**\n   * Function to propagate changes to the parent form.\n   */\n  propagateChange = (obj: any) => { }\n\n  /**\n   * Implementation of ControlValueAccessor interface method to write a new value to the component.\n   * \n   * @param obj The new value to write.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.hasValue = true;\n      this._picture.next(obj);\n    }\n  }\n\n  /**\n   * Implementation of ControlValueAccessor interface method to register a change function.\n   * \n   * @param fn The change function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Implementation of ControlValueAccessor interface method to register a touched function.\n   * \n   * @param fn The touched function to register.\n   */\n  registerOnTouched(fn: any): void { }\n\n  /**\n   * Implementation of ControlValueAccessor interface method to set the disabled state.\n   * \n   * @param isDisabled The disabled state to set.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  /**\n   * Method to change the picture URL.\n   * \n   * @param picture The new picture URL.\n   */\n  changePicture(picture: string) {\n    this.hasValue = picture !== '';\n    this._picture.next(picture);\n    this.propagateChange(picture);\n  }\n\n  /**\n   * Method to handle the picture change event.\n   * \n   * @param event The change event.\n   * @param fileLoader The file input element.\n   */\n  onChangePicture(event: Event, fileLoader: HTMLInputElement) {\n    event.stopPropagation();\n    fileLoader.onchange = () => {\n      if (fileLoader.files && fileLoader.files.length > 0) {\n        const file = fileLoader.files[0];\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.changePicture(reader.result as string);\n        };\n        reader.onerror = (error) => {\n          console.log(error);\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    fileLoader.click();\n  }\n\n  /**\n   * Method to handle the delete picture event.\n   * \n   * @param event The delete event.\n   */\n  onDeletePicture(event: Event) {\n    event.stopPropagation();\n    this.changePicture('');\n  }\n\n  /**\n   * Method to close the modal.\n   */\n  close() {\n    this.pictureModal?.dismiss();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n        \n    \n    \n        \n    \n  \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./picture-selectable.component.scss\n                \n                div.user-picture {\n  min-width: 300px;\n  display: flex;\n  flex-direction: column;\n  height: auto; /* Cambiar la altura a auto */\n  ion-img {\n    width: 20vw;\n    height: auto; \n    object-fit: contain;\n    cursor: pointer;\n    align-self: center;\n  }\n  ion-button.picture-button {\n    margin: 0;\n    --padding-start: 0;\n    --padding-end: 0;\n    .button-native {\n      padding: 0 !important;\n    }\n  }\n}\n\nion-modal.auto-height {\n  &.bottom {\n    align-items: flex-end;\n  }\n  --height: auto;\n  .ion-page {\n    position: relative;\n    display: block;\n    contain: content;\n    .inner-content {\n      max-height: 80vh;\n      overflow: auto;\n      padding: 10px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'PictureSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Player.html":{"url":"interfaces/Player.html","title":"interface - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/player.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a player.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            imageUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            positions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrl:         Media | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The media object representing the player's image (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the player.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        positions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The positions the player can play, represented by an array of position IDs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The unique identifier of the player (optional).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NumberSymbol } from \"@angular/common\";\nimport { Media } from \"./media\";\n\n/**\n * Interface representing a player.\n */\nexport interface Player {\n    /**\n     * The name of the player.\n     */\n    name: string;\n\n    /**\n     * The positions the player can play, represented by an array of position IDs.\n     */\n    positions: number[];\n\n    /**\n     * The media object representing the player's image (optional).\n     */\n    imageUrl?: Media | undefined;\n\n    /**\n     * The unique identifier of the player (optional).\n     */\n    uuid?: string;\n}\n\n/**\n * Interface representing a position.\n */\nexport interface Position {\n    /**\n     * The unique identifier of the position.\n     */\n    id: number;\n\n    /**\n     * The name of the position.\n     */\n    name: \"firstBase\" | \"secondBase\" | \"thirdBase\" | \"pitcher\" | \"catcher\" | \"shortstop\" | \"leftField\" | \"centerField\" | \"rightField\" | \"designatedHitter\";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerDetailComponent.html":{"url":"components/PlayerDetailComponent.html","title":"component - PlayerDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/player-detail/player-detail.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for managing player details, including their positions and personal information.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-player-detail\n            \n\n\n\n            \n                styleUrls\n                ./player-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./player-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allPositions\n                            \n                            \n                                form\n                            \n                            \n                                imageUrl\n                            \n                            \n                                initialSelectedPositions\n                            \n                            \n                                mode\n                            \n                            \n                                name\n                            \n                            \n                                selectedPositions\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                areSetsEqual\n                            \n                            \n                                hasError\n                            \n                            \n                                isPositionSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onDelete\n                            \n                            \n                                onImageChange\n                            \n                            \n                                onSubmit\n                            \n                            \n                                togglePosition\n                            \n                            \n                                updateSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                player\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    player\n                                \n                                \n                                    isFormDirty\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_modal: ModalController, formBuilder: FormBuilder, firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/player-detail/player-detail.component.ts:80\n                            \n                        \n\n                \n                    \n                            Constructor for PlayerDetailComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ModalController for handling modals.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder for creating form groups and controls.\n\n                                                        \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService for handling image uploads.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        player\n                    \n                \n                \n                    \n                        Type :         Player | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/player-detail/player-detail.component.ts:47\n                            \n                        \n                \n                    \n                        Input to set the player details\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        areSetsEqual\n                        \n                    \n                \n            \n            \n                \nareSetsEqual(setA: Set, setB: Set)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-detail/player-detail.component.ts:194\n                        \n                    \n\n\n            \n                \n                        Check if two sets are equal\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                setA\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The first set to compare\n\n                                            \n                                        \n                                        \n                                                setB\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The second set to compare\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the sets are equal, false otherwise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(control: string, error: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-detail/player-detail.component.ts:167\n                        \n                    \n\n\n            \n                \n                        Check if a control has a specific error\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The form control name\n\n                                            \n                                        \n                                        \n                                                error\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The error to check for\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the control has the specified error, false otherwise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPositionSelected\n                        \n                    \n                \n            \n            \n                \nisPositionSelected(positionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-detail/player-detail.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Check if a position is selected\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                positionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the position to check\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the position is selected, false otherwise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-detail/player-detail.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called after data-bound properties are initialized.\nInitialize the name property.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-detail/player-detail.component.ts:139\n                        \n                    \n\n\n            \n                \n                        Handle the cancel action\nDismisses the modal without saving changes\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-detail/player-detail.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Handle the delete action\nDismisses the modal and deletes the player\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onImageChange\n                        \n                    \n                \n            \n            \n                \nonImageChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-detail/player-detail.component.ts:208\n                        \n                    \n\n\n            \n                \n                        Handle the image change event\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The image change event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-detail/player-detail.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Handle the submit action\nDismisses the modal and saves changes\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePosition\n                        \n                    \n                \n            \n            \n                \ntogglePosition(positionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-detail/player-detail.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Toggle the selection of a position\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                positionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the position to toggle\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSelected\n                        \n                    \n                \n            \n            \n                \nupdateSelected(set: Set)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-detail/player-detail.component.ts:176\n                        \n                    \n\n\n            \n                \n                        Update the selected positions\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                set\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The set of selected positions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allPositions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Position[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { id: 1, name: 'pitcher' },\n    { id: 2, name: 'catcher' },\n    { id: 3, name: 'firstBase' },\n    { id: 4, name: 'secondBase' },\n    { id: 5, name: 'thirdBase' },\n    { id: 6, name: 'shortstop' },\n    { id: 7, name: 'leftField' },\n    { id: 8, name: 'centerField' },\n    { id: 9, name: 'rightField' },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/player-detail/player-detail.component.ts:70\n                        \n                    \n\n            \n                \n                    Array with all possible positions for display in the template\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/player-detail/player-detail.component.ts:21\n                        \n                    \n\n            \n                \n                    Define the form group for the player detail form\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/player-detail/player-detail.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialSelectedPositions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/player-detail/player-detail.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"New\" | \"Edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'New'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/player-detail/player-detail.component.ts:26\n                        \n                    \n\n            \n                \n                    Mode to determine if the form is for creating a new player or editing an existing one\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/player-detail/player-detail.component.ts:37\n                        \n                    \n\n            \n                \n                    Name of the player\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedPositions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/player-detail/player-detail.component.ts:31\n                        \n                    \n\n            \n                \n                    Sets to track selected positions for comparison\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/player-detail/player-detail.component.ts:42\n                        \n                    \n\n            \n                \n                    UUID of the player\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        player\n                    \n                \n\n\n                \n                    \n                        setplayer(_player: Player | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/player-detail/player-detail.component.ts:47\n                                \n                            \n                    \n                        \n                                Input to set the player details\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _player\n                                                    \n                                                            \n                                                                            Player | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isFormDirty\n                    \n                \n\n                \n                    \n                        getisFormDirty()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/player-detail/player-detail.component.ts:184\n                                \n                            \n                    \n                        \n                                Check if the form is dirty\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { Player, Position } from 'src/app/core/interfaces/player';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\n/**\n * Component for managing player details, including their positions and personal information.\n */\n@Component({\n  selector: 'app-player-detail',\n  templateUrl: './player-detail.component.html',\n  styleUrls: ['./player-detail.component.scss'],\n})\nexport class PlayerDetailComponent implements OnInit {\n  imageUrl: string = \"\";\n\n  /**\n   * Define the form group for the player detail form\n   */\n  form: FormGroup;\n  \n  /**\n   * Mode to determine if the form is for creating a new player or editing an existing one\n   */\n  mode: 'New' | 'Edit' = 'New';\n\n  /**\n   * Sets to track selected positions for comparison\n   */\n  selectedPositions = new Set();\n  initialSelectedPositions = new Set();\n\n  /**\n   * Name of the player\n   */\n  name: string = \"\";\n\n  /**\n   * UUID of the player\n   */\n  uuid: string = \"\";\n\n  /**\n   * Input to set the player details\n   */\n  @Input() set player(_player: Player | null) {\n    if (_player) {\n      this.mode = 'Edit';\n      this.form.controls['name'].setValue(_player.name);\n      if (_player.imageUrl) {\n        this.form.controls['imageUrl'].setValue(_player.imageUrl);\n        this.imageUrl = _player.imageUrl.toString();\n      }\n      if (_player.uuid) {\n        this.uuid = _player.uuid;\n      }\n      this.selectedPositions.clear();\n      _player.positions.forEach(position => {\n        this.selectedPositions.add(position);\n        (this.form.get('positions') as FormArray).push(new FormControl(position));\n      });\n      this.initialSelectedPositions = new Set(this.selectedPositions);\n    }\n  }\n\n  /**\n   * Array with all possible positions for display in the template\n   */\n  allPositions: Position[] = [\n    { id: 1, name: 'pitcher' },\n    { id: 2, name: 'catcher' },\n    { id: 3, name: 'firstBase' },\n    { id: 4, name: 'secondBase' },\n    { id: 5, name: 'thirdBase' },\n    { id: 6, name: 'shortstop' },\n    { id: 7, name: 'leftField' },\n    { id: 8, name: 'centerField' },\n    { id: 9, name: 'rightField' },\n  ];\n\n  /**\n   * Constructor for PlayerDetailComponent.\n   * \n   * @param _modal ModalController for handling modals.\n   * @param formBuilder FormBuilder for creating form groups and controls.\n   * @param firebaseService FirebaseService for handling image uploads.\n   */\n  constructor(\n    private _modal: ModalController,\n    private formBuilder: FormBuilder,\n    private firebaseService: FirebaseService // Ensure to inject your Firebase service\n  ) {\n    this.form = this.formBuilder.group({\n      id: [null],\n      name: ['', [Validators.required]],\n      positions: this.formBuilder.array([]),\n      imageUrl: ['']\n    });\n  }\n\n  /**\n   * Angular lifecycle hook called after data-bound properties are initialized.\n   * Initialize the name property.\n   */\n  ngOnInit() {\n    this.name = this.form.get('name')?.value;\n  }\n\n  /**\n   * Check if a position is selected\n   * @param positionId The ID of the position to check\n   * @returns True if the position is selected, false otherwise\n   */\n  isPositionSelected(positionId: number): boolean {\n    return this.selectedPositions.has(positionId);\n  }\n\n  /**\n   * Toggle the selection of a position\n   * @param positionId The ID of the position to toggle\n   */\n  togglePosition(positionId: number): void {\n    const positionsArray = this.form.get('positions') as FormArray;\n    if (this.selectedPositions.has(positionId)) {\n      const index = positionsArray.controls.findIndex(control => control.value === positionId);\n      positionsArray.removeAt(index);\n      this.selectedPositions.delete(positionId);\n    } else {\n      positionsArray.push(new FormControl(positionId));\n      this.selectedPositions.add(positionId);\n    }\n  }\n\n  /**\n   * Handle the cancel action\n   * Dismisses the modal without saving changes\n   */\n  onCancel() {\n    this._modal.dismiss(null, 'cancel');\n  }\n\n  /**\n   * Handle the submit action\n   * Dismisses the modal and saves changes\n   */\n  onSubmit() {\n    const formWithUUID = { ...this.form.value, uuid: this.uuid };\n    console.log(formWithUUID);\n    this._modal.dismiss(formWithUUID, 'ok');\n  }\n\n  /**\n   * Handle the delete action\n   * Dismisses the modal and deletes the player\n   */\n  onDelete() {\n    this._modal.dismiss(this.form.value, 'delete');\n  }\n\n  /**\n   * Check if a control has a specific error\n   * @param control The form control name\n   * @param error The error to check for\n   * @returns True if the control has the specified error, false otherwise\n   */\n  hasError(control: string, error: string): boolean {\n    let errors = this.form.controls[control].errors;\n    return errors != null && error in errors;\n  }\n\n  /**\n   * Update the selected positions\n   * @param set The set of selected positions\n   */\n  updateSelected(set: Set) {\n    this.selectedPositions = set;\n  }\n\n  /**\n   * Check if the form is dirty\n   * @returns True if the form is dirty, false otherwise\n   */\n  get isFormDirty(): boolean {\n    return (this.form.get('name')?.value != this.name || !this.areSetsEqual(this.selectedPositions, this.initialSelectedPositions) || this.imageUrl != this.form.get('imageUrl')?.value);\n  }\n\n  /**\n   * Check if two sets are equal\n   * @param setA The first set to compare\n   * @param setB The second set to compare\n   * @returns True if the sets are equal, false otherwise\n   */\n  areSetsEqual(setA: Set, setB: Set) {\n    if (setA.size !== setB.size) return false;\n    for (let item of setA) {\n      if (!setB.has(item)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Handle the image change event\n   * @param event The image change event\n   */\n  onImageChange(event: any) {\n    const file = event.target.files[0];\n    if (file) {\n      this.firebaseService.imageUpload(file).then((url: string) => {\n        this.form.controls['imageUrl'].setValue(url);\n        this.imageUrl = url; // Update the imageUrl to mark the form as dirty\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n      \n      \n        {{ 'players.name' | translate }}\n        \n          \n        \n      \n      \n    \n  \n\n\n\n  {{ 'players.submit' | translate }}\n\n\n    \n\n    \n                \n                    ./player-detail.component.scss\n                \n                ion-header, ion-content, ion-footer {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.toolbar-title {\n  padding-right: 5%;\n}\n\n.form-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n.picture-container {\n  margin-top: 1%;\n  margin-bottom: 1%;\n}\n\n.input-wrapper {\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1%;\n  margin-top: 2%;\n}\n\n.input-title {\n  text-align: center;\n  margin-bottom: 5px;\n  font-size: 1.5rem;\n  color:var(--ion-color-textColor);\n\n}\n\n.image-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 20px auto;\n}\n\n.image-container img {\n  max-width: 100%;\n  height: auto;\n  margin-top: 10px;\n}\n\n.dragAndDrop {\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  overflow: hidden;\n  margin: 2%;\n  border: 2px solid white;\n  border-radius: 10px;\n}\n\n.players-list,\n.team-list {\n  flex: 1;\n  overflow-y: auto;\n  max-height: 100vh;\n  padding: 10px;\n  display: flex;\n  min-width: 400px;\n  flex-wrap: wrap;\n  justify-content: center;\n  transition: max-height 0.3s ease-in-out;\n}\n\n.list-container {\n  position: relative;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 30px;\n\n}\n\n.list-title {\n  position: absolute;\n  top: 0;\n  width: 100%;\n  text-align: center;\n  font-size: 1.2rem;\n  color: white;\n  padding: 5px 0;\n}\n\n.dragging {\n  opacity: 0.5;\n  border: 2px dashed #000;\n}\n\nion-title {\n  font-size: 1.5rem;\n  text-align: center;\n}\n\n.divider-line {\n  width: 5px;\n  height: 100vh;\n  background-color: #009a44;\n}\n\n.main-background {\n  background-color: #7e4d32;\n  color: #fff;\n}\n\n.rounde {\n  height: 5vh;\n  width: 4vw;\n  margin: 2%;\n  border-radius: 50px;\n}\n\n.custom-loading {\n  --ion-color-primary: #7e4d32;\n}\n\nion-content {\n  --background: var(--ion-color-primaryGreen);\n}\n\nion-icon {\n  --ion-background-color: #009a44;\n}\n\n.story-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 80%;\n  margin: 20px auto;\n}\n\n.story-container ion-textarea {\n  width: 100%;\n  height: auto;\n  min-height: 150px;\n  --padding-start: 10px;\n  --padding-end: 10px;\n  --padding-top: 10px;\n  --padding-bottom: 10px;\n  font-size: 1.2rem;\n  text-align: justify;\n  overflow: hidden;\n  resize: none;\n}\n\n.player-card {\n  width: 100%;\n  height: 100%;\n  max-width: 120px;\n  max-height: 150px;\n  margin: 10px;\n}\n\n.story-item {\n  width: 100%;\n  max-width: 80%;\n}\n.story-textarea {\n  height: auto;\n  width: 100%;\n  min-height: 150px;\n  --padding-start: 10px;\n  --padding-end: 10px;\n  --padding-top: 10px;\n  --padding-bottom: 10px;\n  font-size: 1.2rem;\n  text-align: justify;\n  overflow: hidden;\n  resize: none;\n  padding: 1%;\n}\nion-input {\n  text-align: center;\n  font-size: 1.5rem;\n}\nposition-selector{\n  margin-bottom: 0.5%;\n}\n\nion-footer{\n  background-color: var(--ion-color-primaryGreen);\n  box-shadow: none;\n}\nIon-icon {\n  color:var(--ion-color-textColorDark);\n  font-weight: bold;\n}\nion-button.button {\ncolor:var(--ion-color-textColorDark);\n--background: var(--ion-color-mediumEndCallToAction);\n--background-hover: var(--ion-color-callToActionGreen);\n--background-activated: var(--ion-color-callToActionGreen);\n--background-focused: var(--ion-color-callToActionGreen);\ntransition: box-shadow 0.3s ease;\nfont-weight: bold;\n}\nion-button.button:hover {\n--background: var(--ion-color-callToActionGreen);\ncolor:var(--ion-color-textColorDark);\n}\nion-item{\n  height: 10vh;\n  --background: var(--ion-color-secondaryGreen);\n\n}\nion-toolbar{\n  --background: var(--ion-color-secondaryGreen);\n}\n.input{\n  height: 10vh;\n  color:var(--ion-color-textColor); \n}\nion-button.submit {\n  font-size: 2rem;\n  transition: box-shadow 0.3s ease;\n  --background: var(--ion-color-callToActionGreen);\n  color: var(--ion-color-textColorDark);\n  margin-bottom: 1%;\n  margin-top: 1%;\n}\n\n\nion-button.submit:hover {\n  box-shadow: 0 0 20px var(--ion-color-callToActionGreen);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        {{ \\'players.name\\' | translate }}                                              {{ \\'players.submit\\' | translate }}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerInfoComponent.html":{"url":"components/PlayerInfoComponent.html","title":"component - PlayerInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/player-info/player-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-player-info\n            \n\n\n\n            \n                styleUrls\n                ./player-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./player-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPositionImageUrl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCardClick\n                            \n                            \n                                onDeleteClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                player\n                            \n                            \n                                showDeleteButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onCardClicked\n                            \n                            \n                                onDeleteClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apisvc: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/player-info/player-info.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apisvc\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        player\n                    \n                \n                \n                    \n                        Type :         Player | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/player-info/player-info.component.ts:15\n                            \n                        \n                \n                    \n                        The player object to display information for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showDeleteButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/player-info/player-info.component.ts:30\n                            \n                        \n                \n                    \n                        Determines whether to show the delete button.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onCardClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/player-info/player-info.component.ts:20\n                            \n                        \n                \n                    \n                        Event emitted when the player card is clicked.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onDeleteClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/player-info/player-info.component.ts:25\n                            \n                        \n                \n                    \n                        Event emitted when the delete button is clicked.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPositionImageUrl\n                        \n                    \n                \n            \n            \n                \ngetPositionImageUrl(positionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-info/player-info.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Gets the URL for the position image based on the position ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                positionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the position.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL of the position image.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-info/player-info.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that is called after data-bound properties are initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCardClick\n                        \n                    \n                \n            \n            \n                \nonCardClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-info/player-info.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Handles the click event on the player card.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-info/player-info.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Handles the click event on the delete button.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event object.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Player, Position } from 'src/app/core/interfaces/player';\nimport { ApiService } from 'src/app/core/services/api/api.service';\n\n@Component({\n  selector: 'app-player-info',\n  templateUrl: './player-info.component.html',\n  styleUrls: ['./player-info.component.scss'],\n})\nexport class PlayerInfoComponent implements OnInit {\n\n  /**\n   * The player object to display information for.\n   */\n  @Input() player: Player | null = null;\n\n  /**\n   * Event emitted when the player card is clicked.\n   */\n  @Output() onCardClicked: EventEmitter = new EventEmitter();\n\n  /**\n   * Event emitted when the delete button is clicked.\n   */\n  @Output() onDeleteClicked: EventEmitter = new EventEmitter();\n\n  /**\n   * Determines whether to show the delete button.\n   */\n  @Input() showDeleteButton: boolean = true;\n\n  constructor(private apisvc: ApiService) { }\n\n  /**\n   * Angular lifecycle hook that is called after data-bound properties are initialized.\n   */\n  ngOnInit() { }\n\n  /**\n   * Handles the click event on the player card.\n   */\n  onCardClick() {\n    this.onCardClicked.emit();\n  }\n\n  /**\n   * Handles the click event on the delete button.\n   * \n   * @param event The event object.\n   */\n  onDeleteClick(event: any) {\n    this.onDeleteClicked.emit();\n    event.stopPropagation();\n  }\n\n  /**\n   * Gets the URL for the position image based on the position ID.\n   * \n   * @param positionId The ID of the position.\n   * @returns The URL of the position image.\n   */\n  getPositionImageUrl(positionId: number): string {\n    // Here you can return the URL of the image based on the position ID.\n    // For now, we use a generic image.\n    return `/assets/positions/${positionId}.png`;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    {{ player?.name|name:12 }}\n  \n  \n    \n      \n        \n        \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./player-info.component.scss\n                \n                .player-card {\n  border-radius: 10px;\n  padding: 10px;\nbackground-color: var(--ion-color-secondaryGreen);\n  text-align: center;\n  position: relative;\n  color: white; /* Texto blanco */\n}\n\n.player-avatar img {\n  width: 100%;\n  height: auto;\n  border-radius: 10px;\n}\n\n.player-name-container {\n  width: 100%;\n  text-align: center;\n  margin-top: 10px;\n}\n\n.player-positions-row {\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n}\n\n.position-image {\n  width: 30px;\n  height: 30px;\n  margin: 0 5px;\n}\n\n.position-image img {\n  width: 100%;\n  height: 100%;\n}\n\n.big-font {\n  font-size: 1.5rem;\n  font-family: 'titlesFont', sans-serif;\n  color: var()\n}\n\n.delete-button {\n  position: absolute;\n  top: 5px;\n  right: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ player?.name|name:12 }}                                                  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayersPage.html":{"url":"components/PlayersPage.html","title":"component - PlayersPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/players/players.page.ts\n\n\n\n    \n        Description\n    \n    \n        Component for managing the players page.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-players\n            \n\n\n\n            \n                styleUrls\n                ./players.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./players.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                players\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                downloadPlayersCSV\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                onCardClicked\n                            \n                            \n                                    Public\n                                onDeleteClicked\n                            \n                            \n                                onNewPlayer\n                            \n                            \n                                    Async\n                                presentForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toast: ToastController, players: PlayersService, modal: ModalController, media: MediaService, csvService: CsvService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/players/players.page.ts:26\n                            \n                        \n\n                \n                    \n                            Creates an instance of PlayersPage.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle navigation.\n\n                                                        \n                                                \n                                                \n                                                        toast\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller to show toast notifications.\n\n                                                        \n                                                \n                                                \n                                                        players\n                                                  \n                                                        \n                                                                        PlayersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage player data.\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller to handle modal dialogs.\n\n                                                        \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                        MediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage media uploads.\n\n                                                        \n                                                \n                                                \n                                                        csvService\n                                                  \n                                                        \n                                                                        CsvService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to generate CSV files.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadPlayersCSV\n                        \n                    \n                \n            \n            \n                \ndownloadPlayersCSV()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/players/players.page.ts:252\n                        \n                    \n\n\n            \n                \n                        Downloads the players data as a CSV file.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/players/players.page.ts:50\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that is called after data-bound properties are initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onCardClicked\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCardClicked(player: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/players/players.page.ts:97\n                        \n                    \n\n\n            \n                \n                        Handles the click event on a player card.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                player\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The player that was clicked.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onDeleteClicked\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDeleteClicked(player: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/players/players.page.ts:60\n                        \n                    \n\n\n            \n                \n                        Handles the deletion of a player.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                player\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The player to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNewPlayer\n                        \n                    \n                \n            \n            \n                \nonNewPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/players/players.page.ts:213\n                        \n                    \n\n\n            \n                \n                        Handles the creation of a new player.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentForm(data: any | null, onDismiss: (result: any) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/players/players.page.ts:164\n                        \n                    \n\n\n            \n                \n                        Presents a form in a modal for creating or editing a player.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The initial data to populate the form with.\n\n                                            \n                                        \n                                        \n                                                onDismiss\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Callback to handle the result when the modal is dismissed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/players/players.page.ts:26\n                        \n                    \n\n            \n                \n                    Indicates if the page is currently loading.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        players\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PlayersService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/players/players.page.ts:41\n                        \n                    \n\n            \n                \n                    Service to manage player data.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Haptics } from '@capacitor/haptics';\nimport { ModalController, ToastController, ToastOptions } from '@ionic/angular';\nimport { dataURLtoBlob } from 'src/app/core/helpers/blob';\nimport { Player } from 'src/app/core/interfaces/player';\nimport { MediaService } from 'src/app/core/services/api/media.service';\nimport { PlayersService } from 'src/app/core/services/api/player.service';\nimport { PlayerDetailComponent } from 'src/app/shared/components/player-detail/player-detail.component';\nimport { CsvService } from 'src/app/core/services/api/csv.service';\nimport { take } from 'rxjs/operators';\n\n/**\n * Component for managing the players page.\n */\n@Component({\n  selector: 'app-players',\n  templateUrl: './players.page.html',\n  styleUrls: ['./players.page.scss'],\n})\nexport class PlayersPage implements OnInit {\n\n  /**\n   * Indicates if the page is currently loading.\n   */\n  public loading: boolean = false;\n\n  /**\n   * Creates an instance of PlayersPage.\n   * \n   * @param router Service to handle navigation.\n   * @param toast Controller to show toast notifications.\n   * @param players Service to manage player data.\n   * @param modal Controller to handle modal dialogs.\n   * @param media Service to manage media uploads.\n   * @param csvService Service to generate CSV files.\n   */\n  constructor(\n    private router: Router,\n    private toast: ToastController,\n    public players: PlayersService,\n    private modal: ModalController,\n    private media: MediaService,\n    private csvService: CsvService // Inject the CSV service\n  ) {}\n\n  /**\n   * Angular lifecycle hook that is called after data-bound properties are initialized.\n   */\n  ngOnInit(): void {\n    this.loading = true;\n    this.loading = false;\n  }\n\n  /**\n   * Handles the deletion of a player.\n   * \n   * @param player The player to be deleted.\n   */\n  public onDeleteClicked(player: Player) {\n    var _player: Player = { ...player };\n\n    this.players.deletePlayer(_player).subscribe(\n      {\n        next: async () => {\n          const options: ToastOptions = {\n            message: `Player deleted`,\n            duration: 1000,\n            position: 'bottom',\n            color: 'danger',\n            cssClass: 'fav-ion-toast'\n          };\n          const toast = await this.toast.create(options);\n          toast.present();\n          await Haptics.notification();\n        },\n        error: err => {\n          console.log(err);\n          const options: ToastOptions = {\n            message: 'Error deleting player',\n            duration: 1000,\n            position: 'bottom',\n            color: 'danger',\n            cssClass: 'card-ion-toast'\n          };\n          this.toast.create(options).then(toast => toast.present());\n        }\n      }\n    );\n  }\n\n  /**\n   * Handles the click event on a player card.\n   * \n   * @param player The player that was clicked.\n   */\n  public async onCardClicked(player: Player) {\n    var onDismiss = (info: any) => {\n      switch(info.role){\n        case 'ok': {\n          this.players.updatePlayer(info.data).subscribe(async () => {\n            const options: ToastOptions = {\n              message: `Player ${info.data.name} modified`,\n              duration: 1000,\n              position: 'bottom',\n              color: 'tertiary',\n              cssClass: 'card-ion-toast'\n            };\n            const toast = await this.toast.create(options);\n            toast.present();\n            await Haptics.notification();\n          }, error => {\n            console.error('Error modifying player:', error);\n            const options: ToastOptions = {\n              message: 'Error modifying player',\n              duration: 1000,\n              position: 'bottom',\n              color: 'danger',\n              cssClass: 'card-ion-toast'\n            };\n            this.toast.create(options).then(toast => toast.present());\n          });\n        }\n        break;\n        case 'delete': {\n          this.players.deletePlayer(info.data).subscribe(async () => {\n            const options: ToastOptions = {\n              message: `Player ${info.data.name} deleted`,\n              duration: 1000,\n              position: 'bottom',\n              color: 'tertiary',\n              cssClass: 'card-ion-toast'\n            };\n            const toast = await this.toast.create(options);\n            toast.present();\n            await Haptics.notification();\n          }, error => {\n            console.error('Error deleting player:', error);\n            const options: ToastOptions = {\n              message: 'Error deleting player',\n              duration: 1000,\n              position: 'bottom',\n              color: 'danger',\n              cssClass: 'card-ion-toast'\n            };\n            this.toast.create(options).then(toast => toast.present());\n          });\n        }\n        break;\n        default: {\n          console.error(\"No debería entrar\");\n        }\n      }\n    }\n    this.presentForm(player, onDismiss);\n  }\n\n  /**\n   * Presents a form in a modal for creating or editing a player.\n   * \n   * @param data The initial data to populate the form with.\n   * @param onDismiss Callback to handle the result when the modal is dismissed.\n   */\n  async presentForm(data: any | null, onDismiss: (result: any) => void) {\n    const modal = await this.modal.create({\n      component: PlayerDetailComponent,\n      componentProps: {\n        player: data\n      },\n      cssClass: \"fullModal\"\n    });\n    await modal.present();\n    const result = await modal.onDidDismiss();\n    \n    if (result && result.data) {\n      if (result.data.imageUrl) {\n        // Compare the current image URL with the previous image URL\n        if (data && data.imageUrl === result.data.imageUrl) {\n          // If the URLs are the same, do not perform the conversion\n          onDismiss(result);\n        } else {\n          // If the URL is different, convert the current image to Blob\n          dataURLtoBlob(result.data.imageUrl, (blob: Blob) => {\n            this.media.upload(blob).subscribe((media: number[]) => {\n              result.data.imageUrl = media[0];\n              result.data.imageUrl = result.data.imageUrl.url_medium;\n              onDismiss(result);\n            }, error => {\n              console.error('Error uploading image:', error);\n              const options: ToastOptions = {\n                message: 'Error uploading image',\n                duration: 1000,\n                position: 'bottom',\n                color: 'danger',\n                cssClass: 'card-ion-toast'\n              };\n              this.toast.create(options).then(toast => toast.present());\n            });\n          });\n        }\n      } else {\n        result.data.imageUrl = \"\";\n        onDismiss(result);\n      }\n    } else {\n      onDismiss(result);\n    }\n  }\n\n  /**\n   * Handles the creation of a new player.\n   */\n  onNewPlayer(){\n    var onDismiss = (info: any) => {\n      switch(info.role){\n        case 'ok': {\n          this.players.addPlayer(info.data).subscribe(async player => {\n            const options: ToastOptions = {\n              message: `Player ${info.data.name} created`,\n              duration: 1000,\n              position: 'bottom',\n              color: 'tertiary',\n              cssClass: 'card-ion-toast'\n            };\n            const toast = await this.toast.create(options);\n            toast.present();\n            await Haptics.notification();\n          }, error => {\n            console.error('Error creating player:', error);\n            const options: ToastOptions = {\n              message: 'Error creating player',\n              duration: 1000,\n              position: 'bottom',\n              color: 'danger',\n              cssClass: 'card-ion-toast'\n            };\n            this.toast.create(options).then(toast => toast.present());\n          });\n        }\n        break;\n        default:{\n          console.error(\"No debería entrar\");\n        }\n      }\n    }\n    this.presentForm(null, onDismiss);\n  }\n\n  /**\n   * Downloads the players data as a CSV file.\n   */\n  downloadPlayersCSV() {\n    this.players.players$.pipe(take(1)).subscribe((players) => {\n      const formattedPlayers = players.map(player => {\n        return {\n          uuid: player.uuid,\n          name: player.name,\n          imageUrl: player.imageUrl,\n          positions: player.positions.join(', ')\n        };\n      });\n\n      const orderedKeys = ['uuid', 'name', 'imageUrl', 'positions'];\n\n      const csvData = this.csvService.convertToCSV(formattedPlayers, orderedKeys);\n      this.csvService.downloadFile(csvData, 'players.csv');\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    {{ 'players.downloadPlayersCsv' | translate }}  \n  \n    \n      \n        \n        \n      \n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./players.page.scss\n                \n                \n  \n  .round {\n    height: 5vh;\n    width: 4vw;\n    margin:2%;\n    border-radius: 50px;\n  }\n  \n  .custom-loading {\n    --ion-color-primary: #7e4d32;\n  }\n\nion-content{\n    --background: var(--ion-color-primaryGreen);\n}\n\nIon-icon {\n  color:var(--ion-color-textColorDark);\n  font-weight: bold;\n}\n\nion-button.button {\ncolor:var(--ion-color-textColorDark);\n--background: var(--ion-color-mediumEndCallToAction);\n--background-hover: var(--ion-color-callToActionGreen);\n--background-activated: var(--ion-color-callToActionGreen);\n--background-focused: var(--ion-color-callToActionGreen);\ntransition: box-shadow 0.3s ease;\nfont-weight: bold;\n}\nion-button.button:hover {\n--background: var(--ion-color-callToActionGreen);\ncolor:var(--ion-color-textColorDark);\nbox-shadow: 0 0 20px var(--ion-color-callToActionGreen);\n}\n.rounde {\n  height: 5vh;\n  width: 4vw;\n  margin: 2%;\n  border-radius: 50px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ \\'players.downloadPlayersCsv\\' | translate }}                                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlayersPageModule.html":{"url":"modules/PlayersPageModule.html","title":"module - PlayersPageModule","body":"\n                   \n\n\n\n\n    Modules\n    PlayersPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlayersPageModule\n\n\n\ncluster_PlayersPageModule_declarations\n\n\n\ncluster_PlayersPageModule_imports\n\n\n\n\nPlayersPage\n\nPlayersPage\n\n\n\nPlayersPageModule\n\nPlayersPageModule\n\nPlayersPageModule -->\n\nPlayersPage->PlayersPageModule\n\n\n\n\n\nPlayersPageRoutingModule\n\nPlayersPageRoutingModule\n\nPlayersPageModule -->\n\nPlayersPageRoutingModule->PlayersPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPlayersPageModule -->\n\nSharedModule->PlayersPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/players/players.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PlayersPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PlayersPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PlayersPageRoutingModule } from './players-routing.module';\n\nimport { PlayersPage } from './players.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n   SharedModule,\n    PlayersPageRoutingModule\n  ],\n  declarations: [PlayersPage]\n})\nexport class PlayersPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlayersPageRoutingModule.html":{"url":"modules/PlayersPageRoutingModule.html","title":"module - PlayersPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PlayersPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/players/players-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PlayersPage } from './players.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlayersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PlayersPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayersService.html":{"url":"injectables/PlayersService.html","title":"injectable - PlayersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/player.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service handles operations related to players.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _players\n                            \n                            \n                                    Public\n                                players$\n                            \n                            \n                                    Private\n                                unsubscribe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPlayer\n                            \n                            \n                                    Public\n                                deleteAll\n                            \n                            \n                                    Public\n                                deletePlayer\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                getPlayer\n                            \n                            \n                                mapPlayers\n                            \n                            \n                                    Public\n                                updatePlayer\n                            \n                            \n                                uploadImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseSvc: FirebaseService, firebaseAuth: FirebaseAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/player.service.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of PlayersService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with Firebase.\n\n                                                        \n                                                \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                        FirebaseAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle Firebase authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    addPlayer(player: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/player.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Adds a new player.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                player\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The player to add.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the added player.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/player.service.ts:182\n                        \n                    \n\n\n            \n                \n                        Deletes all players.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the delete operation.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deletePlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    deletePlayer(player: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/player.service.ts:154\n                        \n                    \n\n\n            \n                \n                        Deletes a player.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                player\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The player to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the deleted player.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/player.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Retrieves all players.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the list of players.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlayer(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/player.service.ts:117\n                        \n                    \n\n\n            \n                \n                        Retrieves a player by their UUID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The UUID of the player.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the player.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapPlayers\n                        \n                    \n                \n            \n            \n                \nmapPlayers(doc: FirebaseDocument)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/player.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Maps a Firebase document to a Player object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                            FirebaseDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Firebase document.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Player\n\n                        \n                            \n                                The mapped Player object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatePlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePlayer(player: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/player.service.ts:137\n                        \n                    \n\n\n            \n                \n                        Updates an existing player.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                player\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The player to update.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the updated player.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadImage\n                        \n                    \n                \n            \n            \n                \nuploadImage(file: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/player.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _players\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/player.service.ts:30\n                        \n                    \n\n            \n                \n                    BehaviorSubject to track the list of players.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        players$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._players.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/player.service.ts:35\n                        \n                    \n\n            \n                \n                    Observable for the list of players.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Unsubscribe | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/player.service.ts:40\n                        \n                    \n\n            \n                \n                    Unsubscribe function for Firebase listeners.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Unsubscribe } from 'firebase/firestore';\nimport { BehaviorSubject, Observable, from, map, switchMap, of } from 'rxjs';\nimport { Player } from '../../interfaces/player';\nimport { User } from '../../interfaces/user';\nimport { FirebaseDocument, FirebaseService } from '../firebase/firebase.service';\nimport { FirebaseAuthService } from './firebase/firebase-auth.service';\n\n/**\n * Exception thrown when a player is not found.\n */\nexport class playerNotFoundException extends Error {\n  // . declare any additional properties or methods .\n}\n\n/**\n * This service handles operations related to players.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayersService {\n  uploadImage(file: any) {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * BehaviorSubject to track the list of players.\n   */\n  private _players: BehaviorSubject = new BehaviorSubject([]);\n\n  /**\n   * Observable for the list of players.\n   */\n  public players$: Observable = this._players.asObservable();\n\n  /**\n   * Unsubscribe function for Firebase listeners.\n   */\n  private unsubscribe: Unsubscribe | null = null;\n\n  /**\n   * Creates an instance of PlayersService.\n   * \n   * @param firebaseSvc Service to interact with Firebase.\n   * @param firebaseAuth Service to handle Firebase authentication.\n   */\n  constructor(\n    private firebaseSvc: FirebaseService,\n    private firebaseAuth: FirebaseAuthService\n  ) {\n    this.mapPlayers = this.mapPlayers.bind(this);\n    this.players$ = this.firebaseSvc.players$;\n  }\n\n  /**\n   * Maps a Firebase document to a Player object.\n   * \n   * @param doc The Firebase document.\n   * @returns The mapped Player object.\n   */\n  mapPlayers(doc: FirebaseDocument): Player {\n    console.log(this.firebaseSvc.user?.uid);\n    this.firebaseAuth.user$.subscribe(user => {\n      console.log(user);\n    });\n\n    return {\n      name: doc.data['name'],\n      positions: doc.data['positions'],\n      imageUrl: doc.data['imageUrl'],\n      uuid: doc.id\n    };\n  }\n\n  /**\n   * Adds a new player.\n   * \n   * @param player The player to add.\n   * @returns An observable of the added player.\n   */\n  public addPlayer(player: Player): Observable {\n    return from(this.firebaseSvc.createDocument(\"players\", player)).pipe(\n      map(() => player) // Return the created player after document creation\n    );\n  }\n\n  /**\n   * Retrieves all players.\n   * \n   * @returns An observable of the list of players.\n   */\n  public getAll(): Observable {\n    return from(this.firebaseSvc.getDocuments(\"players\")).pipe(\n      map((documents: FirebaseDocument[]) => {\n        const players: Player[] = documents.map(doc => {\n          return {\n            uuid: doc.id,\n            id: doc.data['id'],\n            name: doc.data['name'],\n            positions: doc.data['positions'],\n            imageUrl: doc.data['imageUrl']\n          } as Player;\n        });\n        this._players.next(players);\n        return players;\n      })\n    );\n  }\n\n  /**\n   * Retrieves a player by their UUID.\n   * \n   * @param uuid The UUID of the player.\n   * @returns An observable of the player.\n   */\n  public getPlayer(uuid: string): Observable {\n    return from(this.firebaseSvc.getDocument(\"players\", uuid)).pipe(switchMap((doc: FirebaseDocument) => {\n      return new Observable(player => {\n        let payload: Player = {\n          uuid: doc.id,\n          name: doc.data['name'],\n          positions: doc.data['positions'],\n          imageUrl: doc.data['imageUrl']\n        };\n        player.next(payload);\n      });\n    }));\n  }\n\n  /**\n   * Updates an existing player.\n   * \n   * @param player The player to update.\n   * @returns An observable of the updated player.\n   */\n  public updatePlayer(player: Player): Observable {\n    return new Observable(obs => {\n      if (player.uuid) {\n        this.firebaseSvc.updateDocument(\"players\", player, player.uuid);\n        obs.next(player);\n      } else {\n        obs.error(new Error(\"Player does not have UUID\"));\n      }\n    });\n  }\n\n  /**\n   * Deletes a player.\n   * \n   * @param player The player to delete.\n   * @returns An observable of the deleted player.\n   */\n  public deletePlayer(player: Player): Observable {\n    return new Observable(obs => {\n      if (!player.uuid) {\n        obs.error(new Error(\"Player does not have UUID\"));\n        return;\n      }\n\n      from(this.firebaseSvc.deleteDocument(\"players\", player.uuid)).pipe(\n        switchMap(() => {\n          return this.firebaseAuth.me();\n        }),\n      ).subscribe({\n        next: () => {\n          obs.next(player);\n          obs.complete();\n        },\n        error: error => {\n          obs.error(error);\n        }\n      });\n    });\n  }\n\n  /**\n   * Deletes all players.\n   * \n   * @returns An observable of the delete operation.\n   */\n  public deleteAll(): Observable {\n    return new Observable(observer => {\n      setTimeout(() => {\n        this._players.next([]);\n        observer.next();\n        observer.complete();\n      }, 1000);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Position.html":{"url":"interfaces/Position.html","title":"interface - Position","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Position\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/player.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a position.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of the position.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     \"firstBase\" | \"secondBase\" | \"thirdBase\" | \"pitcher\" | \"catcher\" | \"shortstop\" | \"leftField\" | \"centerField\" | \"rightField\" | \"designatedHitter\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"firstBase\" | \"secondBase\" | \"thirdBase\" | \"pitcher\" | \"catcher\" | \"shortstop\" | \"leftField\" | \"centerField\" | \"rightField\" | \"designatedHitter\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the position.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NumberSymbol } from \"@angular/common\";\nimport { Media } from \"./media\";\n\n/**\n * Interface representing a player.\n */\nexport interface Player {\n    /**\n     * The name of the player.\n     */\n    name: string;\n\n    /**\n     * The positions the player can play, represented by an array of position IDs.\n     */\n    positions: number[];\n\n    /**\n     * The media object representing the player's image (optional).\n     */\n    imageUrl?: Media | undefined;\n\n    /**\n     * The unique identifier of the player (optional).\n     */\n    uuid?: string;\n}\n\n/**\n * Interface representing a position.\n */\nexport interface Position {\n    /**\n     * The unique identifier of the position.\n     */\n    id: number;\n\n    /**\n     * The name of the position.\n     */\n    name: \"firstBase\" | \"secondBase\" | \"thirdBase\" | \"pitcher\" | \"catcher\" | \"shortstop\" | \"leftField\" | \"centerField\" | \"rightField\" | \"designatedHitter\";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PositionImageDirective.html":{"url":"directives/PositionImageDirective.html","title":"directive - PositionImageDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  PositionImageDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/position-image.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive to set the background image of an element based on a specified position.\n\n            \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [positionImage]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                position\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyBackgroundImage\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                positionName\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    positionName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2, api: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/position-image.directive.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor for PositionImageDirective.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the element on which the directive is applied.\n\n                                                        \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Renderer2 to manipulate the element's style.\n\n                                                        \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ApiService to interact with the backend (not used in this directive).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        positionName\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/position-image.directive.ts:18\n                            \n                        \n                \n                    \n                        Input setter for the positionName. Sets the position value.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyBackgroundImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyBackgroundImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/position-image.directive.ts:84\n                        \n                    \n\n\n            \n                \n                        Applies the background image to the element.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The URL of the image to apply.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/position-image.directive.ts:39\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that is called after data-bound properties are initialized.\nSets the background image based on the position.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/directives/position-image.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        positionName\n                    \n                \n\n\n                \n                    \n                        setpositionName(pos: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/directives/position-image.directive.ts:18\n                                \n                            \n                    \n                        \n                                Input setter for the positionName. Sets the position value.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            pos\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The position value to set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, Renderer2, OnInit, Input } from '@angular/core';\nimport { ApiService } from 'src/app/core/services/api/api.service';\n\n/**\n * Directive to set the background image of an element based on a specified position.\n */\n@Directive({\n  selector: '[positionImage]'\n})\nexport class PositionImageDirective implements OnInit {\n  private position = -1;\n\n  /**\n   * Input setter for the positionName. Sets the position value.\n   * \n   * @param pos The position value to set.\n   */\n  @Input() set positionName(pos: number) {\n    this.position = pos;\n  }\n\n  /**\n   * Constructor for PositionImageDirective.\n   * \n   * @param el Reference to the element on which the directive is applied.\n   * @param renderer Renderer2 to manipulate the element's style.\n   * @param api ApiService to interact with the backend (not used in this directive).\n   */\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private api: ApiService\n  ) { }\n\n  /**\n   * Angular lifecycle hook that is called after data-bound properties are initialized.\n   * Sets the background image based on the position.\n   */\n  ngOnInit() {\n    let positionUrl = \"\";\n    switch (this.position) {\n      case 1:\n        positionUrl = \"https://firebasestorage.googleapis.com/v0/b/home-slam.appspot.com/o/noun-baseball-pitcher-2745168.png?alt=media&token=5817cc45-2618-4384-bd11-00e61b678775\";\n        break;\n      case 2:\n        positionUrl = \"https://firebasestorage.googleapis.com/v0/b/home-slam.appspot.com/o/catcher%20logo.png?alt=media&token=bd536903-378b-46e9-8e91-b2a784a93f06\";\n        break;\n      case 3:\n        positionUrl = \"https://firebasestorage.googleapis.com/v0/b/home-slam.appspot.com/o/noun-mitt-1941039.png?alt=media&token=587d6ce6-3d13-4440-b2a4-da79454a87bd\";\n        break;\n      case 4:\n        positionUrl = \"https://firebasestorage.googleapis.com/v0/b/home-slam.appspot.com/o/noun-home-base-5005428.png?alt=media&token=4f387627-60f7-42d6-868d-778a81145809\";\n        break;\n      case 5:\n        positionUrl = \"https://firebasestorage.googleapis.com/v0/b/home-slam.appspot.com/o/noun-home-base-5005447.png?alt=media&token=3f4eb468-46ef-408b-9a6c-2e62b27f79e7\";\n        break;\n      case 6:\n        positionUrl = \"https://firebasestorage.googleapis.com/v0/b/home-slam.appspot.com/o/shortstop.png?alt=media&token=f05da330-2c20-461b-83bf-b5d1783201c2\";\n        break;\n      case 7:\n        positionUrl = \"https://firebasestorage.googleapis.com/v0/b/home-slam.appspot.com/o/noun-baseball-player-54549.png?alt=media&token=c39eff19-4e52-4379-857d-ba2f2549812e\";\n        break;\n      case 8:\n        positionUrl = \"https://firebasestorage.googleapis.com/v0/b/home-slam.appspot.com/o/noun-catcher-643797.png?alt=media&token=485f3826-d24a-479a-94e1-97ed7c211bdd\";\n        break;\n      case 9:\n        positionUrl = \"https://firebasestorage.googleapis.com/v0/b/home-slam.appspot.com/o/rightfield.png?alt=media&token=68854fa0-b8ef-439f-983d-486238a92c6c\";\n        break;\n      case 10:\n        positionUrl = \"https://firebasestorage.googleapis.com/v0/b/home-slam.appspot.com/o/unknown.png?alt=media&token=756b782e-9cdc-40ad-ae01-13ae9677ce28\";\n        break;\n      default:\n        positionUrl = \"https://firebasestorage.googleapis.com/v0/b/home-slam.appspot.com/o/unknown.png?alt=media&token=756b782e-9cdc-40ad-ae01-13ae9677ce28\";\n        break;\n    }\n    this.applyBackgroundImage(positionUrl);\n  }\n\n  /**\n   * Applies the background image to the element.\n   * \n   * @param url The URL of the image to apply.\n   */\n  private applyBackgroundImage(url: string): void {\n    this.renderer.setStyle(this.el.nativeElement, 'background-image', `url(${url})`);\n    this.renderer.setStyle(this.el.nativeElement, 'background-size', 'cover');\n    this.renderer.setStyle(this.el.nativeElement, 'background-repeat', 'no-repeat');\n    this.renderer.setStyle(this.el.nativeElement, 'width', '70px');\n    this.renderer.setStyle(this.el.nativeElement, 'height', '70px');\n    this.renderer.setStyle(this.el.nativeElement, 'border-radius', '50%');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PositionSelectorComponent.html":{"url":"components/PositionSelectorComponent.html","title":"component - PositionSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PositionSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/position-selector/position-selector.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => PositionSelectorComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                app-position-selector\n            \n\n\n\n            \n                styleUrls\n                ./position-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./position-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allPositions\n                            \n                            \n                                    Optional\n                                onChangeCb\n                            \n                            \n                                    Optional\n                                onTouchedCb\n                            \n                            \n                                positionsSelected\n                            \n                            \n                                setChecker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPosition\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputPositions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                positionsChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/position-selector/position-selector.component.ts:62\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputPositions\n                    \n                \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/position-selector/position-selector.component.ts:22\n                            \n                        \n                \n                    \n                        Input set of positions selected.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        positionsChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/position-selector/position-selector.component.ts:27\n                            \n                        \n                \n                    \n                        Event emitted when the positions change.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPosition\n                        \n                    \n                \n            \n            \n                \naddPosition(position: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/position-selector/position-selector.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Adds or removes a position from the selected positions.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The position to add or remove.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/position-selector/position-selector.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Registers a callback function for when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The callback function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/position-selector/position-selector.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Registers a callback function for when the control is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The callback function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(positions: number[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/position-selector/position-selector.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Writes the selected positions to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                positions\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The positions to write.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allPositions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { id: 1, name: 'Pitcher' },\n    { id: 2, name: 'Catcher' },\n    { id: 3, name: 'First Base' },\n    { id: 4, name: 'Second Base' },\n    { id: 5, name: 'Third Base' },\n    { id: 6, name: 'Shortstop' },\n    { id: 7, name: 'Left Field' },\n    { id: 8, name: 'Center Field' },\n    { id: 9, name: 'Right Field' },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/position-selector/position-selector.component.ts:52\n                        \n                    \n\n            \n                \n                    Array of all available positions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        onChangeCb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/position-selector/position-selector.component.ts:42\n                        \n                    \n\n            \n                \n                    Callback function when the value changes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        onTouchedCb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/position-selector/position-selector.component.ts:47\n                        \n                    \n\n            \n                \n                    Callback function when the control is touched.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        positionsSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : Array.from(this.inputPositions)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/position-selector/position-selector.component.ts:32\n                        \n                    \n\n            \n                \n                    Array of positions selected.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChecker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : this.inputPositions\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/position-selector/position-selector.component.ts:37\n                        \n                    \n\n            \n                \n                    Checker set for positions.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Position } from 'src/app/core/interfaces/player';\n\n@Component({\n  selector: 'app-position-selector',\n  templateUrl: './position-selector.component.html',\n  styleUrls: ['./position-selector.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PositionSelectorComponent),\n      multi: true\n    }\n  ]\n})\nexport class PositionSelectorComponent implements ControlValueAccessor {\n\n  /**\n   * Input set of positions selected.\n   */\n  @Input() inputPositions: Set = new Set();\n\n  /**\n   * Event emitted when the positions change.\n   */\n  @Output() positionsChange = new EventEmitter>();\n\n  /**\n   * Array of positions selected.\n   */\n  positionsSelected: number[] = Array.from(this.inputPositions);\n\n  /**\n   * Checker set for positions.\n   */\n  setChecker: Set = this.inputPositions;\n\n  /**\n   * Callback function when the value changes.\n   */\n  onChangeCb?: (position: Position) => void;\n\n  /**\n   * Callback function when the control is touched.\n   */\n  onTouchedCb?: () => void;\n\n  /**\n   * Array of all available positions.\n   */\n  allPositions = [\n    { id: 1, name: 'Pitcher' },\n    { id: 2, name: 'Catcher' },\n    { id: 3, name: 'First Base' },\n    { id: 4, name: 'Second Base' },\n    { id: 5, name: 'Third Base' },\n    { id: 6, name: 'Shortstop' },\n    { id: 7, name: 'Left Field' },\n    { id: 8, name: 'Center Field' },\n    { id: 9, name: 'Right Field' },\n  ];\n\n  constructor() { }\n\n  /**\n   * Adds or removes a position from the selected positions.\n   * \n   * @param position The position to add or remove.\n   */\n  addPosition(position: any): void {\n    this.setChecker.clear();\n    const index = this.positionsSelected.indexOf(position.id);\n    if (index > -1) {\n      this.positionsSelected.splice(index, 1);\n    } else {\n      if (this.positionsSelected?.length  {\n      this.setChecker.add(pos);\n    });\n    this.positionsChange.emit(this.setChecker);\n    if (this.onChangeCb) {\n      this.onChangeCb(position);\n    }\n  }\n\n  /**\n   * Writes the selected positions to the component.\n   * \n   * @param positions The positions to write.\n   */\n  writeValue(positions: number[]): void {\n    this.positionsSelected = positions;\n  }\n\n  /**\n   * Registers a callback function for when the value changes.\n   * \n   * @param fn The callback function.\n   */\n  registerOnChange(fn: any): void {\n    this.onChangeCb = fn;\n  }\n\n  /**\n   * Registers a callback function for when the control is touched.\n   * \n   * @param fn The callback function.\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouchedCb = fn;\n  }\n}\n\n    \n\n    \n        \n\n\n\n    {{ position.name }}\n  \n\n\n  \n    \n\n    \n                \n                    ./position-selector.component.scss\n                \n                .selected {\n  --background: var(--ion-color-mediumEndCallToAction);\n  color:var(--ion-color-textColorDark);\n}\n    .not-selected{\n      --background: var(--ion-color-secondaryGreen);\n      color:var(--ion-color-textColor);\n    } \n\n      ion-button.not-selected:hover {\n      --background: var(--ion-color-mediumEndCallToAction);\n      color:var(--ion-color-textColorDark);\n      box-shadow: 0 0 20px var(--ion-color-mediumEndCallToAction);\n      }\n      ion-button.selected:hover {\n        --background: var(--ion-color-secondaryGreen);\n      color:var(--ion-color-textColor);\n      box-shadow: 0 0 20px var(--ion-color-secondaryGreen);\n        }\n\n        ion-button{\n          font-size: 1.5rem;\n          font-weight: bold;\n        }\n    .position-selector-container {\n      display: flex;\n      height: 100%;\n      flex-direction: row;\n      flex-wrap: wrap;\n      justify-content: center;\n    }\n\n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ position.name }}    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'PositionSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProviderMetadata.html":{"url":"interfaces/ProviderMetadata.html","title":"interface - ProviderMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProviderMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing provider metadata for a media object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            public_id\n                                        \n                                \n                                \n                                        \n                                            resource_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        public_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The public ID of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resource_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The resource type of the media.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiUser {\n  /**\n   * The unique identifier of the user.\n   */\n  id: number;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n\n  /**\n   * The email of the user.\n   */\n  email: string;\n}\n\n/**\n * Interface representing the payload for Strapi login.\n */\nexport interface StrapiLoginPayload {\n  /**\n   * The identifier (username or email) of the user.\n   */\n  identifier: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n}\n\n/**\n * Interface representing the payload for Strapi registration.\n */\nexport interface StrapiRegisterPayload {\n  /**\n   * The email of the user.\n   */\n  email: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n}\n\n/**\n * Interface representing the response from Strapi login.\n */\nexport interface StrapiLoginResponse {\n  /**\n   * The JWT token.\n   */\n  jwt: string;\n\n  /**\n   * The user details.\n   */\n  user: StrapiUser;\n}\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The data object containing extended user details.\n   */\n  data: {\n    /**\n     * The name of the user.\n     */\n    name: string;\n\n    /**\n     * The surname of the user.\n     */\n    surname: string;\n\n    /**\n     * The user permissions identifier.\n     */\n    users_permissions_user: number;\n\n    /**\n     * The array of player identifiers associated with the user.\n     */\n    players: number[];\n\n    /**\n     * The array of team identifiers associated with the user.\n     */\n    teams: number[];\n\n    /**\n     * The array of trainer identifiers associated with the user.\n     */\n    trainers: number[];\n  };\n}\n\n/**\n * Interface representing a generic Strapi data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiData {\n  /**\n   * The unique identifier of the data object.\n   */\n  id: number;\n\n  /**\n   * The attributes of the data object.\n   */\n  attributes: T;\n}\n\n/**\n * Interface representing a response from Strapi that includes an array of data objects.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiArrayResponse {\n  /**\n   * The array of data objects.\n   */\n  data: StrapiData[];\n\n  /**\n   * Meta information about the response.\n   */\n  meta: {\n    /**\n     * Pagination details (optional).\n     */\n    pagination?: {\n      page: number;\n      pageSize: number;\n      pageCount: number;\n      total: number;\n    };\n  };\n}\n\n/**\n * Interface representing a response from Strapi that includes a single data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiResponse {\n  /**\n   * The data object.\n   */\n  data: StrapiData;\n}\n\n/**\n * Type alias for the current Strapi user.\n */\nexport type StrapiMe = StrapiUser;\n\n/**\n * Type alias for the response from Strapi registration.\n */\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The unique identifier of the extended user (optional).\n   */\n  id?: number;\n\n  /**\n   * The name of the user.\n   */\n  name: string;\n\n  /**\n   * The surname of the user.\n   */\n  surname: string;\n\n  /**\n   * The user ID.\n   */\n  user_id: number;\n\n  /**\n   * The nickname of the user (optional).\n   */\n  nickname?: string;\n\n  /**\n   * The picture of the user (optional).\n   */\n  picture?: {\n    /**\n     * The data object containing the media details.\n     */\n    data: StrapiData;\n  };\n}\n\n/**\n * Type alias for the response from Strapi media upload.\n */\nexport type StrapiUploadResponse = StrapiMedia[];\n\n/**\n * Interface representing a Strapi media object.\n */\nexport interface StrapiMedia {\n  /**\n   * The unique identifier of the media.\n   */\n  id: number;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * Alternative text for the media.\n   */\n  alternativeText: any;\n\n  /**\n   * Caption for the media.\n   */\n  caption: any;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * The different formats of the media.\n   */\n  formats: Formats;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The preview URL of the media (optional).\n   */\n  previewUrl: any;\n\n  /**\n   * The provider of the media.\n   */\n  provider: string;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n\n  /**\n   * The creation date of the media.\n   */\n  createdAt: string;\n\n  /**\n   * The last update date of the media.\n   */\n  updatedAt: string;\n}\n\n/**\n * Interface representing the different formats of a media object.\n */\nexport interface Formats {\n  /**\n   * The large format of the media.\n   */\n  large: MediaFormat;\n\n  /**\n   * The small format of the media.\n   */\n  small: MediaFormat;\n\n  /**\n   * The medium format of the media.\n   */\n  medium: MediaFormat;\n\n  /**\n   * The thumbnail format of the media.\n   */\n  thumbnail: MediaFormat;\n}\n\n/**\n * Interface representing a specific format of a media object.\n */\nexport interface MediaFormat {\n  /**\n   * The file extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * The path of the media (optional).\n   */\n  path: any;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n}\n\n/**\n * Interface representing provider metadata for a media object.\n */\nexport interface ProviderMetadata {\n  /**\n   * The public ID of the media.\n   */\n  public_id: string;\n\n  /**\n   * The resource type of the media.\n   */\n  resource_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterFormComponent.html":{"url":"components/RegisterFormComponent.html","title":"component - RegisterFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/register-form/register-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying and handling a register form.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register-form\n            \n\n\n\n            \n                styleUrls\n                ./register-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onsubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/register-form/register-form.component.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor for RegisterFormComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder service for creating forms.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onsubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/register-form/register-form.component.ts:18\n                            \n                        \n                \n                    \n                        Event emitted when the form is submitted.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/register-form/register-form.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that is called after data-bound properties are initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/register-form/register-form.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Handles form submission.\nEmits the form value and clears the password fields.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/register-form/register-form.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Custom validator to check if password and confirmPassword fields match.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The form group to validate.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { mismatch: boolean; }\n\n                        \n                            \n                                An object if the validation fails, null otherwise.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/register-form/register-form.component.ts:23\n                        \n                    \n\n            \n                \n                    Form group for the register form.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserRegisterInfo } from '../../../core/interfaces/user-register-info';\n\n/**\n * Component for displaying and handling a register form.\n */\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.scss'],\n})\nexport class RegisterFormComponent implements OnInit {\n  \n  /**\n   * Event emitted when the form is submitted.\n   */\n  @Output() onsubmit = new EventEmitter();\n\n  /**\n   * Form group for the register form.\n   */\n  form: FormGroup | null = null;\n\n  /**\n   * Constructor for RegisterFormComponent.\n   * \n   * @param formBuilder FormBuilder service for creating forms.\n   */\n  constructor(\n    private formBuilder: FormBuilder\n  ) {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      name: ['', [Validators.required, Validators.minLength(2)]],\n      password: ['', [Validators.required, Validators.minLength(12)]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(12)]],\n      nickname: ['', [Validators.required, Validators.minLength(2)]]\n    }, { validator: this.passwordMatchValidator });\n  }\n\n  /**\n   * Angular lifecycle hook that is called after data-bound properties are initialized.\n   */\n  ngOnInit() {}\n\n  /**\n   * Handles form submission.\n   * Emits the form value and clears the password fields.\n   */\n  onSubmit() {\n    this.onsubmit.emit(this.form?.value);\n    this.form?.controls['password'].setValue('');\n    this.form?.controls['confirmPassword'].setValue('');\n  }\n\n  /**\n   * Custom validator to check if password and confirmPassword fields match.\n   * @param formGroup The form group to validate.\n   * @returns An object if the validation fails, null otherwise.\n   */\n  passwordMatchValidator(formGroup: FormGroup) {\n    const password = formGroup.get('password')?.value;\n    const confirmPassword = formGroup.get('confirmPassword')?.value;\n    return password === confirmPassword ? null : { mismatch: true };\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{'register.email' | translate}}\n    \n       \n  \n    \n      {{'register.name' | translate}}\n    \n  \n  \n    \n      {{'register.pwd' | translate}}\n    \n  \n  \n    \n      {{'register.confirmPwd' | translate}}\n    \n  \n  \n    \n      {{'register.nickname' | translate}}\n    \n  \n\n  \n    {{ 'register.submit' | translate }}\n  \n\n  \n    {{'register.emailError' | translate}}\n  \n  \n    {{'register.nameError' | translate}}\n  \n  \n    {{'register.passwordError' | translate}}\n  \n  \n    {{'register.nickError' | translate}}\n  \n  \n    {{'register.confirmPwdError' | translate}}\n  \n\n    \n\n    \n                \n                    ./register-form.component.scss\n                \n                .center-button {\n    margin: 2%;\n    text-align: center;\n  }\n  \n  .center-button ion-button {\n    --background:#009a44; \n    --color: #ffffff;\n    text-transform: none;\n  }\n  .error-message {\n    color: red;\n    font-size: 0.8rem;\n    margin-top: 2%;\n    text-align: center;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{\\'register.email\\' | translate}}                       {{\\'register.name\\' | translate}}                  {{\\'register.pwd\\' | translate}}                  {{\\'register.confirmPwd\\' | translate}}                  {{\\'register.nickname\\' | translate}}            {{ \\'register.submit\\' | translate }}        {{\\'register.emailError\\' | translate}}        {{\\'register.nameError\\' | translate}}        {{\\'register.passwordError\\' | translate}}        {{\\'register.nickError\\' | translate}}        {{\\'register.confirmPwdError\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/register/register.page.ts\n\n\n\n    \n        Description\n    \n    \n        Component for managing the user registration page.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToLoginPage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/register/register.page.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of RegisterPage.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle navigation.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToLoginPage\n                        \n                    \n                \n            \n            \n                \ngoToLoginPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:54\n                        \n                    \n\n\n            \n                \n                        Navigates to the login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:31\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that is called after data-bound properties are initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRegister\n                        \n                    \n                \n            \n            \n                \nonRegister(registerInfo: UserRegisterInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:39\n                        \n                    \n\n\n            \n                \n                        Handles the user registration.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                registerInfo\n                                            \n                                                            UserRegisterInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The registration information provided by the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { UserRegisterInfo } from '../../core/interfaces/user-register-info';\nimport { AuthService } from '../../core/services/api/auth.service';\n\n/**\n * Component for managing the user registration page.\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  /**\n   * Creates an instance of RegisterPage.\n   * \n   * @param auth Service to manage authentication.\n   * @param router Service to handle navigation.\n   */\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n  ) { }\n\n  /**\n   * Angular lifecycle hook that is called after data-bound properties are initialized.\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Handles the user registration.\n   * \n   * @param registerInfo The registration information provided by the user.\n   */\n  onRegister(registerInfo: UserRegisterInfo) {\n    this.auth.register(registerInfo).subscribe({\n      next: data => {\n        // Registration successful\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    this.router.navigate(['home']);\n  }\n\n  /**\n   * Navigates to the login page.\n   */\n  goToLoginPage() {\n    this.router.navigate(['/login']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          {{'register.access'|translate}}\n        \n      \n      \n        \n          \n            {{ 'register.login'|translate }}\n          \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./register.page.scss\n                \n                //parecido al del profe pero nomas le cambiaste la imagen y el titulo y los colores\nion-content {\n    min-height: 100vh;\n    position: relative;\n  }\n  \n  .container {\n    min-height: 0;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  \n    ion-card {\n      box-shadow: none;\n      border: 1px solid var(--ion-color-medium);\n      border-radius: 8px;\n      width: auto;\n      min-height: 500px;\n      overflow-y: auto;\n      height: auto;\n      padding: 24px 20px 18px;\n      min-width: 350px;\n    }\n  }\n  \n  .logo {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    color: var(--ion-color-dark);\n  }\n  \n  .logo-thumbnail {\n    width: 120px;\n    height: 120px;\n    margin-bottom: 2%   ;\n  }\n  \n  .logo-text {\n    font-size: 1.5rem;\n  }\n  \n.ion-text-center ion-button {\n  text-transform: none;\n  text-align: center;\n  font-size: 1rem;\n}\n\n  \n  ion-content{\n    --min-height: 100vh;\n    --background: url('../../../assets/imgs/registerbackground.png') 0/100% 100% no-repeat; \n    --background-repeat: no-repeat;\n    --background-size: cover;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              {{\\'register.access\\'|translate}}                                                  {{ \\'register.login\\'|translate }}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageModule.html":{"url":"modules/RegisterPageModule.html","title":"module - RegisterPageModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nRegisterPageModule -->\n\nSharedModule->RegisterPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/register/register.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegisterPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegisterPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n  SharedModule,\n  RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageRoutingModule.html":{"url":"modules/RegisterPageRoutingModule.html","title":"module - RegisterPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/register/register-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPage.html":{"url":"components/SettingsPage.html","title":"component - SettingsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/settings/settings.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n\n\n            \n                styleUrls\n                ./settings.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                languages\n                            \n                            \n                                languageSelected\n                            \n                            \n                                user\n                            \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLanguage\n                            \n                            \n                                    Async\n                                showToast\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isFormDirty\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: CustomTranslateService, authService: AuthService, fb: FormBuilder, toastController: ToastController, firebaseService: FirebaseService, mediaService: MediaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/settings/settings.page.ts:36\n                            \n                        \n\n                \n                    \n                            Constructor for SettingsPage component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for handling translations.\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for handling authentication and user details.\n\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFormBuilder for creating reactive forms.\n\n\n                                                        \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nController for displaying toast notifications.\n\n\n                                                        \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                                \n                                                        mediaService\n                                                  \n                                                        \n                                                                        MediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for handling media uploads.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:67\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that is called after data-bound properties are initialized.\nFetches the current user details and initializes the form.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLanguage\n                        \n                    \n                \n            \n            \n                \nsetLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:82\n                        \n                    \n\n\n            \n                \n                        Sets the application language and displays a toast notification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe language code to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    showToast(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:93\n                        \n                    \n\n\n            \n                \n                        Displays a toast notification with the specified message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message to display in the toast notification.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:106\n                        \n                    \n\n\n            \n                \n                        Updates the user details.\nIf the picture is changed, it uploads the new picture and updates the user details accordingly.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['es', 'en']\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.page.ts:21\n                        \n                    \n\n            \n                \n                    Array of available languages.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languageSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'es'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.page.ts:26\n                        \n                    \n\n            \n                \n                    Currently selected language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.page.ts:36\n                        \n                    \n\n            \n                \n                    Current user details.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.page.ts:31\n                        \n                    \n\n            \n                \n                    Form group for user settings.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isFormDirty\n                    \n                \n\n                \n                    \n                        getisFormDirty()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/settings/settings.page.ts:134\n                                \n                            \n                    \n                        \n                                Checks if the form is dirty (modified).\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomTranslateService } from 'src/app/core/services/custom-translate.service';\nimport { AuthService } from 'src/app/core/services/api/auth.service';\nimport { User } from 'src/app/core/interfaces/user';\nimport { ToastController } from '@ionic/angular';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { MediaService } from 'src/app/core/services/api/media.service';\nimport { dataURLtoBlob } from 'src/app/core/helpers/blob';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  \n  /**\n   * Array of available languages.\n   */\n  languages = ['es', 'en'];\n\n  /**\n   * Currently selected language.\n   */\n  languageSelected = 'es';\n\n  /**\n   * Form group for user settings.\n   */\n  userForm: FormGroup;\n\n  /**\n   * Current user details.\n   */\n  user: User | null = null;\n\n  /**\n   * Constructor for SettingsPage component.\n   *\n   * @param translateService - Service for handling translations.\n   * @param authService - Service for handling authentication and user details.\n   * @param fb - FormBuilder for creating reactive forms.\n   * @param toastController - Controller for displaying toast notifications.\n   * @param firebaseService - Service for handling Firebase operations.\n   * @param mediaService - Service for handling media uploads.\n   */\n  constructor(\n    private translateService: CustomTranslateService,\n    private authService: AuthService,\n    private fb: FormBuilder,\n    private toastController: ToastController,\n    private firebaseService: FirebaseService,\n    private mediaService: MediaService\n  ) {\n    this.languageSelected = this.translateService.getLang();\n    this.userForm = this.fb.group({\n      nickname: ['', Validators.required],\n      picture: ['']\n    });\n  }\n\n  /**\n   * Angular lifecycle hook that is called after data-bound properties are initialized.\n   * Fetches the current user details and initializes the form.\n   */\n  ngOnInit() {\n    this.authService.me().subscribe(user => {\n      this.user = user;\n      this.userForm.patchValue({\n        nickname: user.nickname,\n        picture: user.picture\n      });\n    });\n  }\n\n  /**\n   * Sets the application language and displays a toast notification.\n   *\n   * @param lang - The language code to set.\n   */\n  setLanguage(lang: string) {\n    this.languageSelected = lang;\n    this.translateService.onLanguageChange(lang);\n    this.showToast(`Language changed to ${lang.toUpperCase()}`);\n  }\n\n  /**\n   * Displays a toast notification with the specified message.\n   *\n   * @param message - The message to display in the toast notification.\n   */\n  async showToast(message: string) {\n    const toast = await this.toastController.create({\n      message,\n      duration: 2000,\n      position: 'bottom'\n    });\n    toast.present();\n  }\n\n  /**\n   * Updates the user details.\n   * If the picture is changed, it uploads the new picture and updates the user details accordingly.\n   */\n  updateUser() {\n    if (this.userForm.valid) {\n      const updatedUser = { ...this.user, ...this.userForm.value };\n      if (updatedUser.picture !== this.user?.picture) {\n        dataURLtoBlob(updatedUser.picture, (blob: Blob) => {\n          this.mediaService.upload(blob).subscribe((media: any[]) => {\n            updatedUser.picture = media[0].url_medium;\n            this.authService.updateUser(updatedUser).subscribe(async () => {\n              this.showToast('User information updated successfully');\n            });\n          }, error => {\n            console.error('Error uploading image:', error);\n            this.showToast('Error uploading image');\n          });\n        });\n      } else {\n        this.authService.updateUser(updatedUser).subscribe(async () => {\n          this.showToast('User information updated successfully');\n        });\n      }\n    }\n  }\n\n  /**\n   * Checks if the form is dirty (modified).\n   *\n   * @returns True if the form is dirty, false otherwise.\n   */\n  get isFormDirty(): boolean {\n    return this.userForm.get('nickname')?.value !== this.user?.nickname || this.userForm.get('picture')?.value !== this.user?.picture;\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n    \n      \n        \n          \n        \n        \n          {{ 'settings.nickname' | translate }}\n          \n            \n          \n        \n        {{ 'settings.update' | translate }}\n      \n      {{ 'settings.language' | translate }}\n      \n        \n          {{ language | uppercase }} - {{ 'header.languages.' + language | translate }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./settings.page.scss\n                \n                .page-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.outer-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n}\n\n.form-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n.picture-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 200px;\n  margin-bottom: 2%;\n}\n\n.input-wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n.input-title {\n  text-align: center;\n  font-size: 1.5rem;\n  margin:0.5%;\n}\n\n.buttons-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n\n.button, .submit {\n  width: 100%;\n  max-width: 400px;\n  height: 60px;\n  font-size: 1rem;\n  text-align: center;\n}\n\nion-footer {\n  background-color: #005625;\n}\n\n.main-background {\n  background-color: #7e4d32;\n  color: #fff;\n}\n.form{\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n}\nion-content{\n  --background: var(--ion-color-primaryGreen);\n}\n.input-title{\n  color:var(--ion-color-textColor); \n}\nion-input{\n  color:var(--ion-color-textColor); \n}\nion-item{\n  --background: var(--ion-color-secondaryGreen);\n  color: var(--ion-color-textColor);\n}\nion-button.button {\n  color:var(--ion-color-textColorDark);\n  --background: var(--ion-color-mediumEndCallToAction);\n  --background-hover: var(--ion-color-callToActionGreen);\n  --background-activated: var(--ion-color-callToActionGreen);\n  --background-focused: var(--ion-color-callToActionGreen);\n  transition: box-shadow 0.3s ease;\n  font-weight: bold;\n  }\n  ion-button.button:hover {\n  --background: var(--ion-color-callToActionGreen);\n  color:var(--ion-color-textColorDark);\n  }\n\n\n  ion-button.submit {\n    font-size: 1.5rem;\n    transition: box-shadow 0.3s ease;\n    --background: var(--ion-color-callToActionGreen);\n    color: var(--ion-color-textColorDark);\n    margin-bottom: 1%;\n    margin-top: 1%;\n    font-weight: bold;\n  }\n  \n  ion-button.submit:hover {\n    box-shadow: 0 0 20px var(--ion-color-callToActionGreen);\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          {{ \\'settings.nickname\\' | translate }}                                                {{ \\'settings.update\\' | translate }}            {{ \\'settings.language\\' | translate }}                        {{ language | uppercase }} - {{ \\'header.languages.\\' + language | translate }}                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsPageModule.html":{"url":"modules/SettingsPageModule.html","title":"module - SettingsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsPageModule\n\n\n\ncluster_SettingsPageModule_declarations\n\n\n\ncluster_SettingsPageModule_imports\n\n\n\n\nSettingsPage\n\nSettingsPage\n\n\n\nSettingsPageModule\n\nSettingsPageModule\n\nSettingsPageModule -->\n\nSettingsPage->SettingsPageModule\n\n\n\n\n\nSettingsPageRoutingModule\n\nSettingsPageRoutingModule\n\nSettingsPageModule -->\n\nSettingsPageRoutingModule->SettingsPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSettingsPageModule -->\n\nSharedModule->SettingsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SettingsPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n   SharedModule,\n   ReactiveFormsModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsPageRoutingModule.html":{"url":"modules/SettingsPageRoutingModule.html","title":"module - SettingsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/settings/settings-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppToolbarComponent\n\nAppToolbarComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAppToolbarComponent->SharedModule\n\n\n\n\n\nErrorModalComponent\n\nErrorModalComponent\n\nSharedModule -->\n\nErrorModalComponent->SharedModule\n\n\n\n\n\nGameDetailComponent\n\nGameDetailComponent\n\nSharedModule -->\n\nGameDetailComponent->SharedModule\n\n\n\n\n\nGameInfoComponent\n\nGameInfoComponent\n\nSharedModule -->\n\nGameInfoComponent->SharedModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nSharedModule -->\n\nLoginFormComponent->SharedModule\n\n\n\n\n\nNamePipe\n\nNamePipe\n\nSharedModule -->\n\nNamePipe->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nPlayerDetailComponent\n\nPlayerDetailComponent\n\nSharedModule -->\n\nPlayerDetailComponent->SharedModule\n\n\n\n\n\nPlayerInfoComponent\n\nPlayerInfoComponent\n\nSharedModule -->\n\nPlayerInfoComponent->SharedModule\n\n\n\n\n\nPositionImageDirective\n\nPositionImageDirective\n\nSharedModule -->\n\nPositionImageDirective->SharedModule\n\n\n\n\n\nPositionSelectorComponent\n\nPositionSelectorComponent\n\nSharedModule -->\n\nPositionSelectorComponent->SharedModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nSharedModule -->\n\nRegisterFormComponent->SharedModule\n\n\n\n\n\nTeamDetailComponent\n\nTeamDetailComponent\n\nSharedModule -->\n\nTeamDetailComponent->SharedModule\n\n\n\n\n\nTeamInfoComponent\n\nTeamInfoComponent\n\nSharedModule -->\n\nTeamInfoComponent->SharedModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nSharedModule -->\n\nUserInfoComponent->SharedModule\n\n\n\n\n\nAppToolbarComponent \n\nAppToolbarComponent \n\nAppToolbarComponent  -->\n\nSharedModule->AppToolbarComponent \n\n\n\n\n\nErrorModalComponent \n\nErrorModalComponent \n\nErrorModalComponent  -->\n\nSharedModule->ErrorModalComponent \n\n\n\n\n\nGameDetailComponent \n\nGameDetailComponent \n\nGameDetailComponent  -->\n\nSharedModule->GameDetailComponent \n\n\n\n\n\nGameInfoComponent \n\nGameInfoComponent \n\nGameInfoComponent  -->\n\nSharedModule->GameInfoComponent \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nSharedModule->LoginFormComponent \n\n\n\n\n\nNamePipe \n\nNamePipe \n\nNamePipe  -->\n\nSharedModule->NamePipe \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nPlayerDetailComponent \n\nPlayerDetailComponent \n\nPlayerDetailComponent  -->\n\nSharedModule->PlayerDetailComponent \n\n\n\n\n\nPlayerInfoComponent \n\nPlayerInfoComponent \n\nPlayerInfoComponent  -->\n\nSharedModule->PlayerInfoComponent \n\n\n\n\n\nPositionImageDirective \n\nPositionImageDirective \n\nPositionImageDirective  -->\n\nSharedModule->PositionImageDirective \n\n\n\n\n\nPositionSelectorComponent \n\nPositionSelectorComponent \n\nPositionSelectorComponent  -->\n\nSharedModule->PositionSelectorComponent \n\n\n\n\n\nRegisterFormComponent \n\nRegisterFormComponent \n\nRegisterFormComponent  -->\n\nSharedModule->RegisterFormComponent \n\n\n\n\n\nTeamDetailComponent \n\nTeamDetailComponent \n\nTeamDetailComponent  -->\n\nSharedModule->TeamDetailComponent \n\n\n\n\n\nTeamInfoComponent \n\nTeamInfoComponent \n\nTeamInfoComponent  -->\n\nSharedModule->TeamInfoComponent \n\n\n\n\n\nUserInfoComponent \n\nUserInfoComponent \n\nUserInfoComponent  -->\n\nSharedModule->UserInfoComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppToolbarComponent\n                        \n                        \n                            ErrorModalComponent\n                        \n                        \n                            GameDetailComponent\n                        \n                        \n                            GameInfoComponent\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            NamePipe\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            PlayerDetailComponent\n                        \n                        \n                            PlayerInfoComponent\n                        \n                        \n                            PositionImageDirective\n                        \n                        \n                            PositionSelectorComponent\n                        \n                        \n                            RegisterFormComponent\n                        \n                        \n                            TeamDetailComponent\n                        \n                        \n                            TeamInfoComponent\n                        \n                        \n                            UserInfoComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppToolbarComponent\n                        \n                        \n                            ErrorModalComponent\n                        \n                        \n                            GameDetailComponent\n                        \n                        \n                            GameInfoComponent\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            NamePipe\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            PlayerDetailComponent\n                        \n                        \n                            PlayerInfoComponent\n                        \n                        \n                            PositionImageDirective\n                        \n                        \n                            PositionSelectorComponent\n                        \n                        \n                            RegisterFormComponent\n                        \n                        \n                            TeamDetailComponent\n                        \n                        \n                            TeamInfoComponent\n                        \n                        \n                            UserInfoComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { LoginFormComponent } from './components/login-form/login-form.component';\nimport { HttpClient } from '@angular/common/http';\nimport { RegisterFormComponent } from './components/register-form/register-form.component';\nimport { PlayerInfoComponent } from './components/player-info/player-info.component';\nimport { PlayerDetailComponent } from './components/player-detail/player-detail.component';\nimport { TeamDetailComponent } from './components/team-detail/team-detail.component';\nimport { TeamInfoComponent } from './components/team-info/team-info.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PositionSelectorComponent } from './components/position-selector/position-selector.component';\nimport { NamePipe } from './pipes/name.pipe';\nimport { PositionImageDirective } from './directives/position-image.directive';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { AppToolbarComponent } from './components/app-toolbar/app-toolbar.component';\nimport { PictureSelectableComponent } from './components/picture-selectable/picture-selectable.component';\nimport { GameInfoComponent } from './components/game-info/game-info.component';\nimport { GameDetailComponent } from './components/game-detail/game-detail.component';\nimport { UserInfoComponent } from './components/user-info/user-info.component';\nimport { ErrorModalComponent } from './components/error-modal/error-modal.component';\nimport { createTranslateLoader } from '../core/services/custom-translate.service';\n\n@NgModule({\n  declarations: [\n    // Components\n    PictureSelectableComponent,\n    PlayerDetailComponent,\n    LoginFormComponent,\n    PlayerInfoComponent,\n    TeamDetailComponent,\n    TeamInfoComponent,\n    AppToolbarComponent,\n    PositionSelectorComponent,\n    RegisterFormComponent,\n    GameInfoComponent,\n    GameDetailComponent,\n    UserInfoComponent,\n    ErrorModalComponent,\n    \n    // Pipes\n    NamePipe,\n    \n    // Directives\n    PositionImageDirective\n  ],\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    DragDropModule,\n    TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    })\n  ],\n  exports: [\n    CommonModule, \n    IonicModule, \n    FormsModule,\n    \n    // Components\n    PictureSelectableComponent,\n    PlayerDetailComponent,\n    AppToolbarComponent,\n    LoginFormComponent,\n    RegisterFormComponent,\n    PlayerInfoComponent,\n    TeamDetailComponent,\n    TeamInfoComponent,\n    PositionSelectorComponent,\n    GameInfoComponent,\n    GameDetailComponent,\n    UserInfoComponent,\n    ErrorModalComponent,\n    \n    // Pipes\n    NamePipe,\n    \n    // Directives\n    PositionImageDirective,\n    \n    // Modules\n    TranslateModule\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SplashPage.html":{"url":"components/SplashPage.html","title":"component - SplashPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SplashPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/splash/splash.page.ts\n\n\n\n    \n        Description\n    \n    \n        Component for managing the splash page.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-splash\n            \n\n\n\n            \n                styleUrls\n                ./splash.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./splash.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/splash/splash.page.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of SplashPage.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle navigation.\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle route information.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/splash/splash.page.ts:34\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that is called after data-bound properties are initialized.\nThis method sets up a delay and then checks if the user is logged in to determine the next navigation route.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/api/auth.service';\nimport { delay, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n/**\n * Component for managing the splash page.\n */\n@Component({\n  selector: 'app-splash',\n  templateUrl: './splash.page.html',\n  styleUrls: ['./splash.page.scss'],\n})\nexport class SplashPage implements OnInit {\n\n  /**\n   * Creates an instance of SplashPage.\n   * \n   * @param authService Service to manage authentication.\n   * @param router Service to handle navigation.\n   * @param route Service to handle route information.\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  /**\n   * Angular lifecycle hook that is called after data-bound properties are initialized.\n   * This method sets up a delay and then checks if the user is logged in to determine the next navigation route.\n   */\n  ngOnInit() {\n    of('').pipe(delay(2000)).subscribe(() => {\n      // Check if the user is logged in\n      this.authService.isLogged$.pipe(\n        switchMap(logged => {\n          // If logged in, navigate to the home page or the specified redirect URL\n          if (logged) {\n            const redirectUrl = this.route.snapshot.queryParams['redirectUrl'] || '/home';\n            return this.router.navigateByUrl(redirectUrl);\n          } else {\n            // If not logged in, navigate to the login page\n            return this.router.navigate(['/login']);\n          }\n        })\n      ).subscribe();\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n\n    \n                \n                    ./splash.page.scss\n                \n                .splash-screen{\n    display:flex;\n    width:100%;\n    height:100%;\n    justify-content:center;\n    align-items:center;\n    overflow-y: hidden;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'SplashPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SplashPageModule.html":{"url":"modules/SplashPageModule.html","title":"module - SplashPageModule","body":"\n                   \n\n\n\n\n    Modules\n    SplashPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SplashPageModule\n\n\n\ncluster_SplashPageModule_imports\n\n\n\ncluster_SplashPageModule_declarations\n\n\n\n\nSplashPage\n\nSplashPage\n\n\n\nSplashPageModule\n\nSplashPageModule\n\nSplashPageModule -->\n\nSplashPage->SplashPageModule\n\n\n\n\n\nSplashPageRoutingModule\n\nSplashPageRoutingModule\n\nSplashPageModule -->\n\nSplashPageRoutingModule->SplashPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/splash/splash.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SplashPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SplashPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SplashPageRoutingModule } from './splash-routing.module';\n\nimport { SplashPage } from './splash.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SplashPageRoutingModule\n  ],\n  declarations: [SplashPage]\n})\nexport class SplashPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SplashPageRoutingModule.html":{"url":"modules/SplashPageRoutingModule.html","title":"module - SplashPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SplashPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/splash/splash-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SplashPage } from './splash.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SplashPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SplashPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiArrayResponse.html":{"url":"interfaces/StrapiArrayResponse.html","title":"interface - StrapiArrayResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiArrayResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a response from Strapi that includes an array of data objects.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         StrapiData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiData[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The array of data objects.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Meta information about the response.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiUser {\n  /**\n   * The unique identifier of the user.\n   */\n  id: number;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n\n  /**\n   * The email of the user.\n   */\n  email: string;\n}\n\n/**\n * Interface representing the payload for Strapi login.\n */\nexport interface StrapiLoginPayload {\n  /**\n   * The identifier (username or email) of the user.\n   */\n  identifier: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n}\n\n/**\n * Interface representing the payload for Strapi registration.\n */\nexport interface StrapiRegisterPayload {\n  /**\n   * The email of the user.\n   */\n  email: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n}\n\n/**\n * Interface representing the response from Strapi login.\n */\nexport interface StrapiLoginResponse {\n  /**\n   * The JWT token.\n   */\n  jwt: string;\n\n  /**\n   * The user details.\n   */\n  user: StrapiUser;\n}\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The data object containing extended user details.\n   */\n  data: {\n    /**\n     * The name of the user.\n     */\n    name: string;\n\n    /**\n     * The surname of the user.\n     */\n    surname: string;\n\n    /**\n     * The user permissions identifier.\n     */\n    users_permissions_user: number;\n\n    /**\n     * The array of player identifiers associated with the user.\n     */\n    players: number[];\n\n    /**\n     * The array of team identifiers associated with the user.\n     */\n    teams: number[];\n\n    /**\n     * The array of trainer identifiers associated with the user.\n     */\n    trainers: number[];\n  };\n}\n\n/**\n * Interface representing a generic Strapi data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiData {\n  /**\n   * The unique identifier of the data object.\n   */\n  id: number;\n\n  /**\n   * The attributes of the data object.\n   */\n  attributes: T;\n}\n\n/**\n * Interface representing a response from Strapi that includes an array of data objects.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiArrayResponse {\n  /**\n   * The array of data objects.\n   */\n  data: StrapiData[];\n\n  /**\n   * Meta information about the response.\n   */\n  meta: {\n    /**\n     * Pagination details (optional).\n     */\n    pagination?: {\n      page: number;\n      pageSize: number;\n      pageCount: number;\n      total: number;\n    };\n  };\n}\n\n/**\n * Interface representing a response from Strapi that includes a single data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiResponse {\n  /**\n   * The data object.\n   */\n  data: StrapiData;\n}\n\n/**\n * Type alias for the current Strapi user.\n */\nexport type StrapiMe = StrapiUser;\n\n/**\n * Type alias for the response from Strapi registration.\n */\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The unique identifier of the extended user (optional).\n   */\n  id?: number;\n\n  /**\n   * The name of the user.\n   */\n  name: string;\n\n  /**\n   * The surname of the user.\n   */\n  surname: string;\n\n  /**\n   * The user ID.\n   */\n  user_id: number;\n\n  /**\n   * The nickname of the user (optional).\n   */\n  nickname?: string;\n\n  /**\n   * The picture of the user (optional).\n   */\n  picture?: {\n    /**\n     * The data object containing the media details.\n     */\n    data: StrapiData;\n  };\n}\n\n/**\n * Type alias for the response from Strapi media upload.\n */\nexport type StrapiUploadResponse = StrapiMedia[];\n\n/**\n * Interface representing a Strapi media object.\n */\nexport interface StrapiMedia {\n  /**\n   * The unique identifier of the media.\n   */\n  id: number;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * Alternative text for the media.\n   */\n  alternativeText: any;\n\n  /**\n   * Caption for the media.\n   */\n  caption: any;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * The different formats of the media.\n   */\n  formats: Formats;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The preview URL of the media (optional).\n   */\n  previewUrl: any;\n\n  /**\n   * The provider of the media.\n   */\n  provider: string;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n\n  /**\n   * The creation date of the media.\n   */\n  createdAt: string;\n\n  /**\n   * The last update date of the media.\n   */\n  updatedAt: string;\n}\n\n/**\n * Interface representing the different formats of a media object.\n */\nexport interface Formats {\n  /**\n   * The large format of the media.\n   */\n  large: MediaFormat;\n\n  /**\n   * The small format of the media.\n   */\n  small: MediaFormat;\n\n  /**\n   * The medium format of the media.\n   */\n  medium: MediaFormat;\n\n  /**\n   * The thumbnail format of the media.\n   */\n  thumbnail: MediaFormat;\n}\n\n/**\n * Interface representing a specific format of a media object.\n */\nexport interface MediaFormat {\n  /**\n   * The file extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * The path of the media (optional).\n   */\n  path: any;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n}\n\n/**\n * Interface representing provider metadata for a media object.\n */\nexport interface ProviderMetadata {\n  /**\n   * The public ID of the media.\n   */\n  public_id: string;\n\n  /**\n   * The resource type of the media.\n   */\n  resource_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiData.html":{"url":"interfaces/StrapiData.html","title":"interface - StrapiData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a generic Strapi data object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The attributes of the data object.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of the data object.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiUser {\n  /**\n   * The unique identifier of the user.\n   */\n  id: number;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n\n  /**\n   * The email of the user.\n   */\n  email: string;\n}\n\n/**\n * Interface representing the payload for Strapi login.\n */\nexport interface StrapiLoginPayload {\n  /**\n   * The identifier (username or email) of the user.\n   */\n  identifier: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n}\n\n/**\n * Interface representing the payload for Strapi registration.\n */\nexport interface StrapiRegisterPayload {\n  /**\n   * The email of the user.\n   */\n  email: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n}\n\n/**\n * Interface representing the response from Strapi login.\n */\nexport interface StrapiLoginResponse {\n  /**\n   * The JWT token.\n   */\n  jwt: string;\n\n  /**\n   * The user details.\n   */\n  user: StrapiUser;\n}\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The data object containing extended user details.\n   */\n  data: {\n    /**\n     * The name of the user.\n     */\n    name: string;\n\n    /**\n     * The surname of the user.\n     */\n    surname: string;\n\n    /**\n     * The user permissions identifier.\n     */\n    users_permissions_user: number;\n\n    /**\n     * The array of player identifiers associated with the user.\n     */\n    players: number[];\n\n    /**\n     * The array of team identifiers associated with the user.\n     */\n    teams: number[];\n\n    /**\n     * The array of trainer identifiers associated with the user.\n     */\n    trainers: number[];\n  };\n}\n\n/**\n * Interface representing a generic Strapi data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiData {\n  /**\n   * The unique identifier of the data object.\n   */\n  id: number;\n\n  /**\n   * The attributes of the data object.\n   */\n  attributes: T;\n}\n\n/**\n * Interface representing a response from Strapi that includes an array of data objects.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiArrayResponse {\n  /**\n   * The array of data objects.\n   */\n  data: StrapiData[];\n\n  /**\n   * Meta information about the response.\n   */\n  meta: {\n    /**\n     * Pagination details (optional).\n     */\n    pagination?: {\n      page: number;\n      pageSize: number;\n      pageCount: number;\n      total: number;\n    };\n  };\n}\n\n/**\n * Interface representing a response from Strapi that includes a single data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiResponse {\n  /**\n   * The data object.\n   */\n  data: StrapiData;\n}\n\n/**\n * Type alias for the current Strapi user.\n */\nexport type StrapiMe = StrapiUser;\n\n/**\n * Type alias for the response from Strapi registration.\n */\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The unique identifier of the extended user (optional).\n   */\n  id?: number;\n\n  /**\n   * The name of the user.\n   */\n  name: string;\n\n  /**\n   * The surname of the user.\n   */\n  surname: string;\n\n  /**\n   * The user ID.\n   */\n  user_id: number;\n\n  /**\n   * The nickname of the user (optional).\n   */\n  nickname?: string;\n\n  /**\n   * The picture of the user (optional).\n   */\n  picture?: {\n    /**\n     * The data object containing the media details.\n     */\n    data: StrapiData;\n  };\n}\n\n/**\n * Type alias for the response from Strapi media upload.\n */\nexport type StrapiUploadResponse = StrapiMedia[];\n\n/**\n * Interface representing a Strapi media object.\n */\nexport interface StrapiMedia {\n  /**\n   * The unique identifier of the media.\n   */\n  id: number;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * Alternative text for the media.\n   */\n  alternativeText: any;\n\n  /**\n   * Caption for the media.\n   */\n  caption: any;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * The different formats of the media.\n   */\n  formats: Formats;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The preview URL of the media (optional).\n   */\n  previewUrl: any;\n\n  /**\n   * The provider of the media.\n   */\n  provider: string;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n\n  /**\n   * The creation date of the media.\n   */\n  createdAt: string;\n\n  /**\n   * The last update date of the media.\n   */\n  updatedAt: string;\n}\n\n/**\n * Interface representing the different formats of a media object.\n */\nexport interface Formats {\n  /**\n   * The large format of the media.\n   */\n  large: MediaFormat;\n\n  /**\n   * The small format of the media.\n   */\n  small: MediaFormat;\n\n  /**\n   * The medium format of the media.\n   */\n  medium: MediaFormat;\n\n  /**\n   * The thumbnail format of the media.\n   */\n  thumbnail: MediaFormat;\n}\n\n/**\n * Interface representing a specific format of a media object.\n */\nexport interface MediaFormat {\n  /**\n   * The file extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * The path of the media (optional).\n   */\n  path: any;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n}\n\n/**\n * Interface representing provider metadata for a media object.\n */\nexport interface ProviderMetadata {\n  /**\n   * The public ID of the media.\n   */\n  public_id: string;\n\n  /**\n   * The resource type of the media.\n   */\n  resource_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StrapiDataService.html":{"url":"classes/StrapiDataService.html","title":"class - StrapiDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StrapiDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/strapi/strapi-data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service handles data operations using Strapi. Note that this service is not currently being utilized.\n\n            \n\n            \n                Extends\n            \n            \n                            DataService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/strapi/strapi-data.service.ts:11\n                            \n                        \n\n                \n                    \n                            Creates an instance of StrapiDataService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to make API requests.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(resource: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Deletes a resource from the Strapi API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The resource to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the deleted resource data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(resource: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:46\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Gets a single resource from the Strapi API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The resource to get.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the resource data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:59\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Posts a new resource to the Strapi API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The resource to post.\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data to post.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the posted resource data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:72\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Updates a resource in the Strapi API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The resource to update.\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data to update.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the updated resource data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:31\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Queries the Strapi API for a list of resources with the given parameters.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The resource to query.\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The query parameters.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                An observable of the paginated data.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Observable, map, of } from 'rxjs';\nimport { StrapiArrayResponse, StrapiResponse } from '../../../interfaces/strapi';\nimport { ApiService } from '../api.service';\nimport { DataService } from '../data.service';\nimport { PaginatedData } from '../../../interfaces/data';\n\n/**\n * This service handles data operations using Strapi. Note that this service is not currently being utilized.\n */\nexport class StrapiDataService extends DataService {\n\n  /**\n   * Creates an instance of StrapiDataService.\n   * \n   * @param api Service to make API requests.\n   */\n  constructor(\n    protected api: ApiService\n  ) {\n    super();\n  }\n\n  /**\n   * Queries the Strapi API for a list of resources with the given parameters.\n   * \n   * @param resource The resource to query.\n   * @param params The query parameters.\n   * @returns An observable of the paginated data.\n   */\n  public query(resource: string, params: any): Observable> {\n    return this.api.get(`/${resource}`, params).pipe(map((response: StrapiArrayResponse) => {\n      return {\n        data: response.data.map(data => { return { ...(data.attributes), id: data.id }; }),\n        pagination: response.meta.pagination!\n      };\n    }));\n  }\n\n  /**\n   * Gets a single resource from the Strapi API.\n   * \n   * @param resource The resource to get.\n   * @returns An observable of the resource data.\n   */\n  public get(resource: string): Observable {\n    return this.api.get(`/${resource}`).pipe(map((response: StrapiResponse) => {\n      return { id: response.data.id, ...(response.data.attributes) };\n    }));\n  }\n\n  /**\n   * Posts a new resource to the Strapi API.\n   * \n   * @param resource The resource to post.\n   * @param data The data to post.\n   * @returns An observable of the posted resource data.\n   */\n  public post(resource: string, data: any): Observable {\n    return this.api.post(`/${resource}`, { data: data } as Object).pipe(map((response: StrapiResponse) => {\n      return { id: response.data.id, ...response.data.attributes };\n    }));\n  }\n\n  /**\n   * Updates a resource in the Strapi API.\n   * \n   * @param resource The resource to update.\n   * @param data The data to update.\n   * @returns An observable of the updated resource data.\n   */\n  public put(resource: string, data: any): Observable {\n    return this.api.put(`/${resource}`, { data: data }).pipe(map((response: StrapiResponse) => {\n      return { id: response.data.id, ...response.data.attributes };\n    }));\n  }\n\n  /**\n   * Deletes a resource from the Strapi API.\n   * \n   * @param resource The resource to delete.\n   * @returns An observable of the deleted resource data.\n   */\n  public delete(resource: string): Observable {\n    return this.api.delete(`/${resource}`).pipe(map((response: StrapiResponse) => {\n      return { id: response.data.id, ...response.data.attributes };\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiExtendedUser.html":{"url":"interfaces/StrapiExtendedUser.html","title":"interface - StrapiExtendedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiExtendedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an extended Strapi user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data object containing extended user details.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiUser {\n  /**\n   * The unique identifier of the user.\n   */\n  id: number;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n\n  /**\n   * The email of the user.\n   */\n  email: string;\n}\n\n/**\n * Interface representing the payload for Strapi login.\n */\nexport interface StrapiLoginPayload {\n  /**\n   * The identifier (username or email) of the user.\n   */\n  identifier: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n}\n\n/**\n * Interface representing the payload for Strapi registration.\n */\nexport interface StrapiRegisterPayload {\n  /**\n   * The email of the user.\n   */\n  email: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n}\n\n/**\n * Interface representing the response from Strapi login.\n */\nexport interface StrapiLoginResponse {\n  /**\n   * The JWT token.\n   */\n  jwt: string;\n\n  /**\n   * The user details.\n   */\n  user: StrapiUser;\n}\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The data object containing extended user details.\n   */\n  data: {\n    /**\n     * The name of the user.\n     */\n    name: string;\n\n    /**\n     * The surname of the user.\n     */\n    surname: string;\n\n    /**\n     * The user permissions identifier.\n     */\n    users_permissions_user: number;\n\n    /**\n     * The array of player identifiers associated with the user.\n     */\n    players: number[];\n\n    /**\n     * The array of team identifiers associated with the user.\n     */\n    teams: number[];\n\n    /**\n     * The array of trainer identifiers associated with the user.\n     */\n    trainers: number[];\n  };\n}\n\n/**\n * Interface representing a generic Strapi data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiData {\n  /**\n   * The unique identifier of the data object.\n   */\n  id: number;\n\n  /**\n   * The attributes of the data object.\n   */\n  attributes: T;\n}\n\n/**\n * Interface representing a response from Strapi that includes an array of data objects.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiArrayResponse {\n  /**\n   * The array of data objects.\n   */\n  data: StrapiData[];\n\n  /**\n   * Meta information about the response.\n   */\n  meta: {\n    /**\n     * Pagination details (optional).\n     */\n    pagination?: {\n      page: number;\n      pageSize: number;\n      pageCount: number;\n      total: number;\n    };\n  };\n}\n\n/**\n * Interface representing a response from Strapi that includes a single data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiResponse {\n  /**\n   * The data object.\n   */\n  data: StrapiData;\n}\n\n/**\n * Type alias for the current Strapi user.\n */\nexport type StrapiMe = StrapiUser;\n\n/**\n * Type alias for the response from Strapi registration.\n */\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The unique identifier of the extended user (optional).\n   */\n  id?: number;\n\n  /**\n   * The name of the user.\n   */\n  name: string;\n\n  /**\n   * The surname of the user.\n   */\n  surname: string;\n\n  /**\n   * The user ID.\n   */\n  user_id: number;\n\n  /**\n   * The nickname of the user (optional).\n   */\n  nickname?: string;\n\n  /**\n   * The picture of the user (optional).\n   */\n  picture?: {\n    /**\n     * The data object containing the media details.\n     */\n    data: StrapiData;\n  };\n}\n\n/**\n * Type alias for the response from Strapi media upload.\n */\nexport type StrapiUploadResponse = StrapiMedia[];\n\n/**\n * Interface representing a Strapi media object.\n */\nexport interface StrapiMedia {\n  /**\n   * The unique identifier of the media.\n   */\n  id: number;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * Alternative text for the media.\n   */\n  alternativeText: any;\n\n  /**\n   * Caption for the media.\n   */\n  caption: any;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * The different formats of the media.\n   */\n  formats: Formats;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The preview URL of the media (optional).\n   */\n  previewUrl: any;\n\n  /**\n   * The provider of the media.\n   */\n  provider: string;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n\n  /**\n   * The creation date of the media.\n   */\n  createdAt: string;\n\n  /**\n   * The last update date of the media.\n   */\n  updatedAt: string;\n}\n\n/**\n * Interface representing the different formats of a media object.\n */\nexport interface Formats {\n  /**\n   * The large format of the media.\n   */\n  large: MediaFormat;\n\n  /**\n   * The small format of the media.\n   */\n  small: MediaFormat;\n\n  /**\n   * The medium format of the media.\n   */\n  medium: MediaFormat;\n\n  /**\n   * The thumbnail format of the media.\n   */\n  thumbnail: MediaFormat;\n}\n\n/**\n * Interface representing a specific format of a media object.\n */\nexport interface MediaFormat {\n  /**\n   * The file extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * The path of the media (optional).\n   */\n  path: any;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n}\n\n/**\n * Interface representing provider metadata for a media object.\n */\nexport interface ProviderMetadata {\n  /**\n   * The public ID of the media.\n   */\n  public_id: string;\n\n  /**\n   * The resource type of the media.\n   */\n  resource_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiExtendedUser-1.html":{"url":"interfaces/StrapiExtendedUser-1.html","title":"interface - StrapiExtendedUser-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiExtendedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an extended Strapi user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nickname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The unique identifier of the extended user (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The nickname of the user (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The picture of the user (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The surname of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user ID.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiUser {\n  /**\n   * The unique identifier of the user.\n   */\n  id: number;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n\n  /**\n   * The email of the user.\n   */\n  email: string;\n}\n\n/**\n * Interface representing the payload for Strapi login.\n */\nexport interface StrapiLoginPayload {\n  /**\n   * The identifier (username or email) of the user.\n   */\n  identifier: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n}\n\n/**\n * Interface representing the payload for Strapi registration.\n */\nexport interface StrapiRegisterPayload {\n  /**\n   * The email of the user.\n   */\n  email: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n}\n\n/**\n * Interface representing the response from Strapi login.\n */\nexport interface StrapiLoginResponse {\n  /**\n   * The JWT token.\n   */\n  jwt: string;\n\n  /**\n   * The user details.\n   */\n  user: StrapiUser;\n}\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The data object containing extended user details.\n   */\n  data: {\n    /**\n     * The name of the user.\n     */\n    name: string;\n\n    /**\n     * The surname of the user.\n     */\n    surname: string;\n\n    /**\n     * The user permissions identifier.\n     */\n    users_permissions_user: number;\n\n    /**\n     * The array of player identifiers associated with the user.\n     */\n    players: number[];\n\n    /**\n     * The array of team identifiers associated with the user.\n     */\n    teams: number[];\n\n    /**\n     * The array of trainer identifiers associated with the user.\n     */\n    trainers: number[];\n  };\n}\n\n/**\n * Interface representing a generic Strapi data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiData {\n  /**\n   * The unique identifier of the data object.\n   */\n  id: number;\n\n  /**\n   * The attributes of the data object.\n   */\n  attributes: T;\n}\n\n/**\n * Interface representing a response from Strapi that includes an array of data objects.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiArrayResponse {\n  /**\n   * The array of data objects.\n   */\n  data: StrapiData[];\n\n  /**\n   * Meta information about the response.\n   */\n  meta: {\n    /**\n     * Pagination details (optional).\n     */\n    pagination?: {\n      page: number;\n      pageSize: number;\n      pageCount: number;\n      total: number;\n    };\n  };\n}\n\n/**\n * Interface representing a response from Strapi that includes a single data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiResponse {\n  /**\n   * The data object.\n   */\n  data: StrapiData;\n}\n\n/**\n * Type alias for the current Strapi user.\n */\nexport type StrapiMe = StrapiUser;\n\n/**\n * Type alias for the response from Strapi registration.\n */\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The unique identifier of the extended user (optional).\n   */\n  id?: number;\n\n  /**\n   * The name of the user.\n   */\n  name: string;\n\n  /**\n   * The surname of the user.\n   */\n  surname: string;\n\n  /**\n   * The user ID.\n   */\n  user_id: number;\n\n  /**\n   * The nickname of the user (optional).\n   */\n  nickname?: string;\n\n  /**\n   * The picture of the user (optional).\n   */\n  picture?: {\n    /**\n     * The data object containing the media details.\n     */\n    data: StrapiData;\n  };\n}\n\n/**\n * Type alias for the response from Strapi media upload.\n */\nexport type StrapiUploadResponse = StrapiMedia[];\n\n/**\n * Interface representing a Strapi media object.\n */\nexport interface StrapiMedia {\n  /**\n   * The unique identifier of the media.\n   */\n  id: number;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * Alternative text for the media.\n   */\n  alternativeText: any;\n\n  /**\n   * Caption for the media.\n   */\n  caption: any;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * The different formats of the media.\n   */\n  formats: Formats;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The preview URL of the media (optional).\n   */\n  previewUrl: any;\n\n  /**\n   * The provider of the media.\n   */\n  provider: string;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n\n  /**\n   * The creation date of the media.\n   */\n  createdAt: string;\n\n  /**\n   * The last update date of the media.\n   */\n  updatedAt: string;\n}\n\n/**\n * Interface representing the different formats of a media object.\n */\nexport interface Formats {\n  /**\n   * The large format of the media.\n   */\n  large: MediaFormat;\n\n  /**\n   * The small format of the media.\n   */\n  small: MediaFormat;\n\n  /**\n   * The medium format of the media.\n   */\n  medium: MediaFormat;\n\n  /**\n   * The thumbnail format of the media.\n   */\n  thumbnail: MediaFormat;\n}\n\n/**\n * Interface representing a specific format of a media object.\n */\nexport interface MediaFormat {\n  /**\n   * The file extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * The path of the media (optional).\n   */\n  path: any;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n}\n\n/**\n * Interface representing provider metadata for a media object.\n */\nexport interface ProviderMetadata {\n  /**\n   * The public ID of the media.\n   */\n  public_id: string;\n\n  /**\n   * The resource type of the media.\n   */\n  resource_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiLoginPayload.html":{"url":"interfaces/StrapiLoginPayload.html","title":"interface - StrapiLoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiLoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the payload for Strapi login.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            identifier\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The identifier (username or email) of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The password of the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiUser {\n  /**\n   * The unique identifier of the user.\n   */\n  id: number;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n\n  /**\n   * The email of the user.\n   */\n  email: string;\n}\n\n/**\n * Interface representing the payload for Strapi login.\n */\nexport interface StrapiLoginPayload {\n  /**\n   * The identifier (username or email) of the user.\n   */\n  identifier: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n}\n\n/**\n * Interface representing the payload for Strapi registration.\n */\nexport interface StrapiRegisterPayload {\n  /**\n   * The email of the user.\n   */\n  email: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n}\n\n/**\n * Interface representing the response from Strapi login.\n */\nexport interface StrapiLoginResponse {\n  /**\n   * The JWT token.\n   */\n  jwt: string;\n\n  /**\n   * The user details.\n   */\n  user: StrapiUser;\n}\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The data object containing extended user details.\n   */\n  data: {\n    /**\n     * The name of the user.\n     */\n    name: string;\n\n    /**\n     * The surname of the user.\n     */\n    surname: string;\n\n    /**\n     * The user permissions identifier.\n     */\n    users_permissions_user: number;\n\n    /**\n     * The array of player identifiers associated with the user.\n     */\n    players: number[];\n\n    /**\n     * The array of team identifiers associated with the user.\n     */\n    teams: number[];\n\n    /**\n     * The array of trainer identifiers associated with the user.\n     */\n    trainers: number[];\n  };\n}\n\n/**\n * Interface representing a generic Strapi data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiData {\n  /**\n   * The unique identifier of the data object.\n   */\n  id: number;\n\n  /**\n   * The attributes of the data object.\n   */\n  attributes: T;\n}\n\n/**\n * Interface representing a response from Strapi that includes an array of data objects.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiArrayResponse {\n  /**\n   * The array of data objects.\n   */\n  data: StrapiData[];\n\n  /**\n   * Meta information about the response.\n   */\n  meta: {\n    /**\n     * Pagination details (optional).\n     */\n    pagination?: {\n      page: number;\n      pageSize: number;\n      pageCount: number;\n      total: number;\n    };\n  };\n}\n\n/**\n * Interface representing a response from Strapi that includes a single data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiResponse {\n  /**\n   * The data object.\n   */\n  data: StrapiData;\n}\n\n/**\n * Type alias for the current Strapi user.\n */\nexport type StrapiMe = StrapiUser;\n\n/**\n * Type alias for the response from Strapi registration.\n */\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The unique identifier of the extended user (optional).\n   */\n  id?: number;\n\n  /**\n   * The name of the user.\n   */\n  name: string;\n\n  /**\n   * The surname of the user.\n   */\n  surname: string;\n\n  /**\n   * The user ID.\n   */\n  user_id: number;\n\n  /**\n   * The nickname of the user (optional).\n   */\n  nickname?: string;\n\n  /**\n   * The picture of the user (optional).\n   */\n  picture?: {\n    /**\n     * The data object containing the media details.\n     */\n    data: StrapiData;\n  };\n}\n\n/**\n * Type alias for the response from Strapi media upload.\n */\nexport type StrapiUploadResponse = StrapiMedia[];\n\n/**\n * Interface representing a Strapi media object.\n */\nexport interface StrapiMedia {\n  /**\n   * The unique identifier of the media.\n   */\n  id: number;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * Alternative text for the media.\n   */\n  alternativeText: any;\n\n  /**\n   * Caption for the media.\n   */\n  caption: any;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * The different formats of the media.\n   */\n  formats: Formats;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The preview URL of the media (optional).\n   */\n  previewUrl: any;\n\n  /**\n   * The provider of the media.\n   */\n  provider: string;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n\n  /**\n   * The creation date of the media.\n   */\n  createdAt: string;\n\n  /**\n   * The last update date of the media.\n   */\n  updatedAt: string;\n}\n\n/**\n * Interface representing the different formats of a media object.\n */\nexport interface Formats {\n  /**\n   * The large format of the media.\n   */\n  large: MediaFormat;\n\n  /**\n   * The small format of the media.\n   */\n  small: MediaFormat;\n\n  /**\n   * The medium format of the media.\n   */\n  medium: MediaFormat;\n\n  /**\n   * The thumbnail format of the media.\n   */\n  thumbnail: MediaFormat;\n}\n\n/**\n * Interface representing a specific format of a media object.\n */\nexport interface MediaFormat {\n  /**\n   * The file extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * The path of the media (optional).\n   */\n  path: any;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n}\n\n/**\n * Interface representing provider metadata for a media object.\n */\nexport interface ProviderMetadata {\n  /**\n   * The public ID of the media.\n   */\n  public_id: string;\n\n  /**\n   * The resource type of the media.\n   */\n  resource_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiLoginResponse.html":{"url":"interfaces/StrapiLoginResponse.html","title":"interface - StrapiLoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiLoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the response from Strapi login.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The JWT token.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         StrapiUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiUser\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user details.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiUser {\n  /**\n   * The unique identifier of the user.\n   */\n  id: number;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n\n  /**\n   * The email of the user.\n   */\n  email: string;\n}\n\n/**\n * Interface representing the payload for Strapi login.\n */\nexport interface StrapiLoginPayload {\n  /**\n   * The identifier (username or email) of the user.\n   */\n  identifier: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n}\n\n/**\n * Interface representing the payload for Strapi registration.\n */\nexport interface StrapiRegisterPayload {\n  /**\n   * The email of the user.\n   */\n  email: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n}\n\n/**\n * Interface representing the response from Strapi login.\n */\nexport interface StrapiLoginResponse {\n  /**\n   * The JWT token.\n   */\n  jwt: string;\n\n  /**\n   * The user details.\n   */\n  user: StrapiUser;\n}\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The data object containing extended user details.\n   */\n  data: {\n    /**\n     * The name of the user.\n     */\n    name: string;\n\n    /**\n     * The surname of the user.\n     */\n    surname: string;\n\n    /**\n     * The user permissions identifier.\n     */\n    users_permissions_user: number;\n\n    /**\n     * The array of player identifiers associated with the user.\n     */\n    players: number[];\n\n    /**\n     * The array of team identifiers associated with the user.\n     */\n    teams: number[];\n\n    /**\n     * The array of trainer identifiers associated with the user.\n     */\n    trainers: number[];\n  };\n}\n\n/**\n * Interface representing a generic Strapi data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiData {\n  /**\n   * The unique identifier of the data object.\n   */\n  id: number;\n\n  /**\n   * The attributes of the data object.\n   */\n  attributes: T;\n}\n\n/**\n * Interface representing a response from Strapi that includes an array of data objects.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiArrayResponse {\n  /**\n   * The array of data objects.\n   */\n  data: StrapiData[];\n\n  /**\n   * Meta information about the response.\n   */\n  meta: {\n    /**\n     * Pagination details (optional).\n     */\n    pagination?: {\n      page: number;\n      pageSize: number;\n      pageCount: number;\n      total: number;\n    };\n  };\n}\n\n/**\n * Interface representing a response from Strapi that includes a single data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiResponse {\n  /**\n   * The data object.\n   */\n  data: StrapiData;\n}\n\n/**\n * Type alias for the current Strapi user.\n */\nexport type StrapiMe = StrapiUser;\n\n/**\n * Type alias for the response from Strapi registration.\n */\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The unique identifier of the extended user (optional).\n   */\n  id?: number;\n\n  /**\n   * The name of the user.\n   */\n  name: string;\n\n  /**\n   * The surname of the user.\n   */\n  surname: string;\n\n  /**\n   * The user ID.\n   */\n  user_id: number;\n\n  /**\n   * The nickname of the user (optional).\n   */\n  nickname?: string;\n\n  /**\n   * The picture of the user (optional).\n   */\n  picture?: {\n    /**\n     * The data object containing the media details.\n     */\n    data: StrapiData;\n  };\n}\n\n/**\n * Type alias for the response from Strapi media upload.\n */\nexport type StrapiUploadResponse = StrapiMedia[];\n\n/**\n * Interface representing a Strapi media object.\n */\nexport interface StrapiMedia {\n  /**\n   * The unique identifier of the media.\n   */\n  id: number;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * Alternative text for the media.\n   */\n  alternativeText: any;\n\n  /**\n   * Caption for the media.\n   */\n  caption: any;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * The different formats of the media.\n   */\n  formats: Formats;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The preview URL of the media (optional).\n   */\n  previewUrl: any;\n\n  /**\n   * The provider of the media.\n   */\n  provider: string;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n\n  /**\n   * The creation date of the media.\n   */\n  createdAt: string;\n\n  /**\n   * The last update date of the media.\n   */\n  updatedAt: string;\n}\n\n/**\n * Interface representing the different formats of a media object.\n */\nexport interface Formats {\n  /**\n   * The large format of the media.\n   */\n  large: MediaFormat;\n\n  /**\n   * The small format of the media.\n   */\n  small: MediaFormat;\n\n  /**\n   * The medium format of the media.\n   */\n  medium: MediaFormat;\n\n  /**\n   * The thumbnail format of the media.\n   */\n  thumbnail: MediaFormat;\n}\n\n/**\n * Interface representing a specific format of a media object.\n */\nexport interface MediaFormat {\n  /**\n   * The file extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * The path of the media (optional).\n   */\n  path: any;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n}\n\n/**\n * Interface representing provider metadata for a media object.\n */\nexport interface ProviderMetadata {\n  /**\n   * The public ID of the media.\n   */\n  public_id: string;\n\n  /**\n   * The resource type of the media.\n   */\n  resource_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StrapiMappingService.html":{"url":"classes/StrapiMappingService.html","title":"class - StrapiMappingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StrapiMappingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/strapi/strapi-mapping.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service handles mapping between Strapi data and application data models. Note that this service is not currently being utilized.\n\n            \n\n            \n                Extends\n            \n            \n                            MappingService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteUserUrl\n                            \n                            \n                                    Public\n                                getUserUrl\n                            \n                            \n                                    Public\n                                mapUser\n                            \n                            \n                                    Public\n                                mapUsers\n                            \n                            \n                                    Public\n                                queryUsersUrl\n                            \n                            \n                                    Public\n                                updateUserUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/strapi/strapi-mapping.service.ts:10\n                            \n                        \n\n                \n                    \n                            Creates an instance of StrapiMappingService.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteUserUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUserUrl(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MappingService\n\n                        \n                    \n                    \n                        \n                                Defined in         MappingService:54\n\n                        \n                    \n\n\n            \n                \n                        Returns the URL to delete a specific user by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUserUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserUrl(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MappingService\n\n                        \n                    \n                    \n                        \n                                Defined in         MappingService:34\n\n                        \n                    \n\n\n            \n                \n                        Returns the URL to get a specific user by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mapUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapUser(data: StrapiExtendedUser)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MappingService\n\n                        \n                    \n                    \n                        \n                                Defined in         MappingService:94\n\n                        \n                    \n\n\n            \n                \n                        Maps backend data to a single user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            StrapiExtendedUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data from the backend.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                The data mapped to the User interface.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mapUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapUsers(data: PaginatedData)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MappingService\n\n                        \n                    \n                    \n                        \n                                Defined in         MappingService:64\n\n                        \n                    \n\n\n            \n                \n                        Maps paginated data to a list of users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            PaginatedData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The paginated data from the backend.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PaginatedData\n\n                        \n                            \n                                The paginated data mapped to the User interface.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queryUsersUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    queryUsersUrl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         MappingService\n\n                        \n                    \n                    \n                        \n                                Defined in         MappingService:24\n\n                        \n                    \n\n\n            \n                \n                        Returns the URL to query for users.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateUserUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserUrl(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MappingService\n\n                        \n                    \n                    \n                        \n                                Defined in         MappingService:44\n\n                        \n                    \n\n\n            \n                \n                        Returns the URL to update a specific user by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL string.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { PaginatedData } from '../../../interfaces/data';\nimport { StrapiExtendedUser, StrapiResponse } from '../../../interfaces/strapi';\nimport { User } from '../../../interfaces/user';\nimport { MappingService } from '../mapping.service';\n\n/**\n * This service handles mapping between Strapi data and application data models. Note that this service is not currently being utilized.\n */\nexport class StrapiMappingService extends MappingService {\n\n  /**\n   * Creates an instance of StrapiMappingService.\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Returns the URL to query for users.\n   * \n   * @returns The URL string.\n   */\n  public queryUsersUrl(): string {\n    return 'extended-users?populate=picture&sort=id';\n  }\n\n  /**\n   * Returns the URL to get a specific user by ID.\n   * \n   * @param id The ID of the user.\n   * @returns The URL string.\n   */\n  public getUserUrl(id: number): string {\n    return `extended-users/${id}/?populate=picture&sort=id`;\n  }\n\n  /**\n   * Returns the URL to update a specific user by ID.\n   * \n   * @param id The ID of the user.\n   * @returns The URL string.\n   */\n  public updateUserUrl(id: number): string {\n    return `extended-users/${id}`;\n  }\n\n  /**\n   * Returns the URL to delete a specific user by ID.\n   * \n   * @param id The ID of the user.\n   * @returns The URL string.\n   */\n  public deleteUserUrl(id: number): string {\n    return `extended-users/${id}`;\n  }\n\n  /**\n   * Maps paginated data to a list of users.\n   * \n   * @param data The paginated data from the backend.\n   * @returns The paginated data mapped to the User interface.\n   */\n  public mapUsers(data: PaginatedData): PaginatedData {\n    const strapi_data: PaginatedData = { ...data };\n    return {\n      data: strapi_data.data.map(user => {\n        return {\n          id: user.id,\n          name: user.name,\n          surname: user.surname,\n          nickname: user.nickname,\n          picture: user.picture?.data \n            ? user.picture.data.attributes.formats.large?.url || \n              user.picture.data.attributes.formats.medium?.url || \n              user.picture.data.attributes.formats.small?.url || \n              user.picture.data.attributes.formats.thumbnail?.url \n            : undefined,\n          email: user.email,\n          isAdmin: user.isAdmin,\n          isOwner: user.isOwner\n        };\n      }),\n      pagination: data.pagination\n    };\n  }\n\n  /**\n   * Maps backend data to a single user.\n   * \n   * @param data The data from the backend.\n   * @returns The data mapped to the User interface.\n   */\n  public mapUser(data: StrapiExtendedUser): User {\n    return {\n      id: data.id,\n      name: data.name,\n      surname: data.surname,\n      nickname: data.nickname,\n      picture: data.picture?.data \n        ? data.picture.data.attributes.formats.large?.url || \n          data.picture.data.attributes.formats.medium?.url || \n          data.picture.data.attributes.formats.small?.url || \n          data.picture.data.attributes.formats.thumbnail?.url \n        : undefined,\n      email: data.email,\n      isAdmin: data.isAdmin,\n      isOwner: data.isOwner\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiMedia.html":{"url":"interfaces/StrapiMedia.html","title":"interface - StrapiMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a Strapi media object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alternativeText\n                                        \n                                \n                                \n                                        \n                                            caption\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            formats\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            previewUrl\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alternativeText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alternativeText:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Alternative text for the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        caption:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Caption for the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The creation date of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The extension of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formats:         Formats\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Formats\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The different formats of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The hash of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The height of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The MIME type of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previewUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previewUrl:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The preview URL of the media (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The provider of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Provider metadata for the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The size of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The last update date of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL of the media.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The width of the media.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiUser {\n  /**\n   * The unique identifier of the user.\n   */\n  id: number;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n\n  /**\n   * The email of the user.\n   */\n  email: string;\n}\n\n/**\n * Interface representing the payload for Strapi login.\n */\nexport interface StrapiLoginPayload {\n  /**\n   * The identifier (username or email) of the user.\n   */\n  identifier: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n}\n\n/**\n * Interface representing the payload for Strapi registration.\n */\nexport interface StrapiRegisterPayload {\n  /**\n   * The email of the user.\n   */\n  email: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n}\n\n/**\n * Interface representing the response from Strapi login.\n */\nexport interface StrapiLoginResponse {\n  /**\n   * The JWT token.\n   */\n  jwt: string;\n\n  /**\n   * The user details.\n   */\n  user: StrapiUser;\n}\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The data object containing extended user details.\n   */\n  data: {\n    /**\n     * The name of the user.\n     */\n    name: string;\n\n    /**\n     * The surname of the user.\n     */\n    surname: string;\n\n    /**\n     * The user permissions identifier.\n     */\n    users_permissions_user: number;\n\n    /**\n     * The array of player identifiers associated with the user.\n     */\n    players: number[];\n\n    /**\n     * The array of team identifiers associated with the user.\n     */\n    teams: number[];\n\n    /**\n     * The array of trainer identifiers associated with the user.\n     */\n    trainers: number[];\n  };\n}\n\n/**\n * Interface representing a generic Strapi data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiData {\n  /**\n   * The unique identifier of the data object.\n   */\n  id: number;\n\n  /**\n   * The attributes of the data object.\n   */\n  attributes: T;\n}\n\n/**\n * Interface representing a response from Strapi that includes an array of data objects.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiArrayResponse {\n  /**\n   * The array of data objects.\n   */\n  data: StrapiData[];\n\n  /**\n   * Meta information about the response.\n   */\n  meta: {\n    /**\n     * Pagination details (optional).\n     */\n    pagination?: {\n      page: number;\n      pageSize: number;\n      pageCount: number;\n      total: number;\n    };\n  };\n}\n\n/**\n * Interface representing a response from Strapi that includes a single data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiResponse {\n  /**\n   * The data object.\n   */\n  data: StrapiData;\n}\n\n/**\n * Type alias for the current Strapi user.\n */\nexport type StrapiMe = StrapiUser;\n\n/**\n * Type alias for the response from Strapi registration.\n */\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The unique identifier of the extended user (optional).\n   */\n  id?: number;\n\n  /**\n   * The name of the user.\n   */\n  name: string;\n\n  /**\n   * The surname of the user.\n   */\n  surname: string;\n\n  /**\n   * The user ID.\n   */\n  user_id: number;\n\n  /**\n   * The nickname of the user (optional).\n   */\n  nickname?: string;\n\n  /**\n   * The picture of the user (optional).\n   */\n  picture?: {\n    /**\n     * The data object containing the media details.\n     */\n    data: StrapiData;\n  };\n}\n\n/**\n * Type alias for the response from Strapi media upload.\n */\nexport type StrapiUploadResponse = StrapiMedia[];\n\n/**\n * Interface representing a Strapi media object.\n */\nexport interface StrapiMedia {\n  /**\n   * The unique identifier of the media.\n   */\n  id: number;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * Alternative text for the media.\n   */\n  alternativeText: any;\n\n  /**\n   * Caption for the media.\n   */\n  caption: any;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * The different formats of the media.\n   */\n  formats: Formats;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The preview URL of the media (optional).\n   */\n  previewUrl: any;\n\n  /**\n   * The provider of the media.\n   */\n  provider: string;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n\n  /**\n   * The creation date of the media.\n   */\n  createdAt: string;\n\n  /**\n   * The last update date of the media.\n   */\n  updatedAt: string;\n}\n\n/**\n * Interface representing the different formats of a media object.\n */\nexport interface Formats {\n  /**\n   * The large format of the media.\n   */\n  large: MediaFormat;\n\n  /**\n   * The small format of the media.\n   */\n  small: MediaFormat;\n\n  /**\n   * The medium format of the media.\n   */\n  medium: MediaFormat;\n\n  /**\n   * The thumbnail format of the media.\n   */\n  thumbnail: MediaFormat;\n}\n\n/**\n * Interface representing a specific format of a media object.\n */\nexport interface MediaFormat {\n  /**\n   * The file extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * The path of the media (optional).\n   */\n  path: any;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n}\n\n/**\n * Interface representing provider metadata for a media object.\n */\nexport interface ProviderMetadata {\n  /**\n   * The public ID of the media.\n   */\n  public_id: string;\n\n  /**\n   * The resource type of the media.\n   */\n  resource_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StrapiMediaService.html":{"url":"classes/StrapiMediaService.html","title":"class - StrapiMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StrapiMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/strapi/strapi-media.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service handles media operations using Strapi. Note that this service is not currently being utilized.\n\n            \n\n            \n                Extends\n            \n            \n                            MediaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiSvc: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/strapi/strapi-media.service.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of StrapiMediaService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiSvc\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to make API requests.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MediaService\n\n                        \n                    \n                    \n                        \n                                Defined in         MediaService:34\n\n                        \n                    \n\n\n            \n                \n                        Uploads a media file to Strapi.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The media file as a Blob.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the uploaded media IDs.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, lastValueFrom, map, tap } from 'rxjs';\nimport { UserCredentials } from '../../../interfaces/user-credentials';\nimport { UserRegisterInfo } from '../../../interfaces/user-register-info';\nimport { JwtService } from '../../jwt.service';\nimport { ApiService } from '../api.service';\nimport { AuthService } from '../auth.service';\nimport { StrapiArrayResponse, StrapiExtendedUser, StrapiLoginPayload, StrapiLoginResponse, StrapiMe, StrapiRegisterPayload, StrapiRegisterResponse, StrapiResponse, StrapiUploadResponse, StrapiUser } from '../../../interfaces/strapi';\nimport { User } from '../../../interfaces/user';\nimport { MediaService } from '../media.service';\n\n/**\n * This service handles media operations using Strapi. Note that this service is not currently being utilized.\n */\nexport class StrapiMediaService extends MediaService {\n\n  /**\n   * Creates an instance of StrapiMediaService.\n   * \n   * @param apiSvc Service to make API requests.\n   */\n  constructor(\n    private apiSvc: ApiService\n  ) { \n    super();\n  }\n\n  /**\n   * Uploads a media file to Strapi.\n   * \n   * @param blob The media file as a Blob.\n   * @returns An observable of the uploaded media IDs.\n   */\n  public upload(blob: Blob): Observable {\n    const formData = new FormData();\n    formData.append('files', blob);\n    return this.apiSvc.post('/upload', formData).pipe(map((response: StrapiUploadResponse) => {\n      return response.map(media => media.id);\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiRegisterPayload.html":{"url":"interfaces/StrapiRegisterPayload.html","title":"interface - StrapiRegisterPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiRegisterPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the payload for Strapi registration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The email of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The password of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The username of the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiUser {\n  /**\n   * The unique identifier of the user.\n   */\n  id: number;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n\n  /**\n   * The email of the user.\n   */\n  email: string;\n}\n\n/**\n * Interface representing the payload for Strapi login.\n */\nexport interface StrapiLoginPayload {\n  /**\n   * The identifier (username or email) of the user.\n   */\n  identifier: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n}\n\n/**\n * Interface representing the payload for Strapi registration.\n */\nexport interface StrapiRegisterPayload {\n  /**\n   * The email of the user.\n   */\n  email: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n}\n\n/**\n * Interface representing the response from Strapi login.\n */\nexport interface StrapiLoginResponse {\n  /**\n   * The JWT token.\n   */\n  jwt: string;\n\n  /**\n   * The user details.\n   */\n  user: StrapiUser;\n}\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The data object containing extended user details.\n   */\n  data: {\n    /**\n     * The name of the user.\n     */\n    name: string;\n\n    /**\n     * The surname of the user.\n     */\n    surname: string;\n\n    /**\n     * The user permissions identifier.\n     */\n    users_permissions_user: number;\n\n    /**\n     * The array of player identifiers associated with the user.\n     */\n    players: number[];\n\n    /**\n     * The array of team identifiers associated with the user.\n     */\n    teams: number[];\n\n    /**\n     * The array of trainer identifiers associated with the user.\n     */\n    trainers: number[];\n  };\n}\n\n/**\n * Interface representing a generic Strapi data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiData {\n  /**\n   * The unique identifier of the data object.\n   */\n  id: number;\n\n  /**\n   * The attributes of the data object.\n   */\n  attributes: T;\n}\n\n/**\n * Interface representing a response from Strapi that includes an array of data objects.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiArrayResponse {\n  /**\n   * The array of data objects.\n   */\n  data: StrapiData[];\n\n  /**\n   * Meta information about the response.\n   */\n  meta: {\n    /**\n     * Pagination details (optional).\n     */\n    pagination?: {\n      page: number;\n      pageSize: number;\n      pageCount: number;\n      total: number;\n    };\n  };\n}\n\n/**\n * Interface representing a response from Strapi that includes a single data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiResponse {\n  /**\n   * The data object.\n   */\n  data: StrapiData;\n}\n\n/**\n * Type alias for the current Strapi user.\n */\nexport type StrapiMe = StrapiUser;\n\n/**\n * Type alias for the response from Strapi registration.\n */\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The unique identifier of the extended user (optional).\n   */\n  id?: number;\n\n  /**\n   * The name of the user.\n   */\n  name: string;\n\n  /**\n   * The surname of the user.\n   */\n  surname: string;\n\n  /**\n   * The user ID.\n   */\n  user_id: number;\n\n  /**\n   * The nickname of the user (optional).\n   */\n  nickname?: string;\n\n  /**\n   * The picture of the user (optional).\n   */\n  picture?: {\n    /**\n     * The data object containing the media details.\n     */\n    data: StrapiData;\n  };\n}\n\n/**\n * Type alias for the response from Strapi media upload.\n */\nexport type StrapiUploadResponse = StrapiMedia[];\n\n/**\n * Interface representing a Strapi media object.\n */\nexport interface StrapiMedia {\n  /**\n   * The unique identifier of the media.\n   */\n  id: number;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * Alternative text for the media.\n   */\n  alternativeText: any;\n\n  /**\n   * Caption for the media.\n   */\n  caption: any;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * The different formats of the media.\n   */\n  formats: Formats;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The preview URL of the media (optional).\n   */\n  previewUrl: any;\n\n  /**\n   * The provider of the media.\n   */\n  provider: string;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n\n  /**\n   * The creation date of the media.\n   */\n  createdAt: string;\n\n  /**\n   * The last update date of the media.\n   */\n  updatedAt: string;\n}\n\n/**\n * Interface representing the different formats of a media object.\n */\nexport interface Formats {\n  /**\n   * The large format of the media.\n   */\n  large: MediaFormat;\n\n  /**\n   * The small format of the media.\n   */\n  small: MediaFormat;\n\n  /**\n   * The medium format of the media.\n   */\n  medium: MediaFormat;\n\n  /**\n   * The thumbnail format of the media.\n   */\n  thumbnail: MediaFormat;\n}\n\n/**\n * Interface representing a specific format of a media object.\n */\nexport interface MediaFormat {\n  /**\n   * The file extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * The path of the media (optional).\n   */\n  path: any;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n}\n\n/**\n * Interface representing provider metadata for a media object.\n */\nexport interface ProviderMetadata {\n  /**\n   * The public ID of the media.\n   */\n  public_id: string;\n\n  /**\n   * The resource type of the media.\n   */\n  resource_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiResponse.html":{"url":"interfaces/StrapiResponse.html","title":"interface - StrapiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a response from Strapi that includes a single data object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         StrapiData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data object.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiUser {\n  /**\n   * The unique identifier of the user.\n   */\n  id: number;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n\n  /**\n   * The email of the user.\n   */\n  email: string;\n}\n\n/**\n * Interface representing the payload for Strapi login.\n */\nexport interface StrapiLoginPayload {\n  /**\n   * The identifier (username or email) of the user.\n   */\n  identifier: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n}\n\n/**\n * Interface representing the payload for Strapi registration.\n */\nexport interface StrapiRegisterPayload {\n  /**\n   * The email of the user.\n   */\n  email: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n}\n\n/**\n * Interface representing the response from Strapi login.\n */\nexport interface StrapiLoginResponse {\n  /**\n   * The JWT token.\n   */\n  jwt: string;\n\n  /**\n   * The user details.\n   */\n  user: StrapiUser;\n}\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The data object containing extended user details.\n   */\n  data: {\n    /**\n     * The name of the user.\n     */\n    name: string;\n\n    /**\n     * The surname of the user.\n     */\n    surname: string;\n\n    /**\n     * The user permissions identifier.\n     */\n    users_permissions_user: number;\n\n    /**\n     * The array of player identifiers associated with the user.\n     */\n    players: number[];\n\n    /**\n     * The array of team identifiers associated with the user.\n     */\n    teams: number[];\n\n    /**\n     * The array of trainer identifiers associated with the user.\n     */\n    trainers: number[];\n  };\n}\n\n/**\n * Interface representing a generic Strapi data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiData {\n  /**\n   * The unique identifier of the data object.\n   */\n  id: number;\n\n  /**\n   * The attributes of the data object.\n   */\n  attributes: T;\n}\n\n/**\n * Interface representing a response from Strapi that includes an array of data objects.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiArrayResponse {\n  /**\n   * The array of data objects.\n   */\n  data: StrapiData[];\n\n  /**\n   * Meta information about the response.\n   */\n  meta: {\n    /**\n     * Pagination details (optional).\n     */\n    pagination?: {\n      page: number;\n      pageSize: number;\n      pageCount: number;\n      total: number;\n    };\n  };\n}\n\n/**\n * Interface representing a response from Strapi that includes a single data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiResponse {\n  /**\n   * The data object.\n   */\n  data: StrapiData;\n}\n\n/**\n * Type alias for the current Strapi user.\n */\nexport type StrapiMe = StrapiUser;\n\n/**\n * Type alias for the response from Strapi registration.\n */\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The unique identifier of the extended user (optional).\n   */\n  id?: number;\n\n  /**\n   * The name of the user.\n   */\n  name: string;\n\n  /**\n   * The surname of the user.\n   */\n  surname: string;\n\n  /**\n   * The user ID.\n   */\n  user_id: number;\n\n  /**\n   * The nickname of the user (optional).\n   */\n  nickname?: string;\n\n  /**\n   * The picture of the user (optional).\n   */\n  picture?: {\n    /**\n     * The data object containing the media details.\n     */\n    data: StrapiData;\n  };\n}\n\n/**\n * Type alias for the response from Strapi media upload.\n */\nexport type StrapiUploadResponse = StrapiMedia[];\n\n/**\n * Interface representing a Strapi media object.\n */\nexport interface StrapiMedia {\n  /**\n   * The unique identifier of the media.\n   */\n  id: number;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * Alternative text for the media.\n   */\n  alternativeText: any;\n\n  /**\n   * Caption for the media.\n   */\n  caption: any;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * The different formats of the media.\n   */\n  formats: Formats;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The preview URL of the media (optional).\n   */\n  previewUrl: any;\n\n  /**\n   * The provider of the media.\n   */\n  provider: string;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n\n  /**\n   * The creation date of the media.\n   */\n  createdAt: string;\n\n  /**\n   * The last update date of the media.\n   */\n  updatedAt: string;\n}\n\n/**\n * Interface representing the different formats of a media object.\n */\nexport interface Formats {\n  /**\n   * The large format of the media.\n   */\n  large: MediaFormat;\n\n  /**\n   * The small format of the media.\n   */\n  small: MediaFormat;\n\n  /**\n   * The medium format of the media.\n   */\n  medium: MediaFormat;\n\n  /**\n   * The thumbnail format of the media.\n   */\n  thumbnail: MediaFormat;\n}\n\n/**\n * Interface representing a specific format of a media object.\n */\nexport interface MediaFormat {\n  /**\n   * The file extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * The path of the media (optional).\n   */\n  path: any;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n}\n\n/**\n * Interface representing provider metadata for a media object.\n */\nexport interface ProviderMetadata {\n  /**\n   * The public ID of the media.\n   */\n  public_id: string;\n\n  /**\n   * The resource type of the media.\n   */\n  resource_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiUser.html":{"url":"interfaces/StrapiUser.html","title":"interface - StrapiUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a Strapi user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The email of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The username of the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiUser {\n  /**\n   * The unique identifier of the user.\n   */\n  id: number;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n\n  /**\n   * The email of the user.\n   */\n  email: string;\n}\n\n/**\n * Interface representing the payload for Strapi login.\n */\nexport interface StrapiLoginPayload {\n  /**\n   * The identifier (username or email) of the user.\n   */\n  identifier: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n}\n\n/**\n * Interface representing the payload for Strapi registration.\n */\nexport interface StrapiRegisterPayload {\n  /**\n   * The email of the user.\n   */\n  email: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n\n  /**\n   * The username of the user.\n   */\n  username: string;\n}\n\n/**\n * Interface representing the response from Strapi login.\n */\nexport interface StrapiLoginResponse {\n  /**\n   * The JWT token.\n   */\n  jwt: string;\n\n  /**\n   * The user details.\n   */\n  user: StrapiUser;\n}\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The data object containing extended user details.\n   */\n  data: {\n    /**\n     * The name of the user.\n     */\n    name: string;\n\n    /**\n     * The surname of the user.\n     */\n    surname: string;\n\n    /**\n     * The user permissions identifier.\n     */\n    users_permissions_user: number;\n\n    /**\n     * The array of player identifiers associated with the user.\n     */\n    players: number[];\n\n    /**\n     * The array of team identifiers associated with the user.\n     */\n    teams: number[];\n\n    /**\n     * The array of trainer identifiers associated with the user.\n     */\n    trainers: number[];\n  };\n}\n\n/**\n * Interface representing a generic Strapi data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiData {\n  /**\n   * The unique identifier of the data object.\n   */\n  id: number;\n\n  /**\n   * The attributes of the data object.\n   */\n  attributes: T;\n}\n\n/**\n * Interface representing a response from Strapi that includes an array of data objects.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiArrayResponse {\n  /**\n   * The array of data objects.\n   */\n  data: StrapiData[];\n\n  /**\n   * Meta information about the response.\n   */\n  meta: {\n    /**\n     * Pagination details (optional).\n     */\n    pagination?: {\n      page: number;\n      pageSize: number;\n      pageCount: number;\n      total: number;\n    };\n  };\n}\n\n/**\n * Interface representing a response from Strapi that includes a single data object.\n *\n * @template T The type of data being represented.\n */\nexport interface StrapiResponse {\n  /**\n   * The data object.\n   */\n  data: StrapiData;\n}\n\n/**\n * Type alias for the current Strapi user.\n */\nexport type StrapiMe = StrapiUser;\n\n/**\n * Type alias for the response from Strapi registration.\n */\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\n/**\n * Interface representing an extended Strapi user.\n */\nexport interface StrapiExtendedUser {\n  /**\n   * The unique identifier of the extended user (optional).\n   */\n  id?: number;\n\n  /**\n   * The name of the user.\n   */\n  name: string;\n\n  /**\n   * The surname of the user.\n   */\n  surname: string;\n\n  /**\n   * The user ID.\n   */\n  user_id: number;\n\n  /**\n   * The nickname of the user (optional).\n   */\n  nickname?: string;\n\n  /**\n   * The picture of the user (optional).\n   */\n  picture?: {\n    /**\n     * The data object containing the media details.\n     */\n    data: StrapiData;\n  };\n}\n\n/**\n * Type alias for the response from Strapi media upload.\n */\nexport type StrapiUploadResponse = StrapiMedia[];\n\n/**\n * Interface representing a Strapi media object.\n */\nexport interface StrapiMedia {\n  /**\n   * The unique identifier of the media.\n   */\n  id: number;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * Alternative text for the media.\n   */\n  alternativeText: any;\n\n  /**\n   * Caption for the media.\n   */\n  caption: any;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * The different formats of the media.\n   */\n  formats: Formats;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The preview URL of the media (optional).\n   */\n  previewUrl: any;\n\n  /**\n   * The provider of the media.\n   */\n  provider: string;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n\n  /**\n   * The creation date of the media.\n   */\n  createdAt: string;\n\n  /**\n   * The last update date of the media.\n   */\n  updatedAt: string;\n}\n\n/**\n * Interface representing the different formats of a media object.\n */\nexport interface Formats {\n  /**\n   * The large format of the media.\n   */\n  large: MediaFormat;\n\n  /**\n   * The small format of the media.\n   */\n  small: MediaFormat;\n\n  /**\n   * The medium format of the media.\n   */\n  medium: MediaFormat;\n\n  /**\n   * The thumbnail format of the media.\n   */\n  thumbnail: MediaFormat;\n}\n\n/**\n * Interface representing a specific format of a media object.\n */\nexport interface MediaFormat {\n  /**\n   * The file extension of the media.\n   */\n  ext: string;\n\n  /**\n   * The URL of the media.\n   */\n  url: string;\n\n  /**\n   * The hash of the media.\n   */\n  hash: string;\n\n  /**\n   * The MIME type of the media.\n   */\n  mime: string;\n\n  /**\n   * The name of the media.\n   */\n  name: string;\n\n  /**\n   * The path of the media (optional).\n   */\n  path: any;\n\n  /**\n   * The size of the media.\n   */\n  size: number;\n\n  /**\n   * The width of the media.\n   */\n  width: number;\n\n  /**\n   * The height of the media.\n   */\n  height: number;\n\n  /**\n   * Provider metadata for the media.\n   */\n  provider_metadata: ProviderMetadata;\n}\n\n/**\n * Interface representing provider metadata for a media object.\n */\nexport interface ProviderMetadata {\n  /**\n   * The public ID of the media.\n   */\n  public_id: string;\n\n  /**\n   * The resource type of the media.\n   */\n  resource_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Team.html":{"url":"interfaces/Team.html","title":"interface - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/team.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a team.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            imageUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            players\n                                        \n                                \n                                \n                                        \n                                            story\n                                        \n                                \n                                \n                                        \n                                            trainers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrl:         Media | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The media object representing the team's image (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the team.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        players\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        players:         Player[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Player[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The array of players in the team.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        story\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        story:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The story or description of the team.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trainers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trainers:         Trainer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Trainer[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The array of trainers in the team.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The unique identifier of the team (optional).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"./media\";\nimport { Player } from \"./player\";\nimport { Trainer } from \"./trainer\";\n\n/**\n * Interface representing a team.\n */\nexport interface Team {\n    /**\n     * The story or description of the team.\n     */\n    story: string;\n\n    /**\n     * The media object representing the team's image (optional).\n     */\n    imageUrl?: Media | undefined;\n\n    /**\n     * The name of the team.\n     */\n    name: string;\n\n    /**\n     * The array of players in the team.\n     */\n    players: Player[];\n\n    /**\n     * The array of trainers in the team.\n     */\n    trainers: Trainer[];\n\n    /**\n     * The unique identifier of the team (optional).\n     */\n    uuid?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamInfoComponent.html":{"url":"components/TeamInfoComponent.html","title":"component - TeamInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TeamInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/team-info/team-info.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying information about a team.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team-info\n            \n\n\n\n            \n                styleUrls\n                ./team-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./team-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCardClick\n                            \n                            \n                                onDeleteClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                players\n                            \n                            \n                                team\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onCardClicked\n                            \n                            \n                                onDeleteClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/team-info/team-info.component.ts:33\n                            \n                        \n\n                \n                    \n                            Constructor for TeamInfoComponent.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        players\n                    \n                \n                \n                    \n                        Type :         Player[] | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/team-info/team-info.component.ts:23\n                            \n                        \n                \n                    \n                        The players array to display information for the team.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        team\n                    \n                \n                \n                    \n                        Type :         Team | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/team-info/team-info.component.ts:18\n                            \n                        \n                \n                    \n                        The team object to display information for.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onCardClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/team-info/team-info.component.ts:28\n                            \n                        \n                \n                    \n                        Event emitted when the team card is clicked.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onDeleteClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/team-info/team-info.component.ts:33\n                            \n                        \n                \n                    \n                        Event emitted when the delete button is clicked.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-info/team-info.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that is called after data-bound properties are initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCardClick\n                        \n                    \n                \n            \n            \n                \nonCardClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-info/team-info.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Handler for when the team card is clicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-info/team-info.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Handler for when the delete button is clicked.\nStops the click event from propagating.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Player } from 'src/app/core/interfaces/player';\nimport { Team } from 'src/app/core/interfaces/team';\n\n/**\n * Component for displaying information about a team.\n */\n@Component({\n  selector: 'app-team-info',\n  templateUrl: './team-info.component.html',\n  styleUrls: ['./team-info.component.scss'],\n})\nexport class TeamInfoComponent implements OnInit {\n\n  /**\n   * The team object to display information for.\n   */\n  @Input() team: Team | null = null;\n\n  /**\n   * The players array to display information for the team.\n   */\n  @Input() players: Player[] | null = null;\n\n  /**\n   * Event emitted when the team card is clicked.\n   */\n  @Output() onCardClicked: EventEmitter = new EventEmitter();\n\n  /**\n   * Event emitted when the delete button is clicked.\n   */\n  @Output() onDeleteClicked: EventEmitter = new EventEmitter();\n\n  /**\n   * Constructor for TeamInfoComponent.\n   */\n  constructor() { }\n\n  /**\n   * Angular lifecycle hook that is called after data-bound properties are initialized.\n   */\n  ngOnInit() {}\n\n  /**\n   * Handler for when the team card is clicked.\n   */\n  onCardClick() {\n    this.onCardClicked.emit();\n  }\n\n  /**\n   * Handler for when the delete button is clicked.\n   * Stops the click event from propagating.\n   * \n   * @param event The click event.\n   */\n  onDeleteClick(event: any) {\n    this.onDeleteClicked.emit();\n    event.stopPropagation();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n        \n          \n        \n        {{team?.name | name:12}}\n      \n    \n    \n      {{'teams.players' | translate}}\n      \n        \n          \n            {{ player.name | name:8 }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./team-info.component.scss\n                \n                .team-card-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative; /* Add relative positioning */\n  --background: var(--ion-color-secondaryGreen);\n}\n\n.close-button {\n  position: absolute;\n  top: 0;\n  right: 0; /* Position it to the top right corner */\n  margin: 8px;\n  z-index: 1; /* Ensure it is above other content */\n}\n\n.team-name {\n  font-size: 2.5rem;\n  font-family: 'titlesFont', sans-serif;\n  color: var(--ion-color-textColor);\n}\n\nh3 {\n  color: var(--ion-color-primary);\n  text-align: center;\n}\n\n.ion-margin-start {\n  --margin-start: 10px;\n}\n\n.team-name-container {\n  width: 100%;\n  text-align: center;\n}\n\n.team-image-container {\n  margin-bottom: 10px;\n}\n\n.team-image {\n  max-width: 30vh;\n  height: auto;\n  border-radius: 50%;\n}\n\n.player-container {\n  display: inline-block;\n  border-radius: 5%;\n  background-color: #7e4d32;\n  margin: 10px;\n  padding: 2%;\n  overflow: hidden;\n}\n\nion-text.player-name {\n  color: white;\n  text-align: center;\n  font-size: 1.5rem;\n  white-space: nowrap;\n}\n\n.player-circle {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: #009a44;\n  margin: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      {{team?.name | name:12}}                    {{\\'teams.players\\' | translate}}                                    {{ player.name | name:8 }}                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'TeamInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/team.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service handles operations related to teams.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _teams\n                            \n                            \n                                    Public\n                                teams$\n                            \n                            \n                                    Private\n                                unsubscribe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addTeam\n                            \n                            \n                                    Public\n                                deleteTeam\n                            \n                            \n                                    Public\n                                getTeam\n                            \n                            \n                                    Public\n                                updateTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService, auth: AuthService, firebaseSvc: FirebaseService, players: PlayersService, firebaseAuth: FirebaseAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/team.service.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of TeamService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to make API requests.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle authentication.\n\n                                                        \n                                                \n                                                \n                                                        firebaseSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with Firebase.\n\n                                                        \n                                                \n                                                \n                                                        players\n                                                  \n                                                        \n                                                                        PlayersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle player operations.\n\n                                                        \n                                                \n                                                \n                                                        firebaseAuth\n                                                  \n                                                        \n                                                                        FirebaseAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle Firebase authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addTeam\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTeam(team: Team)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Adds a new team.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                team\n                                            \n                                                            Team\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The team to add.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the added team.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteTeam\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTeam(team: Team)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.service.ts:166\n                        \n                    \n\n\n            \n                \n                        Deletes a team.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                team\n                                            \n                                                            Team\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The team to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the deleted team.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getTeam\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTeam(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Retrieves a team by its UUID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The UUID of the team.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the team.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateTeam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTeam(team: Team)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.service.ts:124\n                        \n                    \n\n\n            \n                \n                        Updates an existing team.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                team\n                                            \n                                                            Team\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The team to update.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the update operation.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _teams\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/team.service.ts:23\n                        \n                    \n\n            \n                \n                    BehaviorSubject to track the list of teams.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        teams$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._teams.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/team.service.ts:28\n                        \n                    \n\n            \n                \n                    Observable for the list of teams.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Unsubscribe | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/team.service.ts:33\n                        \n                    \n\n            \n                \n                    Unsubscribe function for Firebase listeners.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Unsubscribe } from 'firebase/firestore';\nimport { BehaviorSubject, from, map, Observable, switchMap } from 'rxjs';\nimport { Player } from '../../interfaces/player';\nimport { Team } from '../../interfaces/team';\nimport { FirebaseDocument, FirebaseService } from '../firebase/firebase.service';\nimport { ApiService } from './api.service';\nimport { AuthService } from './auth.service';\nimport { FirebaseAuthService } from './firebase/firebase-auth.service';\nimport { PlayersService } from './player.service';\n\n/**\n * This service handles operations related to teams.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  /**\n   * BehaviorSubject to track the list of teams.\n   */\n  private _teams: BehaviorSubject = new BehaviorSubject([]);\n\n  /**\n   * Observable for the list of teams.\n   */\n  public teams$: Observable = this._teams.asObservable();\n\n  /**\n   * Unsubscribe function for Firebase listeners.\n   */\n  private unsubscribe: Unsubscribe | null = null;\n\n  /**\n   * Creates an instance of TeamService.\n   * \n   * @param api Service to make API requests.\n   * @param auth Service to handle authentication.\n   * @param firebaseSvc Service to interact with Firebase.\n   * @param players Service to handle player operations.\n   * @param firebaseAuth Service to handle Firebase authentication.\n   */\n  constructor(\n    private api: ApiService,\n    private auth: AuthService,\n    private firebaseSvc: FirebaseService,\n    private players: PlayersService,\n    private firebaseAuth: FirebaseAuthService\n  ) {\n    this.teams$ = this.firebaseSvc.teams$;\n  }\n\n  /**\n   * Retrieves a team by its UUID.\n   * \n   * @param uuid The UUID of the team.\n   * @returns An observable of the team.\n   */\n  public getTeam(uuid: string): Observable {\n    return from(this.firebaseSvc.getDocument(\"teams\", uuid)).pipe(\n      switchMap((doc: FirebaseDocument) => {\n        // Obtener los jugadores del equipo\n        const playerUUIDs: string[] = doc.data['players'].map((player: any) => player.uuid);\n        // Obtener todos los jugadores y filtrar los del equipo\n        return this.players.getAll().pipe(\n          map((allPlayers: Player[]) => {\n            const teamPlayers: Player[] = allPlayers.filter(player => {\n              // Verificar si uuid es undefined antes de usarlo\n              if (player.uuid !== undefined) {\n                return playerUUIDs.includes(player.uuid);\n              }\n              return false;\n            });\n            // Crear el objeto Team con los jugadores filtrados\n            const payload: Team = {\n              uuid: doc.id,\n              name: doc.data['name'],\n              players: teamPlayers,\n              trainers: doc.data['trainers'].map((trainer: { uuid: any; }) => ({ uuid: trainer.uuid })),\n              story: doc.data['story'],\n              imageUrl: doc.data['imageUrl']\n            };\n            return payload;\n          })\n        );\n      })\n    );\n  }\n\n  /**\n   * Adds a new team.\n   * \n   * @param team The team to add.\n   * @returns An observable of the added team.\n   */\n  public addTeam(team: Team): Observable {\n    return from(this.firebaseSvc.createDocument(\"teams\", team)).pipe(\n      switchMap((createdDocId: string) => {\n        // Obtener los UUID de los jugadores del equipo\n        let playerUUIDs: string[] = [];\n        team.players.forEach(player => {\n          if (player.uuid) {\n            playerUUIDs.push(player.uuid);\n          }\n        });\n        // Actualizar el campo 'players' del documento del equipo con los UUID de los jugadores\n        return from(this.firebaseSvc.updateDocumentField(\"teams\", createdDocId, \"players\", playerUUIDs)).pipe(\n          map(() => {\n            team.uuid = createdDocId;\n            return team; // devolver el equipo creado después de la actualización\n          })\n        );\n      })\n    );\n  }\n\n  /**\n   * Updates an existing team.\n   * \n   * @param team The team to update.\n   * @returns An observable of the update operation.\n   */\n  public updateTeam(team: Team): Observable {\n    return new Observable(obs => {\n      if (team.uuid) {\n        // Inicializar un array para almacenar los UUID de los jugadores\n        const playerUUIDs: string[] = [];\n        \n        // Recorrer los jugadores y agregar sus UUID al array\n        team.players.forEach(player => {\n          if (player.uuid) {\n            playerUUIDs.push(player.uuid);\n          }\n        });\n        \n        // Actualizar el campo 'players' con el nuevo array de UUID\n        from(this.firebaseSvc.updateDocumentField(\"teams\", team.uuid, \"players\", playerUUIDs))\n          .subscribe({\n            next: _ => {\n              obs.next(playerUUIDs); // Devolver el array de UUID\n            },\n            error: error => {\n              obs.error(error);\n            }\n          });\n      } else {\n        obs.error(new Error(\"Team does not have UUID\"));\n      }\n      if(team.uuid){\n        this.firebaseSvc.updateDocumentField(\"teams\",team.uuid,\"name\",team.name);\n        this.firebaseSvc.updateDocumentField(\"teams\",team.uuid,\"story\",team.story);\n        this.firebaseSvc.updateDocumentField(\"teams\",team.uuid,\"imageUrl\",team.imageUrl);\n      }\n      else\n        obs.error(new Error(\"Team does not have UUID\"));\n    });\n  }\n\n  /**\n   * Deletes a team.\n   * \n   * @param team The team to delete.\n   * @returns An observable of the deleted team.\n   */\n  public deleteTeam(team: Team): Observable {\n    return new Observable(obs => {\n      if (!team.uuid) {\n        obs.error(new Error(\"Team does not have UUID\"));\n        return;\n      }\n  \n      // Eliminar el equipo de la colección \"teams\"\n      from(this.firebaseSvc.deleteDocument(\"teams\", team.uuid)).subscribe({\n        next: () => {\n          obs.next(team); // Devolver el equipo eliminado en el observable\n          obs.complete();\n        },\n        error: error => {\n          obs.error(error); // Propagar cualquier error que ocurra durante el proceso\n        }\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsPage.html":{"url":"components/TeamsPage.html","title":"component - TeamsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TeamsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/teams/teams.page.ts\n\n\n\n    \n        Description\n    \n    \n        Component for managing the teams page.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n\n\n            \n                styleUrls\n                ./teams.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./teams.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                downloadTeamsCSV\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                onCardClicked\n                            \n                            \n                                    Public\n                                onDeleteClicked\n                            \n                            \n                                onNewteam\n                            \n                            \n                                    Async\n                                presentForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teams: TeamService, toast: ToastController, modal: ModalController, media: MediaService, csvService: CsvService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/teams/teams.page.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of TeamsPage.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage team data.\n\n                                                        \n                                                \n                                                \n                                                        toast\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller to show toast notifications.\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller to handle modal dialogs.\n\n                                                        \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                        MediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage media uploads.\n\n                                                        \n                                                \n                                                \n                                                        csvService\n                                                  \n                                                        \n                                                                        CsvService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to generate CSV files.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadTeamsCSV\n                        \n                    \n                \n            \n            \n                \ndownloadTeamsCSV()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/teams/teams.page.ts:187\n                        \n                    \n\n\n            \n                \n                        Downloads the teams data as a CSV file.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/teams/teams.page.ts:47\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that is called after data-bound properties are initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onCardClicked\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCardClicked(team: Team)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/teams/teams.page.ts:81\n                        \n                    \n\n\n            \n                \n                        Handles the click event on a team card.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                team\n                                            \n                                                            Team\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The team that was clicked.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onDeleteClicked\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDeleteClicked(team: Team)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/teams/teams.page.ts:124\n                        \n                    \n\n\n            \n                \n                        Handles the deletion of a team.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                team\n                                            \n                                                            Team\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The team to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNewteam\n                        \n                    \n                \n            \n            \n                \nonNewteam()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/teams/teams.page.ts:54\n                        \n                    \n\n\n            \n                \n                        Handles the creation of a new team.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentForm(data: any | null, onDismiss: (result: any) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/teams/teams.page.ts:151\n                        \n                    \n\n\n            \n                \n                        Presents a form in a modal for creating or editing a team.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The initial data to populate the form with.\n\n                                            \n                                        \n                                        \n                                                onDismiss\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Callback to handle the result when the modal is dismissed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/teams.page.ts:25\n                        \n                    \n\n            \n                \n                    Indicates if the page is currently loading.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        teams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TeamService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/teams.page.ts:37\n                        \n                    \n\n            \n                \n                    Service to manage team data.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Haptics } from '@capacitor/haptics';\nimport { ModalController, ToastController, ToastOptions } from '@ionic/angular';\nimport { dataURLtoBlob } from 'src/app/core/helpers/blob';\nimport { Team } from 'src/app/core/interfaces/team';\nimport { MediaService } from 'src/app/core/services/api/media.service';\nimport { TeamService } from 'src/app/core/services/api/team.service';\nimport { TeamDetailComponent } from 'src/app/shared/components/team-detail/team-detail.component';\nimport { take } from 'rxjs/operators';\nimport { CsvService } from 'src/app/core/services/api/csv.service';\n\n/**\n * Component for managing the teams page.\n */\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.page.html',\n  styleUrls: ['./teams.page.scss'],\n})\nexport class TeamsPage implements OnInit {\n\n  /**\n   * Indicates if the page is currently loading.\n   */\n  public loading: boolean = false;\n\n  /**\n   * Creates an instance of TeamsPage.\n   * \n   * @param teams Service to manage team data.\n   * @param toast Controller to show toast notifications.\n   * @param modal Controller to handle modal dialogs.\n   * @param media Service to manage media uploads.\n   * @param csvService Service to generate CSV files.\n   */\n  constructor(\n    public teams: TeamService,\n    private toast: ToastController,\n    private modal: ModalController,\n    private media: MediaService,\n    private csvService: CsvService\n  ) { }\n\n  /**\n   * Angular lifecycle hook that is called after data-bound properties are initialized.\n   */\n  ngOnInit() {\n    this.loading = false;\n  }\n\n  /**\n   * Handles the creation of a new team.\n   */\n  onNewteam() {\n    var onDismiss = (info: any) => {\n      switch (info.role) {\n        case 'ok': {\n          this.teams.addTeam(info.data).subscribe(async (player) => {\n            const options: ToastOptions = {\n              message: `Team ${info.data.name} created`,\n              duration: 1000,\n              position: 'bottom',\n              color: 'tertiary',\n              cssClass: 'card-ion-toast',\n            };\n            const toast = await this.toast.create(options);\n            toast.present();\n            await Haptics.notification();\n          });\n        }\n      }\n    };\n    this.presentForm(null, onDismiss);\n  }\n\n  /**\n   * Handles the click event on a team card.\n   * \n   * @param team The team that was clicked.\n   */\n  public async onCardClicked(team: Team) {\n    var onDismiss = (info: any) => {\n      switch (info.role) {\n        case 'ok': {\n          this.teams.updateTeam(info.data).subscribe(async (team) => {\n            const options: ToastOptions = {\n              message: `Team ${info.data.name} modified`,\n              duration: 1000,\n              position: 'bottom',\n              color: 'tertiary',\n              cssClass: 'card-ion-toast',\n            };\n            const toast = await this.toast.create(options);\n            toast.present();\n            await Haptics.notification();\n          });\n        }\n        break;\n        case 'delete': {\n          this.teams.deleteTeam(info.data).subscribe(async (team) => {\n            const options: ToastOptions = {\n              message: `Team ${team.name} deleted`,\n              duration: 1000,\n              position: 'bottom',\n              color: 'tertiary',\n              cssClass: 'card-ion-toast',\n            };\n            const toast = await this.toast.create(options);\n            toast.present();\n            await Haptics.notification();\n          });\n        }\n        break;\n      }\n    };\n    this.presentForm(team, onDismiss);\n  }\n\n  /**\n   * Handles the deletion of a team.\n   * \n   * @param team The team to be deleted.\n   */\n  public onDeleteClicked(team: Team) {\n    var _team: Team = { ...team };\n\n    this.teams.deleteTeam(_team).subscribe({\n      next: async (team) => {\n        const options: ToastOptions = {\n          message: `Team ${team.name} deleted`,\n          duration: 1000,\n          position: 'bottom',\n          color: 'danger',\n          cssClass: 'fav-ion-toast',\n        };\n        this.toast.create(options).then((toast) => toast.present());\n        await Haptics.notification();\n      },\n      error: (err) => {\n        console.log(err);\n      },\n    });\n  }\n\n  /**\n   * Presents a form in a modal for creating or editing a team.\n   * \n   * @param data The initial data to populate the form with.\n   * @param onDismiss Callback to handle the result when the modal is dismissed.\n   */\n  async presentForm(data: any | null, onDismiss: (result: any) => void) {\n    const modal = await this.modal.create({\n      component: TeamDetailComponent,\n      componentProps: {\n        team: data,\n      },\n      cssClass: 'fullModal',\n    });\n    await modal.present();\n    const result = await modal.onDidDismiss();\n\n    if (result && result.data) {\n      if (result.data.imageUrl) {\n        if (data && data.imageUrl === result.data.imageUrl) {\n          onDismiss(result);\n        } else {\n          dataURLtoBlob(result.data.imageUrl, (blob: Blob) => {\n            this.media.upload(blob).subscribe((media: number[]) => {\n              result.data.imageUrl = media[0];\n              result.data.imageUrl = result.data.imageUrl.url_medium;\n              onDismiss(result);\n            });\n          });\n        }\n      } else {\n        result.data.imageUrl = '';\n        onDismiss(result);\n      }\n    } else {\n      onDismiss(result);\n    }\n  }\n\n  /**\n   * Downloads the teams data as a CSV file.\n   */\n  downloadTeamsCSV() {\n    this.teams.teams$.pipe(take(1)).subscribe((teams) => {\n      const formattedTeams = teams.map(team => {\n        const teamData: any = { \n          uuid: team.uuid,\n          name: team.name,\n          imageUrl: team.imageUrl,\n          story: team.story\n        };\n        team.players.forEach((player: { name: any; uuid: any; positions: any[]; imageUrl: any; }, index: number) => {\n          teamData[`player ${index + 1} uuid`] = player.uuid;\n          teamData[`player ${index + 1} name`] = player.name;\n          teamData[`player ${index + 1} imageUrl`] = player.imageUrl;\n          teamData[`player ${index + 1} positions`] = player.positions.join(', ');\n        });\n        delete teamData.players; // Elimina el array players después de mapear los datos\n        return teamData;\n      });\n\n      const allKeys = new Set();\n      formattedTeams.forEach(team => {\n        Object.keys(team).forEach(key => allKeys.add(key));\n      });\n\n      const orderedKeys = [\n        'uuid',\n        'name',\n        'imageUrl',\n        'story',\n        ...Array.from(allKeys).filter(key => key.startsWith('player')).sort((a, b) => {\n          const regex = /player (\\d+) (uuid|name|imageUrl|positions)/;\n          const aMatch = a.match(regex);\n          const bMatch = b.match(regex);\n          if (aMatch && bMatch) {\n            if (aMatch[1] === bMatch[1]) {\n              return ['uuid', 'name', 'imageUrl', 'positions'].indexOf(aMatch[2]) - ['uuid', 'name', 'imageUrl', 'positions'].indexOf(bMatch[2]);\n            }\n            return parseInt(aMatch[1], 10) - parseInt(bMatch[1], 10);\n          }\n          return 0;\n        })\n      ];\n\n      const csvData = this.csvService.convertToCSV(formattedTeams, orderedKeys);\n      this.csvService.downloadFile(csvData, 'teams.csv');\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    {{ 'teams.downloadTeamsCsv' | translate }}  \n  \n    \n      \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./teams.page.scss\n                \n                  .rounde {\n    height: 5vh;\n    width: 4vw;\n    margin: 2%;\n    border-radius: 50px;\n  }\n  \n  .custom-loading {\n    --ion-color-primary: #7e4d32;\n  }\n  \n  ion-content {\n    --background: var(--ion-color-primaryGreen);\n  }\n  Ion-icon {\n    color:var(--ion-color-textColorDark);\n    font-weight: bold;\n  }\n  \n  ion-button.button {\n  color:var(--ion-color-textColorDark);\n  --background: var(--ion-color-mediumEndCallToAction);\n  --background-hover: var(--ion-color-callToActionGreen);\n  --background-activated: var(--ion-color-callToActionGreen);\n  --background-focused: var(--ion-color-callToActionGreen);\n  transition: box-shadow 0.3s ease;\n  font-weight: bold;\n  }\n  ion-button.button:hover {\n  --background: var(--ion-color-callToActionGreen);\n  color:var(--ion-color-textColorDark);\n  box-shadow: 0 0 20px var(--ion-color-callToActionGreen);\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ \\'teams.downloadTeamsCsv\\' | translate }}                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'TeamsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamsPageModule.html":{"url":"modules/TeamsPageModule.html","title":"module - TeamsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamsPageModule\n\n\n\ncluster_TeamsPageModule_imports\n\n\n\ncluster_TeamsPageModule_declarations\n\n\n\n\nTeamsPage\n\nTeamsPage\n\n\n\nTeamsPageModule\n\nTeamsPageModule\n\nTeamsPageModule -->\n\nTeamsPage->TeamsPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTeamsPageModule -->\n\nSharedModule->TeamsPageModule\n\n\n\n\n\nTeamsPageRoutingModule\n\nTeamsPageRoutingModule\n\nTeamsPageModule -->\n\nTeamsPageRoutingModule->TeamsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/teams/teams.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TeamsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TeamsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TeamsPageRoutingModule } from './teams-routing.module';\n\nimport { TeamsPage } from './teams.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    TeamsPageRoutingModule\n  ],\n  declarations: [TeamsPage]\n})\nexport class TeamsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamsPageRoutingModule.html":{"url":"modules/TeamsPageRoutingModule.html","title":"module - TeamsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/teams/teams-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TeamsPage } from './teams.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TeamsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Trainer.html":{"url":"interfaces/Trainer.html","title":"interface - Trainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Trainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/trainer.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a trainer, not implemented yet\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            age\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The age of the trainer.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of the trainer.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the trainer.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The surname of the trainer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Trainer {\n        /**\n         * The unique identifier of the trainer.\n         */\n        id: number;\n    \n        /**\n         * The name of the trainer.\n         */\n        name: string;\n    \n        /**\n         * The surname of the trainer.\n         */\n        surname: string;\n    \n        /**\n         * The age of the trainer.\n         */\n        age: number;\n    }\n    \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isAdmin\n                                        \n                                \n                                \n                                        \n                                            isOwner\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nickname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The email of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The unique identifier of the user (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAdmin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAdmin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates if the user is an admin.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOwner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isOwner:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates if the user is an owner.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The nickname of the user (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The URL of the user's picture (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The unique UUID of the user (optional).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { PaginatedData } from \"./data\";\nimport { Media } from \"./media\";\nimport { Player } from \"./player\";\n\n/**\n * Interface representing a user.\n */\nexport interface User {\n    /**\n     * The unique identifier of the user (optional).\n     */\n    id?: number;\n\n    /**\n     * The email of the user.\n     */\n    email: string;\n\n    /**\n     * The name of the user.\n     */\n    name: string;\n\n    /**\n     * The nickname of the user (optional).\n     */\n    nickname?: string;\n\n    /**\n     * The URL of the user's picture (optional).\n     */\n    picture?: string | undefined;\n\n    /**\n     * The unique UUID of the user (optional).\n     */\n    uuid?: string;\n\n    /**\n     * Indicates if the user is an admin.\n     */\n    isAdmin: boolean;\n\n    /**\n     * Indicates if the user is an owner.\n     */\n    isOwner: boolean;\n}\n\n/**\n * Type alias for paginated users data.\n */\nexport type PaginatedUsers = PaginatedData;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCredentials.html":{"url":"interfaces/UserCredentials.html","title":"interface - UserCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-credentials.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing user credentials.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The password of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The username of the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface UserCredentials {\n  /**\n   * The username of the user.\n   */\n  username: string;\n\n  /**\n   * The password of the user.\n   */\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoComponent.html":{"url":"components/UserInfoComponent.html","title":"component - UserInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/user-info/user-info.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying user information and managing admin status.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-info\n            \n\n\n\n            \n                styleUrls\n                ./user-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultPictureUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onIsAdminChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/user-info/user-info.component.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor for UserInfoComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected UsersService for managing user data.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/user-info/user-info.component.ts:18\n                            \n                        \n                \n                    \n                        The user object to display information for.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-info/user-info.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that is called after data-bound properties are initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onIsAdminChange\n                        \n                    \n                \n            \n            \n                \nonIsAdminChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-info/user-info.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Handler for when the isAdmin status of the user is changed.\nUpdates the user's isAdmin status in the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event containing the new isAdmin status.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultPictureUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '../../../../assets/imgs/unknown.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/user-info/user-info.component.ts:23\n                        \n                    \n\n            \n                \n                    The default picture URL to display if the user does not have a picture.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\nimport { User } from 'src/app/core/interfaces/user';\nimport { UsersService } from 'src/app/core/services/api/users.service';\n\n/**\n * Component for displaying user information and managing admin status.\n */\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss'],\n})\nexport class UserInfoComponent implements OnInit {\n\n  /**\n   * The user object to display information for.\n   */\n  @Input() user: User | null = null;\n\n  /**\n   * The default picture URL to display if the user does not have a picture.\n   */\n  defaultPictureUrl: string = '../../../../assets/imgs/unknown.png';\n\n  /**\n   * Constructor for UserInfoComponent.\n   *\n   * @param userService - Injected UsersService for managing user data.\n   */\n  constructor(private userService: UsersService) {}\n\n  /**\n   * Angular lifecycle hook that is called after data-bound properties are initialized.\n   */\n  ngOnInit(): void {}\n\n  /**\n   * Handler for when the isAdmin status of the user is changed.\n   * Updates the user's isAdmin status in the backend.\n   * \n   * @param event The event containing the new isAdmin status.\n   */\n  onIsAdminChange(event: any) {\n    if (this.user && this.user.uuid) {\n      const isAdmin = event.detail.checked;\n      this.userService.updateUser({ ...this.user, isAdmin }).subscribe(\n        () => {\n          console.log(`User ${this.user?.name} updated to isAdmin: ${isAdmin}`);\n        },\n        (error) => {\n          console.error('Error updating user:', error);\n        }\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      {{ user?.name }}\n      {{ user?.nickname }}\n      {{ user?.email }}\n    \n    \n      {{ 'users.isAdmin' | translate }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./user-info.component.scss\n                \n                .user-card {\n    border-radius: 10px;\n    padding: 10px;\n    text-align: center;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    cursor: pointer;\n  }\n  \n  .user-avatar {\n    width: 150px; /* Ancho fijo */\n    height: 150px; /* Alto fijo */\n    overflow: hidden;\n    border-radius: 50%;\n    margin-bottom: 12px;\n  }\n  \n  .user-avatar img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover; /* Para mantener la relación de aspecto */\n  }\n  \n  .big-font {\n    font-size: 1.5rem;\n    font-family: 'titlesFont', sans-serif;\n    color: var(--ion-color-textColor); /* Color del texto del nombre */\n  }\n  \n  .small-font {\n    font-size: 1rem;\n    color: var(--ion-color-textColor);\n  }\n  \n  .delete-button {\n    position: absolute;\n    top: 5px;\n    right: 5px;\n  }\n  ion-card-content{\n    background-color: var(--ion-color-secondaryGreen);\n  }\n  ion-label{\n    color: var(--ion-color-textColor);\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ user?.name }}      {{ user?.nickname }}      {{ user?.email }}              {{ \\'users.isAdmin\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRegisterInfo.html":{"url":"interfaces/UserRegisterInfo.html","title":"interface - UserRegisterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRegisterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-register-info.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the information required for user registration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nickname\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The email of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The nickname of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The password of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The surname of the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface UserRegisterInfo {\n    /**\n     * The email of the user.\n     */\n    email: string;\n\n    /**\n     * The name of the user.\n     */\n    name: string;\n\n    /**\n     * The surname of the user.\n     */\n    surname: string;\n\n    /**\n     * The password of the user.\n     */\n    password: string;\n\n    /**\n     * The nickname of the user.\n     */\n    nickname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersAdminPage.html":{"url":"components/UsersAdminPage.html","title":"component - UsersAdminPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersAdminPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/users-admin/users-admin.page.ts\n\n\n\n    \n        Description\n    \n    \n        Component for managing the users admin page.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users-admin\n            \n\n\n\n            \n                styleUrls\n                ./users-admin.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./users-admin.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(users: UsersService, modal: ModalController, toast: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/users-admin/users-admin.page.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of UsersAdminPage.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage user data.\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller to handle modal dialogs.\n\n                                                        \n                                                \n                                                \n                                                        toast\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller to show toast notifications.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users-admin/users-admin.page.ts:37\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that is called after data-bound properties are initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users-admin/users-admin.page.ts:19\n                        \n                    \n\n            \n                \n                    Indicates if the page is currently loading.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users-admin/users-admin.page.ts:29\n                        \n                    \n\n            \n                \n                    Service to manage user data.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ModalController, ToastController, ToastOptions } from '@ionic/angular';\nimport { User } from 'src/app/core/interfaces/user';\nimport { UsersService } from 'src/app/core/services/api/users.service';\n\n/**\n * Component for managing the users admin page.\n */\n@Component({\n  selector: 'app-users-admin',\n  templateUrl: './users-admin.page.html',\n  styleUrls: ['./users-admin.page.scss'],\n})\nexport class UsersAdminPage implements OnInit {\n\n  /**\n   * Indicates if the page is currently loading.\n   */\n  public loading: boolean = false;\n\n  /**\n   * Creates an instance of UsersAdminPage.\n   * \n   * @param users Service to manage user data.\n   * @param modal Controller to handle modal dialogs.\n   * @param toast Controller to show toast notifications.\n   */\n  constructor(\n    public users: UsersService,\n    private modal: ModalController,\n    private toast: ToastController\n  ) { }\n\n  /**\n   * Angular lifecycle hook that is called after data-bound properties are initialized.\n   */\n  ngOnInit(): void {\n    this.loading = true;\n    // Simulate loading process\n    setTimeout(() => {\n      this.loading = false;\n    }, 1000); // Adjust the timeout as needed\n  }\n}\n\n    \n\n    \n        \n  \n    \n   \n  \n    \n      \n        \n        \n      \n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./users-admin.page.scss\n                \n                .main-background {\n    background-color: #7e4d32;\n    color: #fff;\n  }\n  \n  .round {\n    background-color: #fff;\n    color: #fff;\n    height: 5vh;\n    width: 4vw;\n    margin: 2%;\n    border-radius: 50px;\n  }\n  \n  .custom-loading {\n    --ion-color-primary: #7e4d32;\n  }\n  \n  ion-content {\n    --ion-background-color: #005625;\n  }\n  \n  ion-icon {\n    --ion-background-color: #009a44;\n  }\n  \n  .users-panel {\n    padding: 16px;\n  }\n  \n  .user-card {\n    border-radius: 10px;\n    padding: 10px;\n    background-color: #000; /* Fondo negro */\n    text-align: center;\n    position: relative;\n    color: white; /* Texto blanco */\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    cursor: pointer;\n  }\n  \n  .user-avatar img {\n    width: 100%;\n    height: auto;\n    border-radius: 10px;\n  }\n  \n  .big-font {\n    font-size: 1.5rem;\n    font-family: 'titlesFont', sans-serif;\n    color: #7e4d32; /* Color del texto del nombre */\n  }\n  \n  .small-font {\n    font-size: 1rem;\n    color: #666;\n  }\n  \n  .delete-button {\n    position: absolute;\n    top: 5px;\n    right: 5px;\n  }\n  ion-content {\n    --background: var(--ion-color-primaryGreen);\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                   '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'GameDetailComponent', 'selector': 'app-game-detail'},{'name': 'GameInfoComponent', 'selector': 'app-game-info'},{'name': 'GamesPage', 'selector': 'app-games'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerDetailComponent', 'selector': 'app-player-detail'},{'name': 'PlayerInfoComponent', 'selector': 'app-player-info'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectorComponent', 'selector': 'app-position-selector'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'TeamDetailComponent', 'selector': 'app-team-detail'},{'name': 'TeamInfoComponent', 'selector': 'app-team-info'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserInfoComponent', 'selector': 'app-user-info'},{'name': 'UsersAdminPage', 'selector': 'app-users-admin'}];\n    var DIRECTIVES = [{'name': 'PositionImageDirective', 'selector': '[positionImage]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsersAdminPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersAdminPageModule.html":{"url":"modules/UsersAdminPageModule.html","title":"module - UsersAdminPageModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersAdminPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersAdminPageModule\n\n\n\ncluster_UsersAdminPageModule_declarations\n\n\n\ncluster_UsersAdminPageModule_imports\n\n\n\n\nUsersAdminPage\n\nUsersAdminPage\n\n\n\nUsersAdminPageModule\n\nUsersAdminPageModule\n\nUsersAdminPageModule -->\n\nUsersAdminPage->UsersAdminPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUsersAdminPageModule -->\n\nSharedModule->UsersAdminPageModule\n\n\n\n\n\nUsersAdminPageRoutingModule\n\nUsersAdminPageRoutingModule\n\nUsersAdminPageModule -->\n\nUsersAdminPageRoutingModule->UsersAdminPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/users-admin/users-admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UsersAdminPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            UsersAdminPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UsersAdminPageRoutingModule } from './users-admin-routing.module';\n\nimport { UsersAdminPage } from './users-admin.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    UsersAdminPageRoutingModule\n  ],\n  declarations: [UsersAdminPage]\n})\nexport class UsersAdminPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersAdminPageRoutingModule.html":{"url":"modules/UsersAdminPageRoutingModule.html","title":"module - UsersAdminPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersAdminPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/users-admin/users-admin-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UsersAdminPage } from './users-admin.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersAdminPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsersAdminPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service handles operations related to users.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _users\n                            \n                            \n                                    Public\n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addUser\n                            \n                            \n                                    Public\n                                deleteUser\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseSvc: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/users.service.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of UsersService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with Firebase.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    addUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/users.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Adds a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user to add.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the add operation.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/users.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Deletes a user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the delete operation.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/users.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Retrieves all users.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the list of users.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/users.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Retrieves a user by their UUID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The UUID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/users.service.ts:73\n                        \n                    \n\n\n            \n                \n                        Updates an existing user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user to update.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the update operation.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/users.service.ts:17\n                        \n                    \n\n            \n                \n                    BehaviorSubject to track the list of users.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._users.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/users.service.ts:22\n                        \n                    \n\n            \n                \n                    Observable for the list of users.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable } from 'rxjs';\nimport { PaginatedUsers, User } from 'src/app/core/interfaces/user';\nimport { FirebaseService } from '../firebase/firebase.service';\nimport { map } from 'rxjs/operators';\n\n/**\n * This service handles operations related to users.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  /**\n   * BehaviorSubject to track the list of users.\n   */\n  private _users: BehaviorSubject = new BehaviorSubject([]);\n\n  /**\n   * Observable for the list of users.\n   */\n  public users$: Observable = this._users.asObservable();\n\n  /**\n   * Creates an instance of UsersService.\n   * \n   * @param firebaseSvc Service to interact with Firebase.\n   */\n  constructor(\n    private firebaseSvc: FirebaseService\n  ) {\n    this.users$ = this.firebaseSvc.users$;\n  }\n\n  /**\n   * Adds a new user.\n   * \n   * @param user The user to add.\n   * @returns An observable of the add operation.\n   */\n  public addUser(user: User): Observable {\n    return from(this.firebaseSvc.createDocument(\"users\", {\n      name: user.name,\n      nickname: user.nickname\n    }));\n  }\n\n  /**\n   * Retrieves all users.\n   * \n   * @returns An observable of the list of users.\n   */\n  public getAll(): Observable {\n    return this.users$;\n  }\n\n  /**\n   * Retrieves a user by their UUID.\n   * \n   * @param uuid The UUID of the user.\n   * @returns An observable of the user.\n   */\n  public getUser(uuid: string): Observable {\n    return from(this.firebaseSvc.getDocument(\"users\", uuid));\n  }\n\n  /**\n   * Updates an existing user.\n   * \n   * @param user The user to update.\n   * @returns An observable of the update operation.\n   */\n  public updateUser(user: User): Observable {\n    if (user.uuid) {\n      return from(this.firebaseSvc.updateDocument(\"users\", user, user.uuid));\n    } else {\n      throw new Error(\"User does not have UUID\");\n    }\n  }\n\n  /**\n   * Deletes a user.\n   * \n   * @param user The user to delete.\n   * @returns An observable of the delete operation.\n   */\n  public deleteUser(user: User): Observable {\n    if (user.uuid) {\n      return from(this.firebaseSvc.deleteDocument(\"users\", user.uuid));\n    } else {\n      throw new Error(\"User does not have UUID\");\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VoteService.html":{"url":"injectables/VoteService.html","title":"injectable - VoteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VoteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/vote.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service handles operations related to votes.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                teams$\n                            \n                            \n                                votes$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                countVotesForTeams\n                            \n                            \n                                getVotesForGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/vote.service.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of VoteService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with Firebase.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        countVotesForTeams\n                        \n                    \n                \n            \n            \n                \ncountVotesForTeams(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/vote.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Counts votes for teams in a specific game.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the game.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of an object where the keys are team names and the values are the number of votes.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVotesForGame\n                        \n                    \n                \n            \n            \n                \ngetVotesForGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/vote.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Gets votes for a specific game.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the game.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the list of votes for the game.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        teams$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/vote.service.ts:21\n                        \n                    \n\n            \n                \n                    Observable for the list of teams.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        votes$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/vote.service.ts:16\n                        \n                    \n\n            \n                \n                    Observable for the list of votes.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { FirebaseService } from '../firebase/firebase.service';\n\n/**\n * This service handles operations related to votes.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class VoteService {\n  /**\n   * Observable for the list of votes.\n   */\n  votes$: Observable;\n\n  /**\n   * Observable for the list of teams.\n   */\n  teams$: Observable;\n\n  /**\n   * Creates an instance of VoteService.\n   * \n   * @param firebaseService Service to interact with Firebase.\n   */\n  constructor(private firebaseService: FirebaseService) {\n    this.votes$ = this.firebaseService.votes$;\n    this.teams$ = this.firebaseService.teams$;\n  }\n\n  /**\n   * Gets votes for a specific game.\n   * \n   * @param gameId The ID of the game.\n   * @returns An observable of the list of votes for the game.\n   */\n  getVotesForGame(gameId: string): Observable {\n    return this.votes$.pipe(\n      map(votes => votes.filter(vote => vote.game === gameId && vote.category === 'winnerTeam'))\n    );\n  }\n\n  /**\n   * Counts votes for teams in a specific game.\n   * \n   * @param gameId The ID of the game.\n   * @returns An observable of an object where the keys are team names and the values are the number of votes.\n   */\n  countVotesForTeams(gameId: string): Observable {\n    return this.getVotesForGame(gameId).pipe(\n      switchMap(votes =>\n        this.teams$.pipe(\n          map(teams => {\n            return votes.reduce((acc: { [teamName: string]: number }, vote) => {\n              const team = teams.find(t => t.uuid === vote.reference);\n              const teamName = team ? team.name : 'Unknown Team';\n              if (!acc[teamName]) {\n                acc[teamName] = 0;\n              }\n              acc[teamName]++;\n              return acc;\n            }, {});\n          })\n        )\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            AuthServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            DataServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            httpProviderFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            MediaServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/owner.guard.ts\n            \n            guard\n            OwnerGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/helpers/blob.ts\n            \n            function\n            dataURLtoBlob\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            PaginatedData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            Pagination\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/game.ts\n            \n            interface\n            Game\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/media.ts\n            \n            interface\n            Media\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/player.ts\n            \n            interface\n            Player\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/player.ts\n            \n            interface\n            Position\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            Formats\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            MediaFormat\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            ProviderMetadata\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiArrayResponse\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiExtendedUser\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiExtendedUser\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiLoginPayload\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiLoginResponse\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiMedia\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiRegisterPayload\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiResponse\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiUser\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/team.ts\n            \n            interface\n            Team\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/trainer.ts\n            \n            interface\n            Trainer\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-credentials.ts\n            \n            interface\n            UserCredentials\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-register-info.ts\n            \n            interface\n            UserRegisterInfo\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user.ts\n            \n            interface\n            User\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/services/api/api.service.ts\n            \n            injectable\n            ApiService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/services/api/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/core/services/api/csv.service.ts\n            \n            injectable\n            CsvService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/services/api/data.service.ts\n            \n            injectable\n            DataService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/services/api/firebase/firebase-auth.service.ts\n            \n            injectable\n            FirebaseAuthService\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/core/services/api/firebase/firebase-mapping.service.ts\n            \n            injectable\n            FirebaseMappingService\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/core/services/api/firebase/firebase-media.service.ts\n            \n            class\n            FirebaseMediaService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/services/api/game.service.ts\n            \n            injectable\n            GameService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/services/api/mapping.service.ts\n            \n            injectable\n            MappingService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/api/media.service.ts\n            \n            injectable\n            MediaService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/services/api/player.service.ts\n            \n            class\n            playerNotFoundException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/player.service.ts\n            \n            injectable\n            PlayersService\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/core/services/api/strapi/auth-strapi.service.ts\n            \n            injectable\n            AuthStrapiService\n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                src/app/core/services/api/strapi/strapi-data.service.ts\n            \n            class\n            StrapiDataService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/api/strapi/strapi-mapping.service.ts\n            \n            class\n            StrapiMappingService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/services/api/strapi/strapi-media.service.ts\n            \n            class\n            StrapiMediaService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/services/api/team.service.ts\n            \n            injectable\n            TeamService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/services/api/users.service.ts\n            \n            injectable\n            UsersService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/services/api/vote.service.ts\n            \n            injectable\n            VoteService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/services/custom-translate.service.ts\n            \n            injectable\n            CustomTranslateService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/core/services/custom-translate.service.ts\n            \n            function\n            createTranslateLoader\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            injectable\n            FirebaseService\n            \n                57 %\n                (28/49)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseDocument\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseStorageFile\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseUserCredential\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/services/http/http-client-web.provider.ts\n            \n            injectable\n            HttpClientWebProvider\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/services/http/http-client.provider.ts\n            \n            injectable\n            HttpClientProvider\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/services/jwt.service.ts\n            \n            injectable\n            JwtService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/core/validators/numeric.ts\n            \n            class\n            NumericValidator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/password.ts\n            \n            class\n            PasswordValidation\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/pages/games/games.page.ts\n            \n            component\n            GamesPage\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/pages/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/pages/players/players.page.ts\n            \n            component\n            PlayersPage\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/pages/register/register.page.ts\n            \n            component\n            RegisterPage\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/pages/settings/settings.page.ts\n            \n            component\n            SettingsPage\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/pages/splash/splash.page.ts\n            \n            component\n            SplashPage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/pages/teams/teams.page.ts\n            \n            component\n            TeamsPage\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/pages/users-admin/users-admin.page.ts\n            \n            component\n            UsersAdminPage\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/app-toolbar/app-toolbar.component.ts\n            \n            component\n            AppToolbarComponent\n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                src/app/shared/components/error-modal/error-modal.component.ts\n            \n            component\n            ErrorModalComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/game-detail/game-detail.component.ts\n            \n            component\n            GameDetailComponent\n            \n                96 %\n                (26/27)\n            \n        \n        \n            \n                \n                src/app/shared/components/game-info/game-info.component.ts\n            \n            component\n            GameInfoComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/shared/components/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            component\n            PictureSelectableComponent\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            variable\n            PICTURE_SELECTABLE_VALUE_ACCESSOR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/player-detail/player-detail.component.ts\n            \n            component\n            PlayerDetailComponent\n            \n                90 %\n                (19/21)\n            \n        \n        \n            \n                \n                src/app/shared/components/player-info/player-info.component.ts\n            \n            component\n            PlayerInfoComponent\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/shared/components/position-selector/position-selector.component.ts\n            \n            component\n            PositionSelectorComponent\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/register-form/register-form.component.ts\n            \n            component\n            RegisterFormComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/shared/components/team-detail/team-detail.component.ts\n            \n            component\n            TeamDetailComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/shared/components/team-info/team-info.component.ts\n            \n            component\n            TeamInfoComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/shared/components/user-info/user-info.component.ts\n            \n            component\n            UserInfoComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/directives/position-image.directive.ts\n            \n            directive\n            PositionImageDirective\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/name.pipe.ts\n            \n            pipe\n            NamePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.0.0\n        \n            @angular/cdk : ^16.2.12\n        \n            @angular/common : ^16.0.0\n        \n            @angular/compiler : ^16.0.0\n        \n            @angular/core : ^16.0.0\n        \n            @angular/forms : ^16.0.0\n        \n            @angular/platform-browser : ^16.0.0\n        \n            @angular/platform-browser-dynamic : ^16.0.0\n        \n            @angular/router : ^16.0.0\n        \n            @capacitor/android : 5.5.1\n        \n            @capacitor/app : 5.0.6\n        \n            @capacitor/core : ^5.6.0\n        \n            @capacitor/haptics : ^5.0.6\n        \n            @capacitor/keyboard : 5.0.6\n        \n            @capacitor/preferences : ^5.0.6\n        \n            @capacitor/status-bar : 5.0.6\n        \n            @ionic/angular : ^7.0.0\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            firebase : ^10.7.2\n        \n            ionicons : ^7.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../custom-translate.service.ts)\n                        \n                        \n                            DataServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            dataURLtoBlob   (src/.../blob.ts)\n                        \n                        \n                            httpProviderFactory   (src/.../app.module.ts)\n                        \n                        \n                            MediaServiceFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthServiceFactory\n                        \n                    \n                \n            \n            \n                \nAuthServiceFactory(backend: string, jwt: JwtService, api: ApiService, firebase: FirebaseService)\n                \n            \n\n\n\n\n            \n                \n                        Factory function to create an instance of AuthService based on the backend configuration.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                backend\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The backend to use ('Strapi' or 'Firebase').\n\n                                            \n                                        \n                                        \n                                                jwt\n                                            \n                                                            JwtService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The JwtService instance.\n\n                                            \n                                        \n                                        \n                                                api\n                                            \n                                                            ApiService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ApiService instance.\n\n                                            \n                                        \n                                        \n                                                firebase\n                                            \n                                                            FirebaseService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The FirebaseService instance.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DataServiceFactory\n                        \n                    \n                \n            \n            \n                \nDataServiceFactory(backend: string, api: ApiService)\n                \n            \n\n\n\n\n            \n                \n                        Factory function to create an instance of DataService based on the backend configuration.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                backend\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The backend to use ('Strapi').\n\n                                            \n                                        \n                                        \n                                                api\n                                            \n                                                            ApiService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ApiService instance.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpProviderFactory\n                        \n                    \n                \n            \n            \n                \nhttpProviderFactory(http: HttpClient, platform: Platform)\n                \n            \n\n\n\n\n            \n                \n                        Factory function to create an instance of HttpClientProvider.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The HttpClient instance.\n\n                                            \n                                        \n                                        \n                                                platform\n                                            \n                                                        Platform\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Platform instance.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MediaServiceFactory\n                        \n                    \n                \n            \n            \n                \nMediaServiceFactory(backend: string, api: ApiService, firebase: FirebaseService)\n                \n            \n\n\n\n\n            \n                \n                        Factory function to create an instance of MediaService based on the backend configuration.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                backend\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The backend to use ('Strapi' or 'Firebase').\n\n                                            \n                                        \n                                        \n                                                api\n                                            \n                                                            ApiService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ApiService instance.\n\n                                            \n                                        \n                                        \n                                                firebase\n                                            \n                                                            FirebaseService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The FirebaseService instance.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/services/custom-translate.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTranslateLoader\n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n                        Factory function to create a TranslateHttpLoader with a specific path for translation files.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Angular HttpClient\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/helpers/blob.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \ndataURLtoBlob(dataUrl: string, callback)\n                \n            \n\n\n\n\n            \n                \n                        Converts a data URL to a Blob.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dataUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data URL to convert.\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The callback function to call with the resulting Blob.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n#Tareas realizadas\nNada a destacar, la mayoría fue realizado en el segundo trimestre Home Slam segundo trimestre angular\n#Tareas a realizar\nTras hacer el pull del proyecto del segundo trimestre que es gran parte del proyecto realizar:\nLigeros cambios en los campos que se pueden ingresar en los cruds (imagenes y la historia) y en los mapeos debido a las incongruencias con los tipos de datos en la app android, la bbdd y el proyecto angular\nAñadir 1 tipo mas de crud (partidos)\nCheckear en el login que users son admin\nEliminar el sistema de filtrado por usuario y traer todos los datos de la bbdd\nCrear un administrador de admins\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AboutPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GamesPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GamesPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayersPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayersPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SplashPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SplashPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersAdminPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersAdminPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_GamesPageModule\n\n\n\ncluster_GamesPageModule_declarations\n\n\n\ncluster_GamesPageModule_imports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_HomePageModule_exports\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\ncluster_PlayersPageModule\n\n\n\ncluster_PlayersPageModule_declarations\n\n\n\ncluster_PlayersPageModule_imports\n\n\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\ncluster_SettingsPageModule\n\n\n\ncluster_SettingsPageModule_declarations\n\n\n\ncluster_SettingsPageModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SplashPageModule\n\n\n\ncluster_SplashPageModule_declarations\n\n\n\ncluster_SplashPageModule_imports\n\n\n\ncluster_TeamsPageModule\n\n\n\ncluster_TeamsPageModule_declarations\n\n\n\ncluster_TeamsPageModule_imports\n\n\n\ncluster_UsersAdminPageModule\n\n\n\ncluster_UsersAdminPageModule_declarations\n\n\n\ncluster_UsersAdminPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAboutPageModule -->\n\nSharedModule->AboutPageModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nGamesPageModule\n\nGamesPageModule\n\nGamesPageModule -->\n\nSharedModule->GamesPageModule\n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nSharedModule->LoginPageModule\n\n\n\n\n\nPlayersPageModule\n\nPlayersPageModule\n\nPlayersPageModule -->\n\nSharedModule->PlayersPageModule\n\n\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nSharedModule->RegisterPageModule\n\n\n\n\n\nSettingsPageModule\n\nSettingsPageModule\n\nSettingsPageModule -->\n\nSharedModule->SettingsPageModule\n\n\n\n\n\nAppToolbarComponent \n\nAppToolbarComponent \n\nAppToolbarComponent  -->\n\nSharedModule->AppToolbarComponent \n\n\n\n\n\nErrorModalComponent \n\nErrorModalComponent \n\nErrorModalComponent  -->\n\nSharedModule->ErrorModalComponent \n\n\n\n\n\nGameDetailComponent \n\nGameDetailComponent \n\nGameDetailComponent  -->\n\nSharedModule->GameDetailComponent \n\n\n\n\n\nGameInfoComponent \n\nGameInfoComponent \n\nGameInfoComponent  -->\n\nSharedModule->GameInfoComponent \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nSharedModule->LoginFormComponent \n\n\n\n\n\nNamePipe \n\nNamePipe \n\nNamePipe  -->\n\nSharedModule->NamePipe \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nPlayerDetailComponent \n\nPlayerDetailComponent \n\nPlayerDetailComponent  -->\n\nSharedModule->PlayerDetailComponent \n\n\n\n\n\nPlayerInfoComponent \n\nPlayerInfoComponent \n\nPlayerInfoComponent  -->\n\nSharedModule->PlayerInfoComponent \n\n\n\n\n\nPositionImageDirective \n\nPositionImageDirective \n\nPositionImageDirective  -->\n\nSharedModule->PositionImageDirective \n\n\n\n\n\nPositionSelectorComponent \n\nPositionSelectorComponent \n\nPositionSelectorComponent  -->\n\nSharedModule->PositionSelectorComponent \n\n\n\n\n\nRegisterFormComponent \n\nRegisterFormComponent \n\nRegisterFormComponent  -->\n\nSharedModule->RegisterFormComponent \n\n\n\n\n\nTeamDetailComponent \n\nTeamDetailComponent \n\nTeamDetailComponent  -->\n\nSharedModule->TeamDetailComponent \n\n\n\n\n\nTeamInfoComponent \n\nTeamInfoComponent \n\nTeamInfoComponent  -->\n\nSharedModule->TeamInfoComponent \n\n\n\n\n\nUserInfoComponent \n\nUserInfoComponent \n\nUserInfoComponent  -->\n\nSharedModule->UserInfoComponent \n\n\n\n\n\nTeamsPageModule\n\nTeamsPageModule\n\nTeamsPageModule -->\n\nSharedModule->TeamsPageModule\n\n\n\n\n\nUsersAdminPageModule\n\nUsersAdminPageModule\n\nUsersAdminPageModule -->\n\nSharedModule->UsersAdminPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGamesPage\n\nGamesPage\n\nGamesPageModule -->\n\nGamesPage->GamesPageModule\n\n\n\n\n\nGamesPageRoutingModule\n\nGamesPageRoutingModule\n\nGamesPageModule -->\n\nGamesPageRoutingModule->GamesPageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePage \n\nHomePage \n\nHomePage  -->\n\nHomePageModule->HomePage \n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nPlayersPage\n\nPlayersPage\n\nPlayersPageModule -->\n\nPlayersPage->PlayersPageModule\n\n\n\n\n\nPlayersPageRoutingModule\n\nPlayersPageRoutingModule\n\nPlayersPageModule -->\n\nPlayersPageRoutingModule->PlayersPageModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\nSettingsPageModule -->\n\nSettingsPage->SettingsPageModule\n\n\n\n\n\nSettingsPageRoutingModule\n\nSettingsPageRoutingModule\n\nSettingsPageModule -->\n\nSettingsPageRoutingModule->SettingsPageModule\n\n\n\n\n\nAppToolbarComponent\n\nAppToolbarComponent\n\nSharedModule -->\n\nAppToolbarComponent->SharedModule\n\n\n\n\n\nErrorModalComponent\n\nErrorModalComponent\n\nSharedModule -->\n\nErrorModalComponent->SharedModule\n\n\n\n\n\nGameDetailComponent\n\nGameDetailComponent\n\nSharedModule -->\n\nGameDetailComponent->SharedModule\n\n\n\n\n\nGameInfoComponent\n\nGameInfoComponent\n\nSharedModule -->\n\nGameInfoComponent->SharedModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nSharedModule -->\n\nLoginFormComponent->SharedModule\n\n\n\n\n\nNamePipe\n\nNamePipe\n\nSharedModule -->\n\nNamePipe->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nPlayerDetailComponent\n\nPlayerDetailComponent\n\nSharedModule -->\n\nPlayerDetailComponent->SharedModule\n\n\n\n\n\nPlayerInfoComponent\n\nPlayerInfoComponent\n\nSharedModule -->\n\nPlayerInfoComponent->SharedModule\n\n\n\n\n\nPositionImageDirective\n\nPositionImageDirective\n\nSharedModule -->\n\nPositionImageDirective->SharedModule\n\n\n\n\n\nPositionSelectorComponent\n\nPositionSelectorComponent\n\nSharedModule -->\n\nPositionSelectorComponent->SharedModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nSharedModule -->\n\nRegisterFormComponent->SharedModule\n\n\n\n\n\nTeamDetailComponent\n\nTeamDetailComponent\n\nSharedModule -->\n\nTeamDetailComponent->SharedModule\n\n\n\n\n\nTeamInfoComponent\n\nTeamInfoComponent\n\nSharedModule -->\n\nTeamInfoComponent->SharedModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nSharedModule -->\n\nUserInfoComponent->SharedModule\n\n\n\n\n\nSplashPage\n\nSplashPage\n\n\n\nSplashPageModule\n\nSplashPageModule\n\nSplashPageModule -->\n\nSplashPage->SplashPageModule\n\n\n\n\n\nSplashPageRoutingModule\n\nSplashPageRoutingModule\n\nSplashPageModule -->\n\nSplashPageRoutingModule->SplashPageModule\n\n\n\n\n\nTeamsPage\n\nTeamsPage\n\nTeamsPageModule -->\n\nTeamsPage->TeamsPageModule\n\n\n\n\n\nTeamsPageRoutingModule\n\nTeamsPageRoutingModule\n\nTeamsPageModule -->\n\nTeamsPageRoutingModule->TeamsPageModule\n\n\n\n\n\nUsersAdminPage\n\nUsersAdminPage\n\nUsersAdminPageModule -->\n\nUsersAdminPage->UsersAdminPageModule\n\n\n\n\n\nUsersAdminPageRoutingModule\n\nUsersAdminPageRoutingModule\n\nUsersAdminPageModule -->\n\nUsersAdminPageRoutingModule->UsersAdminPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        23 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    24 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    19 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    27 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        31 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/playerNotFoundException.html":{"url":"classes/playerNotFoundException.html","title":"class - playerNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  playerNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/player.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Exception thrown when a player is not found.\n\n            \n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Unsubscribe } from 'firebase/firestore';\nimport { BehaviorSubject, Observable, from, map, switchMap, of } from 'rxjs';\nimport { Player } from '../../interfaces/player';\nimport { User } from '../../interfaces/user';\nimport { FirebaseDocument, FirebaseService } from '../firebase/firebase.service';\nimport { FirebaseAuthService } from './firebase/firebase-auth.service';\n\n/**\n * Exception thrown when a player is not found.\n */\nexport class playerNotFoundException extends Error {\n  // . declare any additional properties or methods .\n}\n\n/**\n * This service handles operations related to players.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayersService {\n  uploadImage(file: any) {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * BehaviorSubject to track the list of players.\n   */\n  private _players: BehaviorSubject = new BehaviorSubject([]);\n\n  /**\n   * Observable for the list of players.\n   */\n  public players$: Observable = this._players.asObservable();\n\n  /**\n   * Unsubscribe function for Firebase listeners.\n   */\n  private unsubscribe: Unsubscribe | null = null;\n\n  /**\n   * Creates an instance of PlayersService.\n   * \n   * @param firebaseSvc Service to interact with Firebase.\n   * @param firebaseAuth Service to handle Firebase authentication.\n   */\n  constructor(\n    private firebaseSvc: FirebaseService,\n    private firebaseAuth: FirebaseAuthService\n  ) {\n    this.mapPlayers = this.mapPlayers.bind(this);\n    this.players$ = this.firebaseSvc.players$;\n  }\n\n  /**\n   * Maps a Firebase document to a Player object.\n   * \n   * @param doc The Firebase document.\n   * @returns The mapped Player object.\n   */\n  mapPlayers(doc: FirebaseDocument): Player {\n    console.log(this.firebaseSvc.user?.uid);\n    this.firebaseAuth.user$.subscribe(user => {\n      console.log(user);\n    });\n\n    return {\n      name: doc.data['name'],\n      positions: doc.data['positions'],\n      imageUrl: doc.data['imageUrl'],\n      uuid: doc.id\n    };\n  }\n\n  /**\n   * Adds a new player.\n   * \n   * @param player The player to add.\n   * @returns An observable of the added player.\n   */\n  public addPlayer(player: Player): Observable {\n    return from(this.firebaseSvc.createDocument(\"players\", player)).pipe(\n      map(() => player) // Return the created player after document creation\n    );\n  }\n\n  /**\n   * Retrieves all players.\n   * \n   * @returns An observable of the list of players.\n   */\n  public getAll(): Observable {\n    return from(this.firebaseSvc.getDocuments(\"players\")).pipe(\n      map((documents: FirebaseDocument[]) => {\n        const players: Player[] = documents.map(doc => {\n          return {\n            uuid: doc.id,\n            id: doc.data['id'],\n            name: doc.data['name'],\n            positions: doc.data['positions'],\n            imageUrl: doc.data['imageUrl']\n          } as Player;\n        });\n        this._players.next(players);\n        return players;\n      })\n    );\n  }\n\n  /**\n   * Retrieves a player by their UUID.\n   * \n   * @param uuid The UUID of the player.\n   * @returns An observable of the player.\n   */\n  public getPlayer(uuid: string): Observable {\n    return from(this.firebaseSvc.getDocument(\"players\", uuid)).pipe(switchMap((doc: FirebaseDocument) => {\n      return new Observable(player => {\n        let payload: Player = {\n          uuid: doc.id,\n          name: doc.data['name'],\n          positions: doc.data['positions'],\n          imageUrl: doc.data['imageUrl']\n        };\n        player.next(payload);\n      });\n    }));\n  }\n\n  /**\n   * Updates an existing player.\n   * \n   * @param player The player to update.\n   * @returns An observable of the updated player.\n   */\n  public updatePlayer(player: Player): Observable {\n    return new Observable(obs => {\n      if (player.uuid) {\n        this.firebaseSvc.updateDocument(\"players\", player, player.uuid);\n        obs.next(player);\n      } else {\n        obs.error(new Error(\"Player does not have UUID\"));\n      }\n    });\n  }\n\n  /**\n   * Deletes a player.\n   * \n   * @param player The player to delete.\n   * @returns An observable of the deleted player.\n   */\n  public deletePlayer(player: Player): Observable {\n    return new Observable(obs => {\n      if (!player.uuid) {\n        obs.error(new Error(\"Player does not have UUID\"));\n        return;\n      }\n\n      from(this.firebaseSvc.deleteDocument(\"players\", player.uuid)).pipe(\n        switchMap(() => {\n          return this.firebaseAuth.me();\n        }),\n      ).subscribe({\n        next: () => {\n          obs.next(player);\n          obs.complete();\n        },\n        error: error => {\n          obs.error(error);\n        }\n      });\n    });\n  }\n\n  /**\n   * Deletes all players.\n   * \n   * @returns An observable of the delete operation.\n   */\n  public deleteAll(): Observable {\n    return new Observable(observer => {\n      setTimeout(() => {\n        this._players.next([]);\n        observer.next();\n        observer.complete();\n      }, 1000);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            JwtToken   (src/.../jwt.service.ts)\n                        \n                        \n                            PaginatedUsers   (src/.../user.ts)\n                        \n                        \n                            StrapiMe   (src/.../strapi.ts)\n                        \n                        \n                            StrapiRegisterResponse   (src/.../strapi.ts)\n                        \n                        \n                            StrapiUploadResponse   (src/.../strapi.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/jwt.service.ts\n    \n    \n        \n            \n                \n                    \n                    JwtToken\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    src/app/core/interfaces/user.ts\n    \n    \n        \n            \n                \n                    \n                    PaginatedUsers\n                \n            \n            \n                \n                    Type alias for paginated users data.\n\n                \n            \n            \n                \n                        PaginatedData\n\n                \n            \n        \n    \n    src/app/core/interfaces/strapi.ts\n    \n    \n        \n            \n                \n                    \n                    StrapiMe\n                \n            \n            \n                \n                    Type alias for the current Strapi user.\n\n                \n            \n            \n                \n                            StrapiUser\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StrapiRegisterResponse\n                \n            \n            \n                \n                    Type alias for the response from Strapi registration.\n\n                \n            \n            \n                \n                            StrapiLoginResponse\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StrapiUploadResponse\n                \n            \n            \n                \n                    Type alias for the response from Strapi media upload.\n\n                \n            \n            \n                \n                            StrapiMedia[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            PICTURE_SELECTABLE_VALUE_ACCESSOR   (src/.../picture-selectable.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Flag indicating whether the application is running in production mode.\n   */\n  production: true,\n\n  /**\n   * Base URL for the API.\n   */\n  apiUrl: 'https://homeslam-service.onrender.com/api',\n\n  /**\n   * Firebase configuration settings.\n   */\n  firebase: {\n    /**\n     * API key for accessing Firebase services.\n     * This key is used to authenticate requests from the app to Firebase services.\n     */\n    apiKey: \"AIzaSyBchnuXNDVVrvb2wZnqycwtlpOykUL13i8\",\n\n    /**\n     * Auth domain for Firebase authentication.\n     * This domain is used for hosting Firebase Authentication UI.\n     */\n    authDomain: \"home-slam.firebaseapp.com\",\n\n    /**\n     * Project ID for the Firebase project.\n     * This is a unique identifier for the Firebase project.\n     */\n    projectId: \"home-slam\",\n\n    /**\n     * Storage bucket URL for Firebase storage.\n     * This URL is used to store and retrieve files in Firebase Storage.\n     */\n    storageBucket: \"home-slam.appspot.com\",\n\n    /**\n     * Messaging sender ID for Firebase Cloud Messaging.\n     * This ID is used to identify the sender of Firebase Cloud Messages.\n     */\n    messagingSenderId: \"953186845113\",\n\n    /**\n     * App ID for the Firebase application.\n     * This is a unique identifier for the Firebase app.\n     */\n    appId: \"1:953186845113:web:a60b0796e386cb700e3668\",\n\n    /**\n     * Measurement ID for Firebase Analytics.\n     * This ID is used to collect and analyze app usage data.\n     */\n    measurementId: \"G-173F4GXFJ4\"\n  },\n}\n                    \n                \n\n            \n                \n                    Environment configuration for the production environment.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Flag indicating whether the application is running in production mode.\n   */\n  production: true,\n\n  /**\n   * Base URL for the API.\n   */\n  apiUrl: 'https://homeslam-service.onrender.com/api',\n\n  /**\n   * Firebase configuration settings.\n   */\n  firebase: {\n    /**\n     * API key for accessing Firebase services.\n     */\n    apiKey: \"AIzaSyBchnuXNDVVrvb2wZnqycwtlpOykUL13i8\",\n\n    /**\n     * Auth domain for Firebase authentication.\n     */\n    authDomain: \"home-slam.firebaseapp.com\",\n\n    /**\n     * Project ID for the Firebase project.\n     */\n    projectId: \"home-slam\",\n\n    /**\n     * Storage bucket URL for Firebase storage.\n     */\n    storageBucket: \"home-slam.appspot.com\",\n\n    /**\n     * Messaging sender ID for Firebase Cloud Messaging.\n     */\n    messagingSenderId: \"953186845113\",\n\n    /**\n     * App ID for the Firebase application.\n     */\n    appId: \"1:953186845113:web:a60b0796e386cb700e3668\",\n\n    /**\n     * Measurement ID for Firebase Analytics.\n     */\n    measurementId: \"G-173F4GXFJ4\"\n  },\n}\n                    \n                \n\n            \n                \n                    Environment configuration for the production environment.\n\n                \n            \n\n        \n    \n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PICTURE_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true\n}\n                    \n                \n\n            \n                \n                    Define a constant for providing the PictureSelectableComponent as a NG_VALUE_ACCESSOR.\nThis allows the component to be used as a form control.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
